{"version":3,"sources":["Components/Header/Header.module.scss","Components/Main/SideBar/Friends/Friend/Friend.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.module.scss","Components/Main/UserPage/UsersPage.module.scss","Components/Main/LoginPage/LoginForm/LoginForm.module.scss","hooks/useShowMore.tsx","Components/Main/ProfilePage/ProfilePage.module.scss","Components/Main/SideBar/Friends/Friends.module.scss","Components/Main/UserPage/FilterForm/FilterForm.module.scss","Components/Header/Pages/Page/Page.module.scss","Components/Main/ProfilePage/UserInfor/UserInfo.module.scss","Components/Main/ProfilePage/UserInfor/UserPhoto/UserPhoto.module.scss","Components/Common/Preloader/Preloader.module.scss","hooks/useShowMore.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.module.scss","Components/Main/LoginPage/LoginPage.module.scss","Api/Chat-api.ts","Redux/Chat-Reducer.ts","Components/Header/Pages/Pages.module.scss","Components/Header/UserAvatar/UserAvatar.module.scss","Components/Main/SideBar/SidebarUserPhoto/SidebarUserPhoto.module.scss","Components/Main/Main.module.scss","Components/Common/Peginator/Paginator.module.scss","Components/NotFound/NotFound.module.scss","Components/Footer/Footer.module.scss","Redux/selectors/auth-selector.ts","Api/Api.ts","Components/Header/Pages/Page/Page.tsx","Components/Header/Pages/Pages.tsx","Api/Auth-api.ts","Api/Profile-api.ts","Api/security-api.ts","Redux/auth-Reducer.ts","Components/Header/UserAvatar/UserAvatar.tsx","Components/Header/Header.tsx","Redux/Profile-Reducer.ts","Redux/selectors/profile-selector.ts","images/loading.gif","Components/Common/Preloader/Preloader.tsx","Components/Main/ProfilePage/UserInfor/UserPhoto/UserPhoto.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/Status/StatusForm/StatusForm.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/Status/Status.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/ProfileData.tsx","Components/Main/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.tsx","Components/Main/ProfilePage/UserInfor/UserInfo.tsx","images/mainImg.jpg","Components/Main/ProfilePage/ProfilePage.tsx","Components/Main/SideBar/SidebarUserPhoto/SidebarUserPhoto.tsx","Redux/selectors/sideBar-selector.ts","Redux/selectors/user-selector.ts","Api/User-api.ts","Redux/User-Reducer.ts","Redux/Sidebar-Reducer.ts","Components/Main/SideBar/Friends/Friend/Friend.tsx","Components/Main/SideBar/Friends/Friends.tsx","Components/Main/SideBar/SideBar.tsx","Components/Common/Peginator/Paginator.tsx","Components/Main/UserPage/FilterForm/FilterForm.tsx","Components/Main/UserPage/User/User.tsx","Components/Main/UserPage/UserPage.tsx","Components/Main/LoginPage/LoginForm/LoginForm.tsx","Components/Main/LoginPage/LoginPage.tsx","Components/NotFound/NotFound.tsx","Components/Main/Main.tsx","Redux/App-Reducer.ts","Redux/store.ts","Redux/selectors/App-selector.ts","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Common/formsControl/formsControl.module.scss","validators/validators.ts","Components/Main/UserPage/User/User.module.scss","Components/Main/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.module.scss","images/img.jpg","Components/Main/ProfilePage/UserInfor/ProfileData/ProfileData.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/Status/Status.module.scss","Components/Main/SideBar/SideBar.module.scss"],"names":["module","exports","useShowMore","text","textSize","componentName","useState","showFullText","setShowFullText","isShowMoreText","fullText","shortText","textLength","length","isTextBig","slice","menu","className","s","Item","showMoreText","onClick","ws","subscribers","message","open","onMessageHandler","e","forEach","JSON","parse","data","onErrorHandler","console","log","onCloseHandler","setTimeout","createWebsocket","onOpenHandler","clineUp","close","removeEventListener","WebSocket","addEventListener","WebSocketApi","wsEvent","callback","filter","send","initialState","messages","wsStatus","ChatReducer","state","action","type","payload","map","m","id","uuidv4","index","arr","actions","_messageEventSubscriber","messageEventSubscriberCreator","dispatch","_openEventSubscriber","openEventSubscriberCreator","status","startMessageEventListening","a","stopMessageEventListening","sendMessage","selectUserId","auth","selectIsAuth","isAuth","selectAuthUserProfile","authUserProfile","selectCaptchaUrl","captchaUrl","selectErrorMessage","errorMessage","ResultCodeEnum","ResultCodeCaptchaEnum","Page","React","memo","Icon","path","pageName","page","activeClassName","active","to","Pages","pages","HomeOutlined","UserSwitchOutlined","instance","axios","create","baseURL","withCredentials","headers","AuthApi","authMe","get","response","login","email","password","rememberMe","captcha","post","logout","delete","ProfileApi","getUser","getStatus","updateStatus","put","updateUserPhoto","file","FormData","append","updateProfile","profile","SecurityApi","getCaptchaUrl","resultCode","success","stringify","errorText","error","getAuthUser","getState","userId","url","UserAvatar","useSelector","userName","fullName","useDispatch","danger","block","info","icon","UserOutlined","avatar","Button","overlay","Header","header","headerContent","headerContentLeft","logo","headerContentRight","isFetching","isLoading","updateProfileStatus","icons","facebook","AiFillFacebook","website","CgWebsite","vk","BiConfused","github","AiFillGithub","instagram","AiFillInstagram","twitter","AiOutlineTwitter","youtube","AiFillYoutube","mainLink","photos","selectProfile","selectStatus","selectIsFetching","selectIsLoading","selectUpdateProfileStatus","selectIcons","Preloader","styles","preloader","src","preloaderImg","UserPhoto","img","isOwner","userPhoto","alt","htmlFor","ownerPhoto","hidden","onChange","currentTarget","files","FormItem","Form","maxLength","maxLengthCreator","StatusForm","deActivateEditMode","initialValues","statusText","validate","value","onSubmit","values","setSubmitting","errors","onBlur","name","render","field","placeholder","autoFocus","component","formStyle","fieldError","Status","editMode","setEditMode","fullStatusText","showMoreMenu","showFullStatusText","isStatusTextBig","setShowFullStatusText","shortStatusText","showMore","placement","showInfoMenu","cursor","onDoubleClick","UserContact","contactsTitle","contactsValue","contact","href","UserContacts","contactsElements","Object","keys","contacts","key","i","push","contactsValues","noContacts","ProfileData","useParams","profileData","userNameAndStatus","aboutMe","lookingForAJob","professionalSkills","lookingForAJobDescription","ProfileDataForm","contactsFormCreator","label","formError","enableReinitialize","isSubmitting","setErrors","resetForm","centered","title","visible","onCancel","footer","htmlType","authUserId","fieldName","split","join","toLocaleLowerCase","form","pre","Group","formItem","reqAndMaxLValCreator","checked","contactsHeader","UserInfo","AuthUserId","history","useHistory","useEffect","userIdFromUrl","Number","aboutUser","large","editIcon","ProfilePage","profilePage","mainImg","mainPhoto","contentBottom","SidebarUserPhoto","selectFriends","sideBar","friends","selectUsers","users","selectTotalUserCount","totalUsersCount","selectPageNumber","pageNumber","selectPageSize","pageSize","selectFilter","selectFollowingInProgress","followInProgress","UserApi","getUsers","term","friend","follow","unFollow","isFollowInProgress","items","totalCount","getFriends","result","Friend","fullFriendName","showFullFriendName","isFriendNameBig","shortFriendName","friendPhoto","small","followingInProgress","friendName","imgAndName","sparePhoto","nameLink","disabled","some","selectedId","Promise","all","then","deleteFriend","Friends","friendElements","f","SidBaFriends","test","SideBar","sidebar","sidebarTop","sidebarBottom","viewP","Paginator","totalItemsCount","onPageChangeHandler","pagesCount","paginator","defaultCurrent","size","current","total","currentPageNumber","Option","Select","FilterForm","onFilterHandler","String","setFieldValue","select","SendButton","User","button","followed","FPId","user","userInfo","rightBlock","spareUserPhoto","leftBlock","bottomLine","UsersPage","totalUserCount","urlData","queryString","location","search","actualPageNumber","actualFilter","pathname","usersElements","u","usersPage","userPageTopBlock","usersHeader","notFound","LoginForm","Password","emailValidator","captchaImg","LoginPage","loginPage","loginHeader","NotFound","ChatPage","lazy","Main","main","match","exact","fallback","isAuthorizeFinished","rootReducer","combineReducers","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_store","selectIsAuthorizeFinished","Footer","App","document","body","style","backgroundColor","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","required","MaxLength"],"mappings":"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","file":"static/js/main.737a5082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3oEm5\",\"headerContent\":\"Header_headerContent__3cVMj\",\"headerContentLeft\":\"Header_headerContentLeft__1kmPt\",\"logo\":\"Header_logo__1iYvb\",\"headerContentRight\":\"Header_headerContentRight__3Tyn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3rcLc\",\"imgAndName\":\"Friend_imgAndName__29T5Z\",\"nameLink\":\"Friend_nameLink__a9yL5\",\"showMore\":\"Friend_showMore__1Sr6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"UserContacts_contacts__1UZql\",\"contactsTitle\":\"UserContacts_contactsTitle__1kr9E\",\"contactsValues\":\"UserContacts_contactsValues__3wubr\",\"noContacts\":\"UserContacts_noContacts__1gMHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__1sRyt\",\"userPageTopBlock\":\"UsersPage_userPageTopBlock__3Bci2\",\"usersHeader\":\"UsersPage_usersHeader__1u2Vr\",\"notFound\":\"UsersPage_notFound__5YT83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2eYfX\",\"captcha\":\"LoginForm_captcha__35FDF\",\"captchaImg\":\"LoginForm_captchaImg__214o4\"};","import React, { useState } from 'react'\r\nimport { Menu } from 'antd';\r\nimport s from './useShowMore.module.scss'\r\n\r\n\r\nexport const useShowMore = (text: string, textSize: number, componentName: string) => {\r\n\r\n    const [showFullText, setShowFullText] = useState<boolean>(false)\r\n\r\n\r\n    const isShowMoreText = componentName !== 'Friend'\r\n\r\n    const fullText: string = text\r\n    let shortText = '';\r\n    const textLength = text?.length\r\n    const isTextBig = textLength && textLength > textSize\r\n\r\n    if (isTextBig) {\r\n        shortText = text.slice(0, textSize)\r\n    }\r\n\r\n\r\n    let menu = (\r\n        <Menu className={s.menu}>\r\n            <Menu.Item className={s.showMoreText} onClick={() => {\r\n                isShowMoreText && setShowFullText(true)\r\n            }}>\r\n                <span>{isShowMoreText ? 'show more' : fullText}</span>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return {\r\n        fullText,\r\n        isTextBig,\r\n        showFullText,\r\n        setShowFullText,\r\n        menu,\r\n        shortText\r\n    }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__3cw9o\",\"mainImg\":\"ProfilePage_mainImg__3K70k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidBaFriends\":\"Friends_SidBaFriends__2VO4V\",\"friends\":\"Friends_friends__2CVfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterForm_form__3cdQq\",\"select\":\"FilterForm_select__1g4_-\",\"SendButton\":\"FilterForm_SendButton__33gxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__3wQj-\",\"active\":\"Page_active__biFyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"UserInfo_aboutUser__35ua9\",\"editIcon\":\"UserInfo_editIcon__2x5OA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"UserPhoto_userPhoto__LI0GT\",\"ownerPhoto\":\"UserPhoto_ownerPhoto__2RVmm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__vZgi5\",\"profilePre\":\"Preloader_profilePre__Xazmf\",\"statusPre\":\"Preloader_statusPre__2Ed3w\",\"photosPre\":\"Preloader_photosPre__1Q_Cs\",\"usersPre\":\"Preloader_usersPre__14nWV\",\"updProfPre\":\"Preloader_updProfPre__1slyY\",\"appPre\":\"Preloader_appPre__7OWEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"useShowMore_menu__1Ia2o\",\"showMoreText\":\"useShowMore_showMoreText__ZZx--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"UserContact_contact__3qAUb\",\"icon\":\"UserContact_icon__3LE9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginHeader\":\"LoginPage_loginHeader__36LCV\"};","import { wsStatusType } from './../Redux/Chat-Reducer';\r\n\r\nlet ws: null | WebSocket = null\r\n\r\nlet subscribers = {\r\n    message: [] as MessageSubscriberType[],\r\n    open: [] as OpenSubscriberType[]\r\n}\r\n\r\n\r\nconst onMessageHandler = (e: MessageEvent) => {\r\n    subscribers.message.forEach((s) => s(JSON.parse(e.data)))\r\n}\r\n\r\nconst onErrorHandler = () => {\r\n    console.log('error')\r\n}\r\n\r\nconst onCloseHandler = () => {\r\n    setTimeout(() => {\r\n        createWebsocket()\r\n        console.log('reconnecting')\r\n        subscribers.open.forEach((s) => s('close'))\r\n    }, 3000)\r\n}\r\nconst onOpenHandler = () => {\r\n    subscribers.open.forEach((s) => s('open'))\r\n}\r\n\r\n\r\nconst clineUp = () => {\r\n    ws?.close();\r\n    ws?.removeEventListener('message', onMessageHandler);\r\n    ws?.removeEventListener('close', onCloseHandler);\r\n    ws?.removeEventListener('open', onOpenHandler);\r\n    ws?.removeEventListener('error', onErrorHandler);\r\n}\r\n\r\nconst createWebsocket = () => {\r\n    clineUp()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    ws.addEventListener('message', onMessageHandler);\r\n    ws.addEventListener('close', onCloseHandler);\r\n    ws.addEventListener('open', onOpenHandler);\r\n    ws.addEventListener('error', onErrorHandler);\r\n}\r\n\r\nexport const WebSocketApi = {\r\n    start() {\r\n        createWebsocket()\r\n    },\r\n    subscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        subscribers = { ...subscribers, [wsEvent]: [...subscribers[wsEvent], callback] }\r\n    },\r\n    unSubscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        //@ts-ignore\r\n        subscribers = { ...subscribers, [wsEvent]: subscribers[wsEvent].filter((s: SubscriberType) => s !== callback) }\r\n    },\r\n    send(message: string) {\r\n        ws?.send(message);\r\n    },\r\n    stop() {\r\n        clineUp()\r\n        subscribers = { ...subscribers, message: [] }\r\n        subscribers = { ...subscribers, open: [] }\r\n    }\r\n}\r\n\r\n\r\nexport type WsEventType = 'message' | 'open'\r\ntype SubscriberType = MessageSubscriberType | OpenSubscriberType\r\nexport type MessageSubscriberType = (messages: MessageType[]) => void\r\nexport type OpenSubscriberType = (wsStatus: wsStatusType) => void\r\nexport type MessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n    id: string \r\n}","import { MessageSubscriberType, OpenSubscriberType } from './../Api/Chat-api';\r\nimport { Dispatch } from 'react';\r\nimport { MessageType, WebSocketApi } from '../Api/Chat-api';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst initialState = {\r\n   messages: [] as MessageType[],\r\n   wsStatus: 'open' as wsStatusType,\r\n}\r\n\r\nexport type wsStatusType = 'open' | 'close'\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ChatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CR/MESSAGES_RECEIVED':  \r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages\r\n                    .map((m: MessageType) => ( {...m, id: uuidv4()} ))]\r\n                .filter((m, index, arr) => index >= arr.length - 50)\r\n            }\r\n            case 'CR/CLEAN_MESSAGES':\r\n            case 'CR/WS_STATUS_CHANGED': \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setMessages: ( messages: MessageType[]) => ({ type: 'CR/MESSAGES_RECEIVED', payload: { messages } } as const),\r\n    wsStatusChanged: (wsStatus: wsStatusType) => ({ type: 'CR/WS_STATUS_CHANGED', payload: { wsStatus } } as const),\r\n    cleanMessages: () =>\r\n    ({ type: 'CR/CLEAN_MESSAGES', payload:{ messages: [] as MessageType[] } } as const),\r\n}\r\n\r\n\r\nlet _messageEventSubscriber: null | MessageSubscriberType = null;\r\nconst messageEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_messageEventSubscriber){\r\n        _messageEventSubscriber = (messages: MessageType[]) => {\r\n            dispatch(actions.setMessages( messages))\r\n        }\r\n    }\r\n    return _messageEventSubscriber\r\n}\r\n\r\nlet _openEventSubscriber: null | OpenSubscriberType = null;\r\nconst openEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_openEventSubscriber){\r\n        _openEventSubscriber = (status: wsStatusType) => {\r\n            dispatch(actions.wsStatusChanged(status))\r\n        }\r\n    }\r\n    return _openEventSubscriber\r\n}\r\n\r\nexport const startMessageEventListening = ():  ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n            WebSocketApi.start();\r\n            WebSocketApi.subscribe('message', messageEventSubscriberCreator(dispatch));\r\n            WebSocketApi.subscribe('open', openEventSubscriberCreator(dispatch))\r\n    }\r\n}\r\n\r\nexport const stopMessageEventListening = ():  ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        WebSocketApi.stop();\r\n        WebSocketApi.unSubscribe('message', messageEventSubscriberCreator(dispatch));\r\n        WebSocketApi.unSubscribe('open', openEventSubscriberCreator(dispatch));\r\n        dispatch(actions.cleanMessages())\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType<ActionsType> => {\r\n    return async () => {\r\n        WebSocketApi.send(message)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pages_pages__2_8Fx\",\"ant-menu-submenu-title\":\"Pages_ant-menu-submenu-title__2FIm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserAvatar_avatar__ibIyS\",\"img\":\"UserAvatar_img__1uriq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"SidebarUserPhoto_userPhoto__2ClUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__pOQy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__h4jVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__f8O5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__bQfBH\"};","import { StateType } from './../store';\r\n\r\nexport const selectUserId = (state: StateType) => {\r\n    return state.auth.id\r\n}\r\n\r\nexport const selectIsAuth = (state: StateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectAuthUserProfile = (state: StateType) => {\r\n    return state.auth.authUserProfile\r\n}\r\n\r\n\r\nexport const selectCaptchaUrl = (state: StateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const selectErrorMessage = (state: StateType) => {\r\n    return state.auth.errorMessage\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n      \"API-KEY\": \"bb181220-b3ed-4219-9d9b-5805e04d81d5\"\r\n    }\r\n  });\r\n\r\n  export type ResponseType<D = {}, RC = ResultCodeEnum> = {\r\n    resultCode: RC\r\n    messages: string[]\r\n    data: D\r\n  }\r\n\r\n  export enum ResultCodeEnum {\r\n    success = 0,\r\n    error = 1\r\n  }\r\n\r\n  export enum ResultCodeCaptchaEnum {\r\n    captcha = 10\r\n  }","import React, { } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport s from './Page.module.scss';\r\nimport { IconType } from \"react-icons\";\r\n\r\n\r\ntype PropsType = {\r\n    Icon: IconType\r\n    path: string\r\n    pageName: string\r\n}\r\n\r\nexport const Page: React.FC<PropsType> = React.memo(({ Icon, path, pageName }) => {\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <NavLink activeClassName={s.active} to={`/${path}`}>\r\n                <Icon />\r\n               <span>{pageName} </span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './Pages.module.scss';\r\nimport {\r\n    HomeOutlined,\r\n    UserSwitchOutlined\r\n} from '@ant-design/icons';\r\nimport { Page } from \"./Page/Page\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\n\r\nexport const Pages: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.pages}>\r\n            <div>\r\n                <Page key={'page1'} Icon={HomeOutlined as IconType} path={'profile'} pageName={'profile'}/>\r\n            </div>\r\n            <div>\r\n                <Page key={'page2'} Icon={UserSwitchOutlined as IconType} path={'users'} pageName={'users'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import { instance, ResponseType, ResultCodeCaptchaEnum, ResultCodeEnum } from \"./Api\"\r\n\r\nexport type AuthMeDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe: async () => {\r\n        const response = await instance.get<ResponseType<AuthMeDataType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    login: async (email: string, password: string, rememberMe: boolean, captcha = '') => {\r\n        const response = await instance.post<ResponseType<{}, ResultCodeEnum | ResultCodeCaptchaEnum>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n}","import { PhotosType } from '../types/types';\r\nimport { ProfileType } from \"../types/types\"\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype PhotosResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getUser: async (id: number) => {\r\n        const response = await instance.get<ProfileType>(`profile/${id}`)\r\n        return response.data\r\n    },\r\n    getStatus: async (id: number) => {\r\n        const response = await instance.get<string>(`profile/status/${id}`)\r\n        return response.data\r\n    },\r\n    updateStatus: async (status: string) => {\r\n        const response = await instance.put<ResponseType>(`profile/status`, { status })\r\n        return response.data\r\n    },\r\n    updateUserPhoto: async (file: File) => {\r\n        const data = new FormData()\r\n        data.append('file', file)\r\n        const response = await instance.put<ResponseType<PhotosResponseType>>(`profile/photo`, data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        return response.data\r\n    },\r\n    updateProfile: async (profile: ProfileType) => {\r\n            const response = await instance.put<ResponseType>(`profile`, profile)\r\n            return response.data\r\n        }\r\n}\r\n","import { instance } from \"./Api\"\r\n\r\ntype CaptchaUrlType = {\r\n    url: string\r\n} \r\n\r\nexport const SecurityApi = {\r\n    getCaptchaUrl: async () => {\r\n        const response = await instance.get<CaptchaUrlType>(`security/get-captcha-url`)\r\n        return response.data\r\n    },\r\n}","import { ResultCodeCaptchaEnum } from './../Api/Api';\r\nimport { ProfileType } from '../types/types';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { AuthApi } from '../Api/Auth-api';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { ProfileApi } from \"../Api/Profile-api\";\r\nimport { SecurityApi } from '../Api/security-api';\r\nimport { message } from 'antd';\r\n\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    authUserProfile: null as null | ProfileType,\r\n    captchaUrl: null as null | string,\r\n    errorMessage: null as null | string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AuthReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AU/AUTH_VERIFIED':\r\n        case 'AU/AUTH_USER_RECEIVED':\r\n        case 'AU/CAPTCHA_URL_IS_RECEIVED':\r\n        case 'AU/AN_ERROR_HAS_OCCURRED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    authVerified: (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n        ({ type: 'AU/AUTH_VERIFIED', payload: { email, login, id, isAuth } } as const),\r\n    authUserReceived: (authUserProfile: ProfileType) =>\r\n        ({ type: 'AU/AUTH_USER_RECEIVED', payload: { authUserProfile } } as const),\r\n    captchaUrlIsReceived: (captchaUrl: string | null) =>\r\n        ({ type: 'AU/CAPTCHA_URL_IS_RECEIVED', payload: { captchaUrl } } as const),\r\n    AnErrorHasOccurred: (errorMessage: string | null) =>\r\n        ({ type: 'AU/AN_ERROR_HAS_OCCURRED', payload: { errorMessage } } as const),\r\n}\r\n\r\n\r\nexport const authMe = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.authMe()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                const { id, login, email } = data.data\r\n                dispatch(actions.authVerified(id, login, email, true))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = (): ThunkType<ActionsType> => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const state = getState()\r\n            const userId = state.auth.id\r\n            if (userId) {\r\n                const data = await ProfileApi.getUser(userId)\r\n                dispatch(actions.authUserReceived(data))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, Password: string, rememberMe: boolean, captcha: string): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.login(email, Password, rememberMe, captcha)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(authMe())\r\n                dispatch(actions.captchaUrlIsReceived(null))\r\n                dispatch(actions.AnErrorHasOccurred(null))\r\n            } else if (data.resultCode === ResultCodeCaptchaEnum.captcha) {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n                dispatch(getCaptchaUrl())\r\n            } else {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.logout()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.authVerified(null, null, null, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await SecurityApi.getCaptchaUrl()\r\n            dispatch(actions.captchaUrlIsReceived(data.url))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { Button, Dropdown, Menu, message } from 'antd';\r\nimport React from 'react';\r\nimport s from \"./UserAvatar.module.scss\";\r\nimport {\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAuthUserProfile, selectIsAuth } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logout } from '../../../Redux/auth-Reducer';\r\n\r\n\r\nexport const UserAvatar: React.FC = React.memo(() => {\r\n\r\n    const profile = useSelector(selectAuthUserProfile)\r\n    const userName = profile?.fullName\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    function handleMenuClick(e: any) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\">\r\n                <Button danger block onClick={()=> {\r\n                    dispatch(logout())\r\n                }}>\r\n                    logout\r\n                </Button>\r\n          </Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={handleMenuClick} icon={<UserOutlined />}>\r\n                2nd menu item\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={s.avatar}>\r\n            {isAuth ? <Dropdown.Button overlay={menu}>\r\n                <NavLink to={'/profile'}>\r\n                    <div> {userName}</div>\r\n                </NavLink>\r\n            </Dropdown.Button> \r\n            : <div>\r\n                <Button>\r\n                    <NavLink to={'./login'}>\r\n                        login\r\n                    </NavLink>\r\n                </Button>\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n","import { BiNetworkChart } from 'react-icons/bi';\r\nimport React from 'react';\r\nimport s from \"./Header.module.scss\";\r\nimport { Pages } from './Pages/Pages';\r\nimport { UserAvatar } from './UserAvatar/UserAvatar';\r\n\r\n\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n\r\n  return (\r\n    <div className={s.header}>\r\n      <div className={s.headerContent}>\r\n        <div className={s.headerContentLeft}>\r\n          <div className={s.logo}>\r\n            <BiNetworkChart />\r\n            <span>SOCIAL NETWORK</span>\r\n          </div>\r\n        </div>\r\n        <div className={s.headerContentRight}>\r\n          <div>\r\n            <Pages />\r\n          </div>\r\n          <div>\r\n            <UserAvatar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","import { IconType } from 'react-icons/lib';\r\nimport { getAuthUser } from './auth-Reducer';\r\nimport { ProfileApi } from './../Api/Profile-api';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { PhotosType, ProfileType } from '../types/types';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\nimport { AiFillFacebook, AiFillGithub, AiFillInstagram, AiOutlineTwitter, AiFillYoutube } from 'react-icons/ai';\r\nimport { CgWebsite } from 'react-icons/cg';\r\nimport { BiConfused } from 'react-icons/bi';\r\n\r\n\r\n\r\nconst initialState = {\r\n    profile: null as null | ProfileType,\r\n    status: '' as string,\r\n    isFetching: false,\r\n    isLoading: false,\r\n    updateProfileStatus: null as null | UpdateProfileStatusType,\r\n    icons: {\r\n        facebook: AiFillFacebook,\r\n        website: CgWebsite,\r\n        vk: BiConfused,\r\n        github: AiFillGithub,\r\n        instagram: AiFillInstagram,\r\n        twitter: AiOutlineTwitter,\r\n        youtube: AiFillYoutube,\r\n        mainLink: BiConfused,\r\n    } as {[key: string]: IconType}\r\n}\r\n\r\ntype UpdateProfileStatusType = 'ready' | 'pending' | 'error';\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PR/STATUS_RECEIVED':\r\n        case 'PR/SET_IS_FETCHING':\r\n        case 'PR/PHOTOS_IS_LOADED':\r\n        case 'PR/SET_UPDATE_PROFILE_STATUS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'PR/PHOTOS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.payload.photos } as ProfileType\r\n            }\r\n        case 'PR/PROFILE_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (profile: ProfileType) => ({ type: 'PR/PROFILE_RECEIVED', payload: profile } as const),\r\n    statusReceived: (status: string) => ({ type: 'PR/STATUS_RECEIVED', payload: { status } } as const),\r\n    setIsFetching: (isFetching: boolean) => ({ type: 'PR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    photosReceived: (photos: PhotosType) => ({ type: 'PR/PHOTOS_RECEIVED', payload: { photos } } as const),\r\n    photosILoaded: (isLoading: boolean) => ({ type: 'PR/PHOTOS_IS_LOADED', payload: { isLoading } } as const),\r\n    setUpdateProfileStatus: (updateProfileStatus: UpdateProfileStatusType) =>\r\n        ({ type: 'PR/SET_UPDATE_PROFILE_STATUS', payload: { updateProfileStatus } } as const),\r\n}\r\n\r\n\r\nexport const getUser = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await ProfileApi.getUser(id)\r\n            dispatch(actions.usersReceived(data))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStatus = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.getStatus(id)\r\n            dispatch(actions.statusReceived(data))\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.updateStatus(status)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.statusReceived(status))\r\n            }\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserPhoto = (file: File): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.photosILoaded(true))\r\n            const data = await ProfileApi.updateUserPhoto(file)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.photosReceived(data.data.photos))\r\n                dispatch(getAuthUser())\r\n            }\r\n            dispatch(actions.photosILoaded(false))\r\n\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfile = (profile: ProfileType, setErrors: any): ThunkType<ActionsType> => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch(actions.setUpdateProfileStatus('pending'))\r\n            const data = await ProfileApi.updateProfile(profile)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.setUpdateProfileStatus('ready'))\r\n                const authUserId = getState().auth.id\r\n                if (authUserId) {\r\n                    dispatch(getUser(authUserId))\r\n                }\r\n            } else {\r\n                dispatch(actions.setUpdateProfileStatus('error'))\r\n                const errorMessage = data.messages[data.messages.length - 1]\r\n                const fieldName = errorMessage.split('->')[1].split(')').join('').toLocaleLowerCase()\r\n                setErrors({ 'contacts': { [fieldName]: errorMessage } })\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { StateType } from './../store';\r\n\r\nexport const selectProfile = (state: StateType) => {\r\n    return state.profile.profile\r\n}\r\n\r\nexport const selectStatus = (state: StateType) => {\r\n    return state.profile.status\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.profile.isFetching\r\n}\r\n\r\nexport const selectIsLoading = (state: StateType) => {\r\n    return state.profile.isLoading\r\n}\r\n\r\nexport const selectUpdateProfileStatus = (state: StateType) => {\r\n    return state.profile.updateProfileStatus\r\n}\r\n\r\nexport const selectIcons = (state: StateType) => {\r\n    return state.profile.icons\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.e94beeb6.gif\";","import { Image } from \"antd\";\r\nimport React from \"react\";\r\nimport preloaderImg from '../../../images/loading.gif';\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n    styles: string\r\n}\r\n\r\nexport const Preloader: React.FC<PropsType> = React.memo(({styles})=> {\r\n    return (\r\n        <div className={s.preloader + ' ' + s[styles]}>\r\n            <Image src={preloaderImg}/>\r\n        </div>\r\n    )\r\n})\r\n","import { Input } from \"antd\"\r\nimport React, { FormEvent } from \"react\"\r\nimport s from './UserPhoto.module.scss'\r\nimport userPhoto from '../../../../../images/img.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateUserPhoto } from '../../../../../Redux/Profile-Reducer';\r\nimport { selectIsLoading } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\"\r\n\r\n\r\ntype PropsType = {\r\n    img: string | null\r\n    isOwner: boolean\r\n}\r\n\r\nexport const UserPhoto: React.FC<PropsType> = React.memo(({ img, isOwner }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(selectIsLoading)\r\n\r\n    const onHandleSelect = (e: FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files?.length && e.currentTarget.files[0]\r\n        dispatch(updateUserPhoto(file as File))\r\n    }\r\n\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            {!isOwner \r\n            ? <label htmlFor=\"file\">\r\n                <img className={s.ownerPhoto} src={img ? img : userPhoto} alt={'userPhoto'} />\r\n             </label>\r\n            : <img src={img ? img : userPhoto} alt={'userPhoto'} />\r\n            }\r\n            <Input hidden={true} type={'file'} id={'file'} onChange={onHandleSelect} />\r\n                {isLoading && <Preloader styles={'photosPre'} />}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {  Input, Form } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStatus } from \"../../../../../../../Redux/selectors/profile-selector\";\r\nimport { maxLengthCreator } from \"../../../../../../../validators/validators\";\r\nimport formStyle from '../../../../../../Common/formsControl/formsControl.module.scss';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: (statusText: string)=> void\r\n}\r\ntype StatusFormValuesType = {\r\n    statusText: string\r\n}\r\n\r\nexport const StatusForm: React.FC<PropsType> = React.memo(({deActivateEditMode}) => {\r\n\r\n    const status = useSelector(selectStatus);\r\n\r\n    const submit = (values: StatusFormValuesType, actions: FormikHelpers<StatusFormValuesType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ statusText: status } as StatusFormValuesType}\r\n            validate={(value)=>{}}\r\n            onSubmit={submit}\r\n        >\r\n            {({ values, errors}) => (\r\n                <FormikForm onBlur={()=> {\r\n                    if(!(values.statusText.length > 30)){\r\n                        deActivateEditMode(values.statusText)\r\n                    }\r\n                }} >\r\n                    <FormItem>\r\n                        <Field name=\"statusText\"\r\n                        validate={maxLength}\r\n                         render={({ field }: FieldProps) => <Input {...field}  placeholder=\"status\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"statusText\" component={() => <div className={formStyle.fieldError}> {errors.statusText} </div>} />\r\n                    </FormItem>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateStatus } from \"../../../../../../Redux/Profile-Reducer\";\r\nimport { selectIsFetching, selectStatus } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../../../Common/Preloader/Preloader\";\r\nimport s from './Status.module.scss';\r\nimport { StatusForm } from \"./StatusForm/StatusForm\";\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { useShowMore } from \"../../../../../../hooks/useShowMore\";\r\n\r\ninterface IPropsType {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Status: React.FC<IPropsType> = React.memo(({ isOwner }) => {\r\n\r\n    const isFetching = useSelector(selectIsFetching);\r\n    const status = useSelector(selectStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    let {\r\n        fullText: fullStatusText,\r\n        menu: showMoreMenu,\r\n        showFullText: showFullStatusText,\r\n        isTextBig: isStatusTextBig,\r\n        setShowFullText: setShowFullStatusText,\r\n        shortText: shortStatusText\r\n    } = useShowMore(status, 20, 'Status')\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = (statusText: string) => {\r\n        setEditMode(false)\r\n        dispatch(updateStatus(statusText))\r\n    }\r\n\r\n\r\n    const showMore = isStatusTextBig ?\r\n        <Dropdown overlay={showMoreMenu} placement=\"topCenter\">\r\n            <div className={s.showMore} onClick={() => {\r\n                setShowFullStatusText(true)\r\n            }}>\r\n                ...\r\n            </div>\r\n        </Dropdown>\r\n        : null\r\n\r\n    let statusText = status\r\n    if (isStatusTextBig) {\r\n        statusText = shortStatusText\r\n    } else if (!statusText) {\r\n        statusText = 'no status'\r\n    } else {\r\n        statusText = fullStatusText\r\n    }\r\n\r\n    fullStatusText = fullStatusText ? fullStatusText : 'no status'\r\n\r\n\r\n\r\n    const showInfoMenu = (\r\n        <Menu className={s.menu}>\r\n            <Menu.Item className={s.showInfoMenu}>\r\n                <div>\r\n                    doubleClick\r\n                </div>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {!editMode && <div className={`${s.status} ${isOwner ? s.cursor : ''}`} onDoubleClick={() => {\r\n                if (isOwner) {\r\n                    activateEditMode()\r\n                }\r\n            }}>\r\n                {isOwner\r\n                    ? <Dropdown overlay={showInfoMenu} placement=\"topCenter\">\r\n                        <div>\r\n                            status:\r\n                        </div>\r\n                    </Dropdown>\r\n                    : <div>\r\n                        status:\r\n                    </div>}\r\n                <div className={s.statusText}>\r\n                    {showFullStatusText ? fullStatusText : statusText}\r\n                </div>\r\n                <div >\r\n                    {showFullStatusText || showMore}\r\n                </div>\r\n            </div>}\r\n            {editMode && <div>\r\n                <StatusForm deActivateEditMode={deActivateEditMode} />\r\n            </div>}\r\n            {isFetching && <div><Preloader styles={'statusPre'} /></div>}\r\n        </>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport s from \"./UserContact.module.scss\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\ntype PropsType = {\r\n    contactsTitle: string\r\n    contactsValue: string\r\n    Icon: IconType\r\n}\r\n\r\nexport const UserContact: React.FC<PropsType> = React.memo(({ contactsTitle, contactsValue, Icon }) => {\r\n    return (\r\n        <div>\r\n            {contactsValue ?\r\n            <div className={s.contact}>\r\n                <span>{contactsTitle}:</span> \r\n                <a href={contactsValue}> <Icon className={s.icon}/></a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIcons } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { ContactsType, ProfileType } from \"../../../../../../types/types\";\r\nimport { UserContact } from \"./UserContact/UserContact\";\r\nimport s from \"./UserContacts.module.scss\";\r\n\r\n\r\ntype PropsType = {\r\n   profile: ProfileType\r\n}\r\n\r\nexport const UserContacts: React.FC<PropsType> = React.memo(({profile}) => {\r\n\r\n    const icons = useSelector(selectIcons) \r\n\r\n    const contactsElements = Object.keys(profile?.contacts).map((key) =>  {\r\n        return <UserContact key={key} contactsTitle={key} Icon={icons[key]} contactsValue={profile?.contacts[key as keyof ContactsType]} />\r\n    })\r\n\r\n  let arr: number[] = []\r\n  let contactsTitle = Object.values(profile?.contacts)\r\n\r\n  for(let i = 0; i < contactsTitle.length; i++) {\r\n    if(contactsTitle[i]){\r\n       arr.push(i)\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className={s.contacts}>\r\n            <div className={s.contactsTitle}>\r\n                contacts\r\n            </div>\r\n            <div className={s.contactsValues}>\r\n               {arr.length ? contactsElements : <div className={s.noContacts}>no contacts</div>}\r\n              </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router\"\r\nimport { selectProfile } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { ProfileType } from \"../../../../../types/types\"\r\nimport { ParamTypes } from \"../UserInfo\"\r\nimport s from './ProfileData.module.scss';\r\nimport { Status } from \"./Status/Status\"\r\nimport { UserContacts } from \"./UserContacts/UserContacts\"\r\n\r\n\r\n\r\nexport const ProfileData: React.FC = React.memo(() => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const { userId } = useParams<ParamTypes>()\r\n  \r\n    return (\r\n        <div className={s.profileData}>\r\n            <div className={s.userNameAndStatus}>\r\n                <div className={s.userName}>\r\n                    {profile?.fullName}\r\n                </div>\r\n                <Status isOwner={!userId} />\r\n                <div className={s.aboutMe}>\r\n                    <span>about me: </span>{profile?.aboutMe || '.....'}\r\n                </div>\r\n                <div className={s.lookingForAJob}>\r\n                    <span>looking for a Job: </span>{profile?.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div className={s.professionalSkills}>\r\n                    {profile?.lookingForAJob\r\n                        ? <div><span> my professional skills: </span>{profile?.lookingForAJobDescription || '.....'}</div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <UserContacts profile={profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Row, Col } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { maxLengthCreator, reqAndMaxLValCreator } from \"../../../../../validators/validators\";\r\nimport s from './ProfileDataForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { selectProfile, selectUpdateProfileStatus } from \"../../../../../Redux/selectors/profile-selector\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProfileType } from \"../../../../../types/types\";\r\nimport { updateProfile } from \"../../../../../Redux/Profile-Reducer\";\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\";\r\nimport formError  from \"../../../../Common/formsControl/formsControl.module.scss\";\r\nimport { Modal } from 'antd';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: () => void\r\n    editMode: boolean\r\n}\r\n\r\n\r\nexport const ProfileDataForm: React.FC<PropsType> = React.memo(({deActivateEditMode, editMode}) => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const dispatch = useDispatch()\r\n    const updateProfileStatus = useSelector(selectUpdateProfileStatus)\r\n\r\n\r\n    const submit = (values: ProfileType, actions: FormikHelpers<ProfileType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    const contactsFormCreator = (errors: Partial<any>) => {\r\n        return Object.keys(profile.contacts).map((key) => {\r\n            return <FormItem label={key} className={`${s[key]} ${s.contact}`} key={key}>\r\n                <Field name={`contacts.${key}`}\r\n                    validate={maxLength}\r\n                    render={({ field }: FieldProps) => <Input {...field} placeholder={key} />} />\r\n                <ErrorMessage name={`contacts.${key}`} component={() => <div className={formError.fieldError}>{errors.contacts[key]}</div>} />\r\n            </FormItem>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ ...profile }}\r\n            validate={(value) => { }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors, setErrors, resetForm, setSubmitting }) => (\r\n                <Modal centered title={'Edit your profile'} visible={editMode} onCancel={deActivateEditMode} footer={[\r\n                    <Button htmlType={\"submit\"} type={'primary'} onClick={() => {\r\n                    \r\n                            dispatch(updateProfile(values, setErrors))\r\n                            if (!(updateProfileStatus === 'error' || updateProfileStatus === 'pending')) {\r\n                                resetForm({})\r\n                                deActivateEditMode()\r\n                                setSubmitting(false)\r\n                            }\r\n                        \r\n                    }}>\r\n                        save\r\n                    </Button>,\r\n                    <Button onClick={() => {\r\n                        deActivateEditMode()\r\n                    }}>\r\n                        cancel\r\n                    </Button>\r\n                ]}>\r\n                <FormikForm className={s.form}>\r\n                            <div className={s.pre}>\r\n                                {updateProfileStatus === 'pending' && <div><Preloader styles={'updProfPre'}/></div>}\r\n                            </div>\r\n                            <Input.Group>\r\n                                <FormItem className={s.formItem} label={'name'}>\r\n                                    <Field name=\"fullName\"\r\n                                        validate={reqAndMaxLValCreator(20)}\r\n                                        render={({ field }: FieldProps) => <Input {...field} placeholder=\"fullName\" autoFocus={true} />} />\r\n                                    <ErrorMessage name=\"fullName\" component={() => <div className={formError.fieldError}>{errors.fullName}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'about me'}>\r\n                                    <Field name=\"aboutMe\"\r\n                                        validate={reqAndMaxLValCreator(50)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"aboutMe\" />} />\r\n                                    <ErrorMessage name=\"aboutMe\" component={() => <div className={formError.fieldError}>{errors.aboutMe}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem}>\r\n                                    <Field name=\"lookingForAJob\"\r\n                                        render={({ field }: FieldProps) => <Checkbox {...field} checked={values.lookingForAJob}>\r\n                                            looking for a job\r\n                                     </Checkbox>} />\r\n                                    <ErrorMessage name=\"lookingForAJob\" component={() => <div className={formError.fieldError}>{errors.lookingForAJob}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'my professional skills'}>\r\n                                    <Field name=\"lookingForAJobDescription\"\r\n                                        validate={reqAndMaxLValCreator(40)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"lookingForAJobDescription\" />} />\r\n                                    <ErrorMessage name=\"lookingForAJobDescription\"\r\n                                        component={() => <div className={formError.fieldError}>{errors.lookingForAJobDescription}</div>} />\r\n                                </FormItem>\r\n                            </Input.Group>\r\n                            <FormItem className={s.contacts}>\r\n                                <div className={s.contactsHeader}>\r\n                                    contacts\r\n                                </div>\r\n                                {contactsFormCreator(errors)}\r\n                            </FormItem>                   \r\n                </FormikForm>\r\n                </Modal>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport s from \"./UserInfo.module.scss\";\r\nimport { UserPhoto } from \"./UserPhoto/UserPhoto\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStatus, getUser } from \"../../../../Redux/Profile-Reducer\";\r\nimport { selectProfile } from \"../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../Common/Preloader/Preloader\";\r\nimport { ProfileType } from \"../../../../types/types\";\r\nimport { selectUserId } from \"../../../../Redux/selectors/auth-selector\";\r\nimport { useParams } from \"react-router\";\r\nimport { ProfileData } from \"./ProfileData/ProfileData\";\r\nimport { ProfileDataForm } from \"./ProfileDataForm/ProfileDataForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineEdit } from 'react-icons/ai';\r\n\r\n\r\nexport type ParamTypes = {\r\n    userId: string\r\n}\r\n\r\nexport const UserInfo: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const AuthUserId = useSelector(selectUserId)\r\n    const history = useHistory()\r\n    const { userId } = useParams<ParamTypes>()\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userIdFromUrl = Number(userId);\r\n        if (userIdFromUrl) {\r\n            dispatch(getUser(userIdFromUrl))\r\n            dispatch(getStatus(userIdFromUrl))\r\n        } else if (AuthUserId) {\r\n            dispatch(getUser(AuthUserId))\r\n            dispatch(getStatus(AuthUserId))\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, AuthUserId, userId, history])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader styles={'profilePre'} />\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        <div className={s.aboutUser}>\r\n            <UserPhoto isOwner={!!userId} img={profile.photos?.large} />\r\n            {!editMode && <ProfileData />}\r\n            {editMode &&  <ProfileDataForm deActivateEditMode={deActivateEditMode} editMode={editMode}/>}\r\n            \r\n            {!userId && <div className={s.editIcon} onClick={() => {\r\n                activateEditMode()\r\n            }}>\r\n                <AiOutlineEdit />\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainImg.0de69ef5.jpg\";","import React from 'react';\r\nimport s from \"./ProfilePage.module.scss\";\r\nimport { UserInfo } from './UserInfor/UserInfo';\r\nimport mainPhoto from '../../../images/mainImg.jpg'\r\nimport '../../../App.css';\r\n\r\nexport const ProfilePage: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <div className={s.mainImg}>\r\n                <img src={mainPhoto} alt={'mainImg'}/>\r\n            </div>\r\n            <div className={s.contentBottom}>\r\n                <UserInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './SidebarUserPhoto.module.scss'\r\nimport userPhoto from '../../../../images/img.jpg'\r\n\r\ntype PropsType = {\r\n    img: string | null | undefined\r\n}\r\n\r\nexport const SidebarUserPhoto: React.FC<PropsType> = React.memo(({img}) => {\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <img src={img ? img : userPhoto} alt={'authorized user'} />\r\n        </div>\r\n    )\r\n})","import { StateType } from '../store';\r\n\r\nexport const selectFriends = (state: StateType) => {\r\n    return state.sideBar.friends\r\n}\r\n\r\n","import { StateType } from './../store';\r\n\r\n\r\nexport const selectUsers = (state: StateType) => {\r\n    return state.users.users\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.users.isFetching\r\n}\r\n\r\nexport const selectTotalUserCount = (state: StateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\n\r\nexport const selectPageNumber = (state: StateType) => {\r\n    return state.users.pageNumber\r\n}\r\nexport const selectPageSize = (state: StateType) => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const selectFilter = (state: StateType) => {\r\n    return state.users.filter\r\n}\r\n\r\nexport const selectFollowingInProgress = (state: StateType) => {\r\n    return state.users.followInProgress\r\n}\r\n","import { FilterType } from './../Redux/User-Reducer';\r\nimport { UserType } from '../types/types';\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype UserResponseType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const UserApi = {\r\n    getUsers: async (pageNumber: number, pageSize: number,  filter: FilterType) => {\r\n        const response = await instance.get<UserResponseType>(`users?count=${pageSize}\r\n        &page=${pageNumber}&term=${filter.term}&friend=${filter.friend}`)\r\n        return response.data\r\n    },\r\n    follow: async (id: number) => {\r\n        const response = await instance.post<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n    unFollow: async (id: number) => {\r\n        const response = await instance.delete<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n}\r\n","import { UserApi } from './../Api/User-api';\r\nimport { UserType } from '../types/types';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    isFetching: false,\r\n    followInProgress: [] as number[],\r\n    totalUsersCount: 0,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nexport type FilterType = typeof initialState.filter\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\n\r\nexport const UserReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'UR/USERS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n        case 'UR/FOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: true }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/UNFOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: false }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/SET_PAGE_NUMBER':\r\n            return {\r\n                ...state,\r\n                pageNumber: action.payload.pageNumber\r\n            }\r\n        case 'UR/SET_FILTER_DATA':\r\n            return {\r\n                ...state,\r\n                filter: action.payload.filter\r\n            }\r\n        case 'UR/SET_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followInProgress: action.payload.isFollowInProgress ? [...state.followInProgress, action.payload.id]\r\n                    : state.followInProgress.filter((id) => id !== action.payload.id)\r\n            }\r\n        case 'UR/SET_IS_FETCHING':\r\n        case 'UR/TOTAL_COUNT_IS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (users: UserType[]) =>\r\n        ({ type: 'UR/USERS_RECEIVED', payload: { users } } as const),\r\n    setIsFetching: (isFetching: boolean) =>\r\n        ({ type: 'UR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    followIsFinished: (userId: number) =>\r\n        ({ type: 'UR/FOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    unFollowIsFinished: (userId: number) =>\r\n        ({ type: 'UR/UNFOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    totalCountIsReceived: (totalUsersCount: number) =>\r\n        ({ type: 'UR/TOTAL_COUNT_IS_RECEIVED', payload: { totalUsersCount } } as const),\r\n    setPageNumber: (pageNumber: number) =>\r\n        ({ type: 'UR/SET_PAGE_NUMBER', payload: { pageNumber } } as const),\r\n    setFilterData: (filter: FilterType) =>\r\n        ({ type: 'UR/SET_FILTER_DATA', payload: { filter } } as const),\r\n    setFollowInProgress: (id: number, isFollowInProgress: boolean) =>\r\n        ({ type: 'UR/SET_FOLLOWING_PROGRESS', payload: { id, isFollowInProgress } } as const),\r\n}\r\n\r\n\r\nexport const getUsers = (pageNumber: number, pageSize: number, filter: FilterType): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setFilterData(filter))\r\n            dispatch(actions.setIsFetching(true))\r\n            dispatch(actions.setPageNumber(pageNumber))\r\n            const data = await UserApi.getUsers(pageNumber, pageSize, filter)\r\n            dispatch(actions.setIsFetching(false))\r\n            dispatch(actions.usersReceived(data.items))\r\n            dispatch(actions.totalCountIsReceived(data.totalCount))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)       \r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await UserApi.follow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.followIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number): ThunkType<ActionsType, Promise<any>> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await UserApi.unFollow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.unFollowIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n","import { UserApi } from './../Api/User-api';\r\nimport { Dispatch } from 'react';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { UserType } from '../types/types';\r\nimport { message } from 'antd';\r\nimport { unFollow } from './User-Reducer';\r\n\r\n\r\nconst initialState = {\r\n    friends: [] as UserType[],\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const SideBarReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SB/FRIENDS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    friendsReceived: (friends: UserType[]) =>\r\n        ({ type: 'SB/FRIENDS_RECEIVED', payload: { friends } } as const),\r\n}\r\n\r\n\r\n\r\nexport const getFriends = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await UserApi.getUsers(20, 3, { term: '', friend: true })\r\n            dispatch(actions.friendsReceived(result.items))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteFriend = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = dispatch(unFollow(id))\r\n            Promise.all([result]).then(() => {\r\n                dispatch(getFriends())\r\n            })\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport s from './Friend.module.scss'\r\nimport sparePhoto from '../../../../../images/img.jpg'\r\nimport { PhotosType } from \"../../../../../types/types\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectFollowingInProgress } from \"../../../../../Redux/selectors/user-selector\"\r\nimport { actions } from \"../../../../../Redux/User-Reducer\"\r\nimport { deleteFriend } from \"../../../../../Redux/Sidebar-Reducer\"\r\nimport { Dropdown, Button } from 'antd';\r\nimport { useShowMore } from \"../../../../../hooks/useShowMore\"\r\n\r\n\r\ninterface IPropsType {\r\n    photos: PhotosType\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\nexport const Friend: React.FC<IPropsType> = React.memo(({ photos, id, name }) => {\r\n\r\n\r\n    let {\r\n        fullText: fullFriendName, menu, showFullText: showFullFriendName,\r\n        isTextBig: isFriendNameBig, shortText: shortFriendName\r\n    } = useShowMore(name, 10, 'Friend')\r\n\r\n\r\n    const friendPhoto = photos.small\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    let friendName = name \r\n    if(isFriendNameBig) {\r\n        friendName = shortFriendName\r\n    } else {\r\n        friendName = fullFriendName\r\n    }\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <div className={s.imgAndName}>\r\n                <div className={s.img}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img src={friendPhoto ? friendPhoto : sparePhoto} alt={'friendPhoto'} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.nameLink}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        {showFullFriendName ? fullFriendName : friendName}\r\n                        <span className={s.showMore}>{isFriendNameBig\r\n                            ? <Dropdown overlay={menu} placement=\"topCenter\">\r\n                                <span>...</span>\r\n                            </Dropdown>\r\n                            : null}</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Button disabled={followingInProgress.some((selectedId) => selectedId === id)} onClick={() => {\r\n                dispatch(deleteFriend(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                delete\r\n            </Button>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectFriends } from \"../../../../Redux/selectors/sideBar-selector\"\r\nimport s from './Friends.module.scss'\r\nimport {Friend} from './Friend/Friend'\r\n\r\n\r\nexport const Friends: React.FC = React.memo(() => {\r\n    \r\n    const friends = useSelector(selectFriends)\r\n\r\n    const friendElements = friends.map((f) => <Friend key={f.id} photos={f.photos} name={f.name} id={f.id}/>)\r\n\r\n    return (\r\n        <div className={s.SidBaFriends}>\r\n            <h2>\r\n                friends\r\n            </h2>\r\n            <div className={s.test}>\r\n            <div className={s.friends}>\r\n                {friendElements}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","\r\nimport React, { useEffect } from 'react';\r\nimport s from \"./SideBar.module.scss\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SidebarUserPhoto } from './SidebarUserPhoto/SidebarUserPhoto';\r\nimport { getAuthUser } from '../../../Redux/auth-Reducer';\r\nimport { selectAuthUserProfile } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Friends } from './Friends/Friends'\r\nimport { getFriends } from '../../../Redux/Sidebar-Reducer';\r\n\r\n\r\nexport const SideBar = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const profile = useSelector(selectAuthUserProfile)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthUser())\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n  \r\n\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <div className={s.sidebarTop}>\r\n      </div>\r\n      <div className={s.sidebarBottom}>\r\n        <div className={s.userPhoto}>\r\n          <NavLink to={'/profile'}>\r\n            <SidebarUserPhoto img={profile?.photos.large} />\r\n          </NavLink>\r\n        </div>\r\n        <div className={s.userName}>\r\n          <NavLink to={'/profile'}>\r\n            <span>{profile?.fullName}</span>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <Friends/>\r\n        </div>\r\n        <div className={s.viewP}>\r\n        <NavLink to={'/profile'}>\r\n            view profile\r\n        </NavLink>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}","import { Pagination } from \"antd\";\r\nimport React from \"react\";\r\nimport s from './Paginator.module.scss';\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number\r\n  pageSize?: number\r\n  onPageChangeHandler: (pageNumber: number) => void\r\n  pageNumber: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo(({\r\n  totalItemsCount,\r\n  pageSize = 10,\r\n  onPageChangeHandler,\r\n  pageNumber\r\n}) => {\r\n\r\n  const pagesCount = totalItemsCount / pageSize\r\n\r\n  const onChange = (currentPageNumber: number) => {\r\n    onPageChangeHandler(currentPageNumber)\r\n  }\r\n  return (\r\n    <div className={s.paginator}>\r\n      <Pagination defaultCurrent={pageNumber} size={'small'} current={pageNumber} total={pagesCount * 10} onChange={onChange} />\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Input, Form, Select, Button } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { FilterType } from \"../../../../Redux/User-Reducer\";\r\nimport s from './FilterForm.module.scss';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFilter } from \"../../../../Redux/selectors/user-selector\";\r\nimport { maxLengthCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formsControl/formsControl.module.scss';\r\n\r\n\r\nconst Option = Select.Option\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    onFilterHandler: (filter: FilterType) => void\r\n}\r\ntype FilterFormValuesType = {\r\n    term: string\r\n    friend: string\r\n}\r\n\r\nexport const FilterForm: React.FC<PropsType> = React.memo(({onFilterHandler}) => {\r\n\r\n    const filter = useSelector(selectFilter)\r\n\r\n    const submit = (values: FilterFormValuesType, actions: FormikHelpers<FilterFormValuesType>) => {\r\n        setTimeout(() => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n            }\r\n            onFilterHandler(filter)\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term,  friend: String(filter.friend)}}\r\n            validate={(value) => { }}\r\n            onSubmit={submit} \r\n        >\r\n            {({ isSubmitting, values, setFieldValue, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem>\r\n                        <Field name=\"term\"\r\n                            validate={maxLength}\r\n                            render={({ field }: FieldProps) => <Input {...field} placeholder=\"userName\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"term\" component={()=><div className={formStyle.fieldError}>{errors.term}</div>} />\r\n                    </FormItem>\r\n                        <FormItem>\r\n                        <Field  name={'friend'}\r\n                            placeholder={\"HELLO\"}\r\n                            render={({ field }: FieldProps) => \r\n                             <Select \r\n                                className={s.select}\r\n                                {...field}\r\n                                onChange={value => setFieldValue(\"friend\", value)}\r\n                                value={values.friend}\r\n                            >\r\n                                <Option value=\"null\">all</Option>\r\n                                <Option value=\"true\">follow</Option>\r\n                                <Option value=\"false\">unFollow</Option>\r\n                            </Select>\r\n                            } />\r\n                        </FormItem>\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        find\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { PhotosType } from '../../../../types/types';\r\nimport s from './User.module.scss';\r\nimport spareUserPhoto from '../../../../images/img.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { actions, follow, unFollow } from '../../../../Redux/User-Reducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    userName: string | null\r\n    status: string | null\r\n    photos: PhotosType\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User: React.FC<PropsType> = React.memo(({ id, userName, status, photos, followed, followingInProgress, isAuth }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userPhoto = photos.large\r\n    \r\n\r\n    let button;\r\n\r\n    if (followed) {\r\n        button = <div className={s.button + \" \" + s.follow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(unFollow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                follow\r\n            </Button>\r\n        </div>\r\n    } else {\r\n        button = <div className={s.button + \" \" + s.unFollow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(follow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                unFollow\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.userInfo}>\r\n                <div className={s.rightBlock}>\r\n                    <div className={s.img}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <img src={userPhoto ? userPhoto : spareUserPhoto} alt={'userPhoto'} />\r\n                        </NavLink>\r\n                    </div>\r\n                    {isAuth ? button : null}\r\n                </div>\r\n                <div className={s.leftBlock}>\r\n                    <div className={s.userName}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <span> {userName}</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        status: {status ? status : '....'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomLine}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n    selectIsFetching,\r\n    selectUsers,\r\n    selectTotalUserCount,\r\n    selectPageSize,\r\n    selectPageNumber,\r\n    selectFilter,\r\n    selectFollowingInProgress\r\n} from \"../../../Redux/selectors/user-selector\";\r\nimport { FilterType, getUsers } from \"../../../Redux/User-Reducer\";\r\nimport { Paginator } from \"../../Common/Peginator/Paginator\";\r\nimport { Preloader } from \"../../Common/Preloader/Preloader\";\r\nimport { FilterForm } from \"./FilterForm/FilterForm\";\r\nimport { User } from \"./User/User\"\r\nimport s from './UsersPage.module.scss';\r\nimport queryString from 'query-string'\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\n\r\n\r\n\r\nexport const UsersPage: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isAuth = useSelector(selectIsAuth) \r\n\r\n    const users = useSelector(selectUsers)\r\n    const isFetching = useSelector(selectIsFetching)\r\n    const totalUserCount = useSelector(selectTotalUserCount)\r\n    const pageSize = useSelector(selectPageSize)\r\n    const pageNumber = useSelector(selectPageNumber)\r\n    const filter = useSelector(selectFilter)\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n\r\n\r\n    type UrlDataType = {\r\n        friend?: string\r\n        term?: string\r\n        page?: string | number\r\n    }\r\n\r\n    useEffect(() => {\r\n        const urlData = queryString.parse(history.location.search) as UrlDataType\r\n        let actualPageNumber = pageNumber\r\n        let actualFilter = filter\r\n\r\n        if (urlData.page) actualPageNumber = Number(urlData.page);\r\n        if (urlData.term && urlData.term !== '') actualFilter = { ...actualFilter, term: urlData.term }\r\n        if (urlData.friend) actualFilter = { ...actualFilter, friend: urlData.friend === 'true' ? true : false }\r\n\r\n        dispatch(getUsers(actualPageNumber, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        let urlData: UrlDataType = {}\r\n\r\n        if (pageNumber !== 1) urlData.page = String(pageNumber)\r\n        if (filter.term !== '') urlData.term = filter.term\r\n        if (filter.friend !== null) urlData.friend = String(filter.friend)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(urlData)\r\n        })\r\n    }, [filter, pageNumber, history])\r\n\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n\r\n    }\r\n    const onFilterHandler = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n\r\n    }\r\n\r\n    const usersElements = users.map((u) => <User isAuth={isAuth} followingInProgress={followingInProgress} key={u.id} id={u.id} userName={u.name}\r\n        photos={u.photos} status={u.status} followed={u.followed} />)\r\n\r\n    return (\r\n        <div className={s.usersPage}>\r\n            <div className={s.userPageTopBlock}>\r\n                <div className={s.usersHeader}>\r\n                    Users\r\n                </div>\r\n                <div>\r\n                    {isFetching && <Preloader styles={'usersPre'} />}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FilterForm onFilterHandler={onFilterHandler} />\r\n            </div>\r\n            <div>\r\n                <Paginator pageSize={pageSize} pageNumber={pageNumber} onPageChangeHandler={onPageChangeHandler} totalItemsCount={totalUserCount} />\r\n            </div>\r\n            {usersElements.length === 0 \r\n            ? <div className={s.notFound}>not Found</div> \r\n            : usersElements }\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Image } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport s from './LoginForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../../Redux/auth-Reducer\";\r\nimport {selectCaptchaUrl, selectErrorMessage} from '../../../../Redux/selectors/auth-selector';\r\nimport { emailValidator,  reqAndMaxLValCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formsControl/formsControl.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type FormActionsType = FormikHelpers<LoginFormValuesType>\r\n\r\nexport const LoginForm: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const captchaUrl = useSelector(selectCaptchaUrl)\r\n    const error = useSelector(selectErrorMessage)\r\n  \r\n\r\n    const submit = (values: LoginFormValuesType, actions: FormActionsType,) => {\r\n        setTimeout(() => {\r\n            const {email, password, rememberMe, captcha} = values;\r\n            dispatch(login(email, password, rememberMe, captcha ))\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', rememberMe: false, captcha: '', }}\r\n            validate={(value) => {\r\n            \r\n            }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem label={'email'}>\r\n                        <Field name=\"email\"\r\n                            validate={emailValidator}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"email\" placeholder=\"email\" />} />\r\n                        <ErrorMessage name=\"email\" component={()=><div className={formStyle.fieldError}>{errors.email}</div>} />\r\n                    </FormItem>\r\n                    <FormItem label={'password'} >\r\n                        <Field name=\"password\"\r\n                            validate={reqAndMaxLValCreator(40)}\r\n                            render={({ field }: FieldProps) => <Input.Password {...field}  type=\"password\" placeholder=\"password\"/>} />\r\n                        <ErrorMessage name=\"password\" component={()=> <div className={formStyle.fieldError}>{errors.password}</div>} />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Field name=\"rememberMe\"\r\n                            render={({ field }: FieldProps) =>   \r\n                            <Checkbox\r\n                            {...field}\r\n                            checked={values.rememberMe}\r\n                          >\r\n                            rememberMe\r\n                          </Checkbox>}/>\r\n                    </FormItem>\r\n                    {error && <div className={formStyle.formError}>{error}</div>}\r\n                   {captchaUrl && <div className={s.captcha}>\r\n                       <div className={s.captchaImg}> \r\n                            <Image src={captchaUrl}/>\r\n                       </div>\r\n                    <FormItem label={'captcha'}>\r\n                        <Field name=\"captcha\"\r\n                            validate={reqAndMaxLValCreator(20)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  placeholder=\"captcha\" autoFocus={true}/>} />\r\n                        <ErrorMessage name=\"captcha\" component={()=> <div className={formStyle.fieldError}>{errors.captcha}</div>} />\r\n                    </FormItem>\r\n                       </div>}\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        login\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport s from './LoginPage.module.scss';\r\nimport {LoginForm} from './LoginForm/LoginForm';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  if(isAuth){\r\n      return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div className= {s.loginPage}>\r\n      <div className={s.loginHeader}>\r\n        login\r\n      </div>\r\n      <div>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n","import React from 'react';\r\nimport s from \"./NotFound.module.scss\";\r\n\r\n\r\nexport const NotFound: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={s.notFound}>\r\n            NOT FOUND\r\n        </div>\r\n    )\r\n})","import { ProfilePage } from \"./ProfilePage/ProfilePage\"\r\nimport { SideBar } from \"./SideBar/SideBar\"\r\nimport React, { Suspense } from 'react';\r\nimport s from \"./Main.module.scss\";\r\nimport '../../App.css';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { UsersPage } from \"./UserPage/UserPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from '../../Redux/selectors/auth-selector'\r\nimport { LoginPage } from \"./LoginPage/LoginPage\";\r\nimport { NotFound } from './../NotFound/NotFound'\r\n\r\n\r\nconst ChatPage: React.FC = React.lazy(() => import('./ChatPage/ChatPage'));\r\n\r\n\r\nexport const Main = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      {isAuth && <SideBar />}\r\n      <div className={`commonContentStyle ${!isAuth ? 'authorized' : ''}`}>\r\n        <div>\r\n          <Switch>\r\n            <Route path={'/profile/:userId?'} render={(match) => {\r\n              return <ProfilePage />\r\n            }} />\r\n            <Route path={'/users'}>\r\n              <UsersPage />\r\n            </Route>\r\n            <Route path={'/login'}>\r\n              <LoginPage />\r\n            </Route>\r\n            <Route exact path={'/'} render={() => {\r\n              return <Redirect to={\"/profile\"}\r\n              />\r\n            }} />\r\n            <Route path={'*'}>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <div>\r\n         {isAuth && <Suspense fallback={<div>loading...</div>}>\r\n        <   ChatPage/>\r\n        </Suspense>}\r\n      </div> \r\n    </div>\r\n  )\r\n})","import { GetActionsType, ThunkType } from './store';\r\nimport { authMe } from './auth-Reducer';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    isAuthorizeFinished: false,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AppReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AP/AUTHORIZE_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n        authorizedIsFinished: (isAuthorizeFinished: boolean) =>\r\n        ({ type: 'AP/AUTHORIZE_IS_FINISHED', payload: { isAuthorizeFinished } } as const),\r\n}\r\n\r\n\r\n\r\nexport const authorize = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = dispatch(authMe())\r\n            Promise.all([result]).then(()=> {\r\n                dispatch(actions.authorizedIsFinished(true))\r\n            })\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { SideBarReducer } from './Sidebar-Reducer';\r\nimport { UserReducer } from './User-Reducer';\r\nimport { Action, applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { ProfileReducer } from \"./Profile-Reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { AuthReducer } from \"./auth-Reducer\";\r\nimport { AppReducer } from './App-Reducer';\r\nimport { ChatReducer } from './Chat-Reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: ProfileReducer,\r\n    auth: AuthReducer,\r\n    users: UserReducer,\r\n    app: AppReducer,\r\n    chat: ChatReducer,\r\n    sideBar: SideBarReducer\r\n})\r\n\r\n\r\ntype TypeWithInfer<T> = T extends {[key: string]: infer U} ? U : any\r\nexport type GetActionsType<T extends {[key: string]: (...args: any) => any}> = ReturnType<TypeWithInfer<T>>   \r\nexport type StateType = ReturnType<typeof rootReducer>\r\nexport type ThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n//@ts-ignore\r\nwindow._store = store\r\nexport default store","import { StateType } from '../store';\r\n\r\nexport const selectIsAuthorizeFinished = (state: StateType) => {\r\n    return state.app.isAuthorizeFinished\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Footer.module.scss';\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.footer}>\r\n            this site was created by David Gasparian\r\n        </div>\r\n    )\r\n})","import { useEffect } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Header } from './Components/Header/Header';\nimport { Main } from './Components/Main/Main';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './Redux/store';\nimport { Preloader } from './Components/Common/Preloader/Preloader';\nimport { authorize } from './Redux/App-Reducer';\nimport { selectIsAuthorizeFinished } from './Redux/selectors/App-selector';\nimport { Footer } from './Components/Footer/Footer';\ndocument.body.style.backgroundColor = \"#F3F2EF\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const isAuthorizeFinished = useSelector(selectIsAuthorizeFinished)\n\n  useEffect(() => {\n    dispatch(authorize())\n  }, [dispatch])\n\n  if(!isAuthorizeFinished) {\n    return <Preloader styles={'appPre'} />\n  }\n\n  return (\n    <div className= {'App'}>\n      <Header />\n      <Main />\n      <Footer/>\n    </div>\n  );\n}\n\n\nconst AppContainer = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  )\n}\n\nexport default AppContainer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldError\":\"formsControl_fieldError__2W8lW\",\"formError\":\"formsControl_formError__1ienr\"};","export const emailValidator = (value: string) => {\r\n    let error;\r\n    const maxLength = maxLengthCreator(40)\r\n    error = maxLength(value)\r\n    error = error || required(value) \r\n     if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = error || 'Invalid email address';\r\n    } \r\n    return error;\r\n}\r\n\r\nexport const reqAndMaxLValCreator = (MaxLength: number) => {\r\n    return (value: string) => {\r\n        let error;\r\n        const maxLength = maxLengthCreator(MaxLength)\r\n        error = maxLength(value)\r\n        error = error || required(value) \r\n        return error\r\n    }\r\n}\r\n\r\nexport const required = (value: string) => {\r\n    let error;\r\n    if(!value) {\r\n        error = 'filed is required'\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    let error;\r\n    if (value && value.length > maxLength) {\r\n        error = `Max length is ${maxLength}`\r\n    }\r\n    return error;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1m8QG\",\"userInfo\":\"User_userInfo__psQg3\",\"rightBlock\":\"User_rightBlock__iRdgz\",\"button\":\"User_button__1hc_-\",\"leftBlock\":\"User_leftBlock__3WWr7\",\"status\":\"User_status__2w2lD\",\"userName\":\"User_userName__3dUmi\",\"bottomLine\":\"User_bottomLine__3sa7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__1FYMM\",\"pre\":\"ProfileDataForm_pre__2O8rg\",\"formItem\":\"ProfileDataForm_formItem__23klk\",\"contacts\":\"ProfileDataForm_contacts__1uNUy\",\"contactsHeader\":\"ProfileDataForm_contactsHeader__37Njc\",\"contact\":\"ProfileDataForm_contact__2AOVd\",\"SendButton\":\"ProfileDataForm_SendButton__2uSCV\",\"closeIcon\":\"ProfileDataForm_closeIcon__19z6Z\"};","export default __webpack_public_path__ + \"static/media/img.4e5df239.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3wzJC\",\"userNameAndStatus\":\"ProfileData_userNameAndStatus__1_-SB\",\"userName\":\"ProfileData_userName__2tGwV\",\"aboutMe\":\"ProfileData_aboutMe__2PHeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__KLu2k\",\"cursor\":\"Status_cursor__fCL1U\",\"statusText\":\"Status_statusText__3sk-5\",\"showMore\":\"Status_showMore__O3g_3\",\"menu\":\"Status_menu__3HvJw\",\"showInfoMenu\":\"Status_showInfoMenu__9qS5j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"SideBar_sidebar__3dulD\",\"sidebarBottom\":\"SideBar_sidebarBottom__vxHE7\",\"userPhoto\":\"SideBar_userPhoto__tSYGM\",\"userName\":\"SideBar_userName__pnHuT\",\"viewP\":\"SideBar_viewP__3zbLI\",\"sidebarTop\":\"SideBar_sidebarTop__LRdFP\"};"],"sourceRoot":""}