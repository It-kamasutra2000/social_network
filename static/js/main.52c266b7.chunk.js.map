{"version":3,"sources":["Components/Header/Header.module.scss","Components/Main/SideBar/Friends/Friend/Friend.module.scss","Components/Main/UserPage/UsersPage.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.module.scss","Components/Main/LoginPage/LoginForm/LoginForm.module.scss","hooks/useShowMore.tsx","Components/Main/UserPage/FilterForm/FilterForm.module.scss","Components/Main/ProfilePage/ProfilePage.module.scss","Components/Main/ProfilePage/UserInfor/UserPhoto/UserPhoto.module.scss","Components/Main/SideBar/Friends/Friends.module.scss","Components/Header/Pages/Page/Page.module.scss","Components/Common/Preloader/Preloader.module.scss","hooks/useShowMore.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.module.scss","Components/Main/LoginPage/LoginPage.module.scss","Api/Chat-api.ts","Redux/Chat-Reducer.ts","Components/Header/Pages/Pages.module.scss","Components/Header/UserAvatar/UserAvatar.module.scss","Components/Main/Main.module.scss","Components/Common/Peginator/Paginator.module.scss","Components/Main/ProfilePage/UserInfor/UserInfo.module.scss","Components/Main/SideBar/SidebarUserPhoto/SidebarUserPhoto.module.scss","Components/NotFound/NotFound.module.scss","Components/Footer/Footer.module.scss","Redux/selectors/auth-selector.ts","Api/Api.ts","Components/Header/Pages/Page/Page.tsx","Components/Header/Pages/Pages.tsx","Api/Auth-api.ts","Api/Profile-api.ts","Api/security-api.ts","Redux/auth-Reducer.ts","Components/Header/UserAvatar/UserAvatar.tsx","Components/Header/Header.tsx","Redux/selectors/user-selector.ts","Api/User-api.ts","Redux/User-Reducer.ts","Components/Common/Peginator/Paginator.tsx","images/loading.gif","Components/Common/Preloader/Preloader.tsx","Components/Main/UserPage/FilterForm/FilterForm.tsx","Components/Main/UserPage/User/User.tsx","Components/Main/UserPage/UserPage.tsx","Redux/Profile-Reducer.ts","Redux/selectors/profile-selector.ts","Components/Main/ProfilePage/UserInfor/UserPhoto/UserPhoto.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/Status/StatusForm/StatusForm.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/Status/Status.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.tsx","Components/Main/ProfilePage/UserInfor/ProfileData/ProfileData.tsx","Components/Common/formsControl/formControls.tsx","Components/Main/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.tsx","Components/Main/ProfilePage/UserInfor/UserInfo.tsx","images/mainImg.jpg","Components/Main/ProfilePage/ProfilePage.tsx","Components/Main/SideBar/SidebarUserPhoto/SidebarUserPhoto.tsx","Redux/selectors/sideBar-selector.ts","Redux/Sidebar-Reducer.ts","Components/Main/SideBar/Friends/Friend/Friend.tsx","Components/Main/SideBar/Friends/Friends.tsx","Components/Main/SideBar/SideBar.tsx","Components/Main/LoginPage/LoginForm/LoginForm.tsx","Components/Main/LoginPage/LoginPage.tsx","Components/NotFound/NotFound.tsx","Components/Main/Main.tsx","Redux/App-Reducer.ts","Redux/selectors/App-selector.ts","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","Redux/store.ts","index.tsx","validators/validators.ts","Components/Common/formsControl/formsControl.module.scss","Components/Main/UserPage/User/User.module.scss","Components/Main/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/ProfileData.module.scss","Components/Main/ProfilePage/UserInfor/ProfileData/Status/Status.module.scss","images/img.jpg","Components/Main/SideBar/SideBar.module.scss"],"names":["module","exports","useShowMore","text","textSize","componentName","useState","showFullText","setShowFullText","isShowMoreText","fullText","shortText","textLength","length","isTextBig","slice","menu","className","s","Item","showMoreText","onClick","ws","subscribers","message","open","onMessageHandler","e","forEach","JSON","parse","data","onErrorHandler","console","log","onCloseHandler","setTimeout","createWebsocket","onOpenHandler","clineUp","close","removeEventListener","WebSocket","addEventListener","WebSocketApi","wsEvent","callback","filter","send","initialState","messages","wsStatus","ChatReducer","state","action","type","payload","map","m","id","uuidv4","index","arr","actions","_messageEventSubscriber","messageEventSubscriberCreator","dispatch","_openEventSubscriber","openEventSubscriberCreator","status","startMessageEventListening","a","stopMessageEventListening","sendMessage","selectUserId","auth","selectIsAuth","isAuth","selectAuthUserProfile","authUserProfile","selectCaptchaUrl","captchaUrl","selectErrorMessage","errorMessage","ResultCodeEnum","ResultCodeCaptchaEnum","Page","React","memo","Icon","path","pageName","page","activeClassName","active","to","Pages","data-testid","pages","HomeOutlined","UserSwitchOutlined","instance","axios","create","baseURL","withCredentials","headers","AuthApi","authMe","get","response","login","email","password","rememberMe","captcha","post","logout","delete","ProfileApi","getUser","getStatus","updateStatus","put","updateUserPhoto","file","FormData","append","updateProfile","profile","SecurityApi","getCaptchaUrl","resultCode","success","stringify","errorText","error","getAuthUser","getState","userId","url","UserAvatar","authorizedUserData","useSelector","userName","fullName","useDispatch","role","danger","block","info","icon","UserOutlined","avatar","Button","overlay","Header","header","headerContent","headerContentLeft","logo","headerContentRight","selectUsers","users","selectIsFetching","isFetching","selectTotalUserCount","totalUsersCount","selectPageNumber","pageNumber","selectPageSize","pageSize","selectFilter","selectFollowingInProgress","followInProgress","UserApi","getUsers","term","friend","follow","unFollow","isFollowInProgress","items","totalCount","Paginator","totalItemsCount","onPageChangeHandler","pagesCount","paginator","defaultCurrent","size","current","total","onChange","currentPageNumber","Preloader","styles","preloader","src","preloaderImg","Option","Select","FormItem","Form","maxLength","maxLengthCreator","FilterForm","onFilterHandler","enableReinitialize","initialValues","String","validate","value","onSubmit","values","setSubmitting","isSubmitting","setFieldValue","errors","form","name","render","field","placeholder","autoFocus","component","formStyle","fieldError","select","SendButton","htmlType","disabled","User","button","photos","followed","followingInProgress","history","followUnFollow","followedStatus","some","FPId","push","user","userInfo","rightBlock","img","large","spareUserPhoto","alt","leftBlock","bottomLine","UsersPage","useHistory","totalUserCount","useEffect","urlData","queryString","location","search","actualPageNumber","actualFilter","Number","pathname","usersElements","u","usersPage","userPageTopBlock","usersHeader","notFound","isLoading","updateProfileStatus","icons","facebook","AiFillFacebook","website","CgWebsite","vk","BiConfused","github","AiFillGithub","instagram","AiFillInstagram","twitter","AiOutlineTwitter","youtube","AiFillYoutube","mainLink","selectProfile","selectStatus","selectIsLoading","selectUpdateProfileStatus","selectIcons","UserPhoto","isOwner","userPhoto","selectPhoto","label","htmlFor","hidden","currentTarget","files","StatusForm","deActivateEditMode","statusText","onBlur","Status","editMode","setEditMode","fullStatusText","showMoreMenu","showFullStatusText","isStatusTextBig","setShowFullStatusText","shortStatusText","showMore","placement","showInfoMenu","cursor","onDoubleClick","statusTitle","UserContact","contactsTitle","contactsValue","contact","href","UserContacts","contactIcons","contactsElements","Object","keys","contacts","key","contactsCount","i","contactsValues","noContacts","ProfileData","activateEditMode","useParams","profileData","userNameAndStatus","editIcon","aboutMe","lookingForAJob","professionalSkills","lookingForAJobDescription","createField","fieldName","properties","Component","formError","ProfileDataForm","contactsFormCreator","Input","setErrors","resetForm","centered","title","visible","onCancel","footer","constructor","authUserId","split","join","toLocaleLowerCase","pre","Group","formItem","reqAndMaxLValCreator","TextArea","checked","Checkbox","contactsHeader","UserInfo","AuthUserId","userIdFromUrl","aboutUser","ProfilePage","profilePage","mainImg","mainPhoto","contentBottom","SidebarUserPhoto","selectFriends","sideBar","friends","getFriends","result","Friend","fullFriendName","showFullFriendName","isFriendNameBig","shortFriendName","friendPhoto","small","isDisabled","selectedId","friendName","imgAndName","sparePhoto","nameLink","Promise","all","then","deleteFriend","Friends","friendElements","f","SidBaFriends","test","SideBar","sidebar","sidebarTop","sidebarBottom","viewP","LoginForm","Password","emailValidator","captchaImg","LoginPage","loginPage","loginHeader","NotFound","ChatPage","lazy","Main","main","exact","fallback","isAuthorizeFinished","selectIsAuthorizeFinished","app","Footer","document","body","style","backgroundColor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_store","ReactDOM","getElementById","required","MaxLength"],"mappings":"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","file":"static/js/main.52c266b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3oEm5\",\"headerContent\":\"Header_headerContent__3cVMj\",\"headerContentLeft\":\"Header_headerContentLeft__1kmPt\",\"logo\":\"Header_logo__1iYvb\",\"headerContentRight\":\"Header_headerContentRight__3Tyn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3rcLc\",\"imgAndName\":\"Friend_imgAndName__29T5Z\",\"nameLink\":\"Friend_nameLink__a9yL5\",\"showMore\":\"Friend_showMore__1Sr6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__1sRyt\",\"userPageTopBlock\":\"UsersPage_userPageTopBlock__3Bci2\",\"usersHeader\":\"UsersPage_usersHeader__1u2Vr\",\"notFound\":\"UsersPage_notFound__5YT83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"UserContacts_contacts__1UZql\",\"contactsTitle\":\"UserContacts_contactsTitle__1kr9E\",\"contactsValues\":\"UserContacts_contactsValues__3wubr\",\"noContacts\":\"UserContacts_noContacts__1gMHL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2eYfX\",\"captcha\":\"LoginForm_captcha__35FDF\",\"captchaImg\":\"LoginForm_captchaImg__214o4\"};","import React, { useState } from 'react'\r\nimport { Menu } from 'antd';\r\nimport s from './useShowMore.module.scss'\r\n\r\n\r\nexport const useShowMore = (text: string, textSize: number, componentName: string) => {\r\n\r\n    const [showFullText, setShowFullText] = useState<boolean>(false)\r\n\r\n\r\n    const isShowMoreText = componentName !== 'Friend'\r\n\r\n    const fullText: string = text\r\n    let shortText = '';\r\n    const textLength = text?.length\r\n    const isTextBig = textLength && textLength > textSize\r\n\r\n    if (isTextBig) {\r\n        shortText = text.slice(0, textSize)\r\n    }\r\n\r\n\r\n    let menu = (\r\n        <Menu className={s.menu}>\r\n            <Menu.Item className={s.showMoreText} onClick={() => {\r\n                isShowMoreText && setShowFullText(true)\r\n            }}>\r\n                <span>{isShowMoreText ? 'show more' : fullText}</span>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n\r\n    return {\r\n        fullText,\r\n        isTextBig,\r\n        showFullText,\r\n        setShowFullText,\r\n        menu,\r\n        shortText\r\n    }\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterForm_form__3cdQq\",\"select\":\"FilterForm_select__1g4_-\",\"SendButton\":\"FilterForm_SendButton__33gxr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__3cw9o\",\"mainImg\":\"ProfilePage_mainImg__3K70k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"UserPhoto_userPhoto__LI0GT\",\"selectPhoto\":\"UserPhoto_selectPhoto__2V73w\",\"label\":\"UserPhoto_label__cM1aj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidBaFriends\":\"Friends_SidBaFriends__2VO4V\",\"friends\":\"Friends_friends__2CVfr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__3wQj-\",\"active\":\"Page_active__biFyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__vZgi5\",\"profilePre\":\"Preloader_profilePre__Xazmf\",\"statusPre\":\"Preloader_statusPre__2Ed3w\",\"photosPre\":\"Preloader_photosPre__1Q_Cs\",\"usersPre\":\"Preloader_usersPre__14nWV\",\"updProfPre\":\"Preloader_updProfPre__1slyY\",\"appPre\":\"Preloader_appPre__7OWEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"useShowMore_menu__1Ia2o\",\"showMoreText\":\"useShowMore_showMoreText__ZZx--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"UserContact_contact__3qAUb\",\"icon\":\"UserContact_icon__3LE9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginHeader\":\"LoginPage_loginHeader__36LCV\"};","import { wsStatusType } from './../Redux/Chat-Reducer';\r\n\r\nlet ws: null | WebSocket = null\r\n\r\nlet subscribers = {\r\n    message: [] as MessageSubscriberType[],\r\n    open: [] as OpenSubscriberType[]\r\n}\r\n\r\n\r\nconst onMessageHandler = (e: MessageEvent) => {\r\n    subscribers.message.forEach((s) => s(JSON.parse(e.data)))\r\n}\r\n\r\nconst onErrorHandler = () => {\r\n    console.log('error')\r\n}\r\n\r\nconst onCloseHandler = () => {\r\n    setTimeout(() => {\r\n        createWebsocket()\r\n        console.log('reconnecting')\r\n        subscribers.open.forEach((s) => s('close'))\r\n    }, 3000)\r\n}\r\nconst onOpenHandler = () => {\r\n    subscribers.open.forEach((s) => s('open'))\r\n}\r\n\r\n\r\nconst clineUp = () => {\r\n    ws?.close();\r\n    ws?.removeEventListener('message', onMessageHandler);\r\n    ws?.removeEventListener('close', onCloseHandler);\r\n    ws?.removeEventListener('open', onOpenHandler);\r\n    ws?.removeEventListener('error', onErrorHandler);\r\n}\r\n\r\nconst createWebsocket = () => {\r\n    clineUp()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    ws.addEventListener('message', onMessageHandler);\r\n    ws.addEventListener('close', onCloseHandler);\r\n    ws.addEventListener('open', onOpenHandler);\r\n    ws.addEventListener('error', onErrorHandler);\r\n}\r\n\r\nexport const WebSocketApi = {\r\n    start() {\r\n        createWebsocket()\r\n    },\r\n    subscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        subscribers = { ...subscribers, [wsEvent]: [...subscribers[wsEvent], callback] }\r\n    },\r\n    unSubscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        //@ts-ignore\r\n        subscribers = { ...subscribers, [wsEvent]: subscribers[wsEvent].filter((s: SubscriberType) => s !== callback) }\r\n    },\r\n    send(message: string) {\r\n        ws?.send(message);\r\n    },\r\n    stop() {\r\n        clineUp()\r\n        subscribers = { ...subscribers, message: [] }\r\n        subscribers = { ...subscribers, open: [] }\r\n    }\r\n}\r\n\r\n\r\nexport type WsEventType = 'message' | 'open'\r\ntype SubscriberType = MessageSubscriberType | OpenSubscriberType\r\nexport type MessageSubscriberType = (messages: MessageType[]) => void\r\nexport type OpenSubscriberType = (wsStatus: wsStatusType) => void\r\nexport type MessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n    id: string \r\n}","import { MessageSubscriberType, OpenSubscriberType } from './../Api/Chat-api';\r\nimport { Dispatch } from 'react';\r\nimport { MessageType, WebSocketApi } from '../Api/Chat-api';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst initialState = {\r\n   messages: [] as MessageType[],\r\n   wsStatus: 'open' as wsStatusType,\r\n}\r\n\r\nexport type wsStatusType = 'open' | 'close'\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ChatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CR/MESSAGES_RECEIVED':  \r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages\r\n                    .map((m: MessageType) => ( {...m, id: uuidv4()} ))]\r\n                .filter((m, index, arr) => index >= arr.length - 50)\r\n            }\r\n            case 'CR/CLEAN_MESSAGES':\r\n            case 'CR/WS_STATUS_CHANGED': \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setMessages: ( messages: MessageType[]) => ({ type: 'CR/MESSAGES_RECEIVED', payload: { messages } } as const),\r\n    wsStatusChanged: (wsStatus: wsStatusType) => ({ type: 'CR/WS_STATUS_CHANGED', payload: { wsStatus } } as const),\r\n    cleanMessages: () =>\r\n    ({ type: 'CR/CLEAN_MESSAGES', payload:{ messages: [] as MessageType[] } } as const),\r\n}\r\n\r\n\r\nlet _messageEventSubscriber: null | MessageSubscriberType = null;\r\nconst messageEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_messageEventSubscriber){\r\n        _messageEventSubscriber = (messages: MessageType[]) => {\r\n            dispatch(actions.setMessages( messages))\r\n        }\r\n    }\r\n    return _messageEventSubscriber\r\n}\r\n\r\nlet _openEventSubscriber: null | OpenSubscriberType = null;\r\nconst openEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_openEventSubscriber){\r\n        _openEventSubscriber = (status: wsStatusType) => {\r\n            dispatch(actions.wsStatusChanged(status))\r\n        }\r\n    }\r\n    return _openEventSubscriber\r\n}\r\n\r\nexport const startMessageEventListening = ():  ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n            WebSocketApi.start();\r\n            WebSocketApi.subscribe('message', messageEventSubscriberCreator(dispatch));\r\n            WebSocketApi.subscribe('open', openEventSubscriberCreator(dispatch))\r\n    }\r\n}\r\n\r\nexport const stopMessageEventListening = ():  ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        WebSocketApi.stop();\r\n        WebSocketApi.unSubscribe('message', messageEventSubscriberCreator(dispatch));\r\n        WebSocketApi.unSubscribe('open', openEventSubscriberCreator(dispatch));\r\n        dispatch(actions.cleanMessages())\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType<ActionsType> => {\r\n    return async () => {\r\n        WebSocketApi.send(message)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pages_pages__2_8Fx\",\"ant-menu-submenu-title\":\"Pages_ant-menu-submenu-title__2FIm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserAvatar_avatar__ibIyS\",\"img\":\"UserAvatar_img__1uriq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__pOQy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__h4jVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"UserInfo_aboutUser__35ua9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"SidebarUserPhoto_userPhoto__2ClUV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__f8O5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__bQfBH\"};","import { StateType } from './../store';\r\n\r\nexport const selectUserId = (state: StateType) => {\r\n    return state.auth.id\r\n}\r\n\r\nexport const selectIsAuth = (state: StateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectAuthUserProfile = (state: StateType) => {\r\n    return state.auth.authUserProfile\r\n}\r\n\r\n\r\nexport const selectCaptchaUrl = (state: StateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const selectErrorMessage = (state: StateType) => {\r\n    return state.auth.errorMessage\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n      \"API-KEY\": \"bb181220-b3ed-4219-9d9b-5805e04d81d5\"\r\n    }\r\n  });\r\n\r\n  export type ResponseType<D = {}, RC = ResultCodeEnum> = {\r\n    resultCode: RC\r\n    messages: string[]\r\n    data: D\r\n  }\r\n\r\n  export enum ResultCodeEnum {\r\n    success = 0,\r\n    error = 1\r\n  }\r\n\r\n  export enum ResultCodeCaptchaEnum {\r\n    captcha = 10\r\n  }\r\n","import React, { } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport s from './Page.module.scss';\r\n\r\n\r\nexport const Page: React.FC<PropsType> = React.memo(({ Icon, path, pageName }) => {\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <NavLink activeClassName={s.active} to={`/${path}`}>\r\n                <Icon />\r\n               <span>{pageName} </span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport {\r\n    HomeOutlined,\r\n    UserSwitchOutlined\r\n} from '@ant-design/icons';\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\nimport { Page } from \"./Page/Page\";\r\nimport s from './Pages.module.scss';\r\n\r\n\r\nexport const Pages: React.FC = React.memo(() => {\r\n    return (\r\n        <div data-testid=\"pages_wrapper\" className={s.pages}>\r\n            <div data-testid=\"page_component_wrapper\">\r\n                <Page key={'page1'} Icon={HomeOutlined as IconType} path={'profile'} pageName={'profile'}/>\r\n            </div>\r\n            <div data-testid=\"page_component_wrapper\">\r\n                <Page key={'page2'} Icon={UserSwitchOutlined as IconType} path={'users'} pageName={'users'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import { instance, ResponseType, ResultCodeCaptchaEnum, ResultCodeEnum } from \"./Api\"\r\n\r\nexport type AuthMeDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe: async () => {\r\n        const response = await instance.get<ResponseType<AuthMeDataType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    login: async (email: string, password: string, rememberMe: boolean, captcha = '') => {\r\n        const response = await instance.post<ResponseType<{}, ResultCodeEnum | ResultCodeCaptchaEnum>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n}","import { PhotosType } from '../types/types';\r\nimport { ProfileType } from \"../types/types\"\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype PhotosResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getUser: async (id: number) => {\r\n        const response = await instance.get<ProfileType>(`profile/${id}`)\r\n        return response.data\r\n    },\r\n    getStatus: async (id: number) => {\r\n        const response = await instance.get<string>(`profile/status/${id}`)\r\n        return response.data\r\n    },\r\n    updateStatus: async (status: string) => {\r\n        const response = await instance.put<ResponseType>(`profile/status`, { status })\r\n        return response.data\r\n    },\r\n    updateUserPhoto: async (file: File) => {\r\n        const data = new FormData()\r\n        data.append('file', file)\r\n        const response = await instance.put<ResponseType<PhotosResponseType>>(`profile/photo`, data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        return response.data\r\n    },\r\n    updateProfile: async (profile: ProfileType) => {\r\n            const response = await instance.put<ResponseType>(`profile`, profile)\r\n            return response.data\r\n        }\r\n}\r\n","import { instance } from \"./Api\"\r\n\r\ntype CaptchaUrlType = {\r\n    url: string\r\n} \r\n\r\nexport const SecurityApi = {\r\n    getCaptchaUrl: async () => {\r\n        const response = await instance.get<CaptchaUrlType>(`security/get-captcha-url`)\r\n        return response.data\r\n    },\r\n}","import { ResultCodeCaptchaEnum } from './../Api/Api';\r\nimport { ProfileType } from '../types/types';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { AuthApi } from '../Api/Auth-api';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { ProfileApi } from \"../Api/Profile-api\";\r\nimport { SecurityApi } from '../Api/security-api';\r\nimport { message } from 'antd';\r\n\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    authUserProfile: null as null | ProfileType,\r\n    captchaUrl: null as null | string,\r\n    errorMessage: null as null | string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AuthReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AU/AUTH_VERIFIED':\r\n        case 'AU/AUTH_USER_RECEIVED':\r\n        case 'AU/CAPTCHA_URL_IS_RECEIVED':\r\n        case 'AU/AN_ERROR_HAS_OCCURRED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    authVerified: (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n        ({ type: 'AU/AUTH_VERIFIED', payload: { email, login, id, isAuth } } as const),\r\n    authUserReceived: (authUserProfile: ProfileType) =>\r\n        ({ type: 'AU/AUTH_USER_RECEIVED', payload: { authUserProfile } } as const),\r\n    captchaUrlIsReceived: (captchaUrl: string | null) =>\r\n        ({ type: 'AU/CAPTCHA_URL_IS_RECEIVED', payload: { captchaUrl } } as const),\r\n    AnErrorHasOccurred: (errorMessage: string | null) =>\r\n        ({ type: 'AU/AN_ERROR_HAS_OCCURRED', payload: { errorMessage } } as const),\r\n}\r\n\r\n\r\nexport const authMe = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.authMe()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                const { id, login, email } = data.data\r\n                dispatch(actions.authVerified(id, login, email, true))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = (): ThunkType<ActionsType> => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const state = getState()\r\n            const userId = state.auth.id\r\n            if (userId) {\r\n                const data = await ProfileApi.getUser(userId)\r\n                dispatch(actions.authUserReceived(data))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, Password: string, rememberMe: boolean, captcha: string): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.login(email, Password, rememberMe, captcha)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(authMe())\r\n                dispatch(actions.captchaUrlIsReceived(null))\r\n                dispatch(actions.AnErrorHasOccurred(null))\r\n            } else if (data.resultCode === ResultCodeCaptchaEnum.captcha) {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n                dispatch(getCaptchaUrl())\r\n            } else {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await AuthApi.logout()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.authVerified(null, null, null, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await SecurityApi.getCaptchaUrl()\r\n            dispatch(actions.captchaUrlIsReceived(data.url))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { Button, Dropdown, Menu, message } from 'antd';\r\nimport React from 'react';\r\nimport {\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectAuthUserProfile, selectIsAuth } from '../../../Redux/selectors/auth-selector';\r\nimport { logout } from '../../../Redux/auth-Reducer';\r\nimport s from \"./UserAvatar.module.scss\";\r\n\r\n\r\nexport const UserAvatar: React.FC = React.memo(() => {\r\n\r\n    const authorizedUserData = useSelector(selectAuthUserProfile)\r\n    const userName = authorizedUserData?.fullName\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    function handleMenuClick() {\r\n        message.info('Click on menu item.');\r\n    }\r\n\r\n    const menu = (\r\n        <Menu role={'menu'}>\r\n            <Menu.Item role={'menu-item1'} key=\"1\">\r\n                <Button danger block onClick={()=> {\r\n                    dispatch(logout())\r\n                }}>\r\n                    logout\r\n                </Button>\r\n          </Menu.Item>\r\n            <Menu.Item role={'menu-item2'} key=\"2\" onClick={handleMenuClick} icon={<UserOutlined />}>\r\n                2nd menu item\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div data-testid=\"avatar_wrapper\" className={s.avatar}>\r\n            {isAuth ? <Dropdown.Button data-testid=\"dropdown_button\" overlay={menu}>\r\n                <NavLink role={'user_avatar_link1'} to={'/profile'}>\r\n                    <div> {userName}</div>\r\n                </NavLink>\r\n            </Dropdown.Button> \r\n            : <div data-testid=\"login_button_wrapper\">\r\n                <Button data-testid=\"login_button\">\r\n                    <NavLink role={'user_avatar_link2'} to={'./login'}>\r\n                        login\r\n                    </NavLink>\r\n                </Button>\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n","import { BiNetworkChart } from 'react-icons/bi';\r\nimport React from 'react';\r\n\r\nimport s from \"./Header.module.scss\";\r\nimport { Pages } from './Pages/Pages';\r\nimport { UserAvatar } from './UserAvatar/UserAvatar';\r\n\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n\r\n  return (\r\n    <div data-testid=\"header_wrapper\" className={s.header}>\r\n      <div data-testid=\"header_content\" className={s.headerContent}>\r\n        <div data-testid=\"header_content_left\" className={s.headerContentLeft}>\r\n          <div className={s.logo}>\r\n            <BiNetworkChart />\r\n            <span>SOCIAL NETWORK</span>\r\n          </div>\r\n        </div>\r\n        <div data-testid=\"header_content_right\" className={s.headerContentRight}>\r\n          <div>\r\n            <Pages />\r\n          </div>\r\n          <div>\r\n            <UserAvatar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","import { StateType } from './../store';\r\n\r\n\r\nexport const selectUsers = (state: StateType) => {\r\n    return state.users.users\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.users.isFetching\r\n}\r\n\r\nexport const selectTotalUserCount = (state: StateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\n\r\nexport const selectPageNumber = (state: StateType) => {\r\n    return state.users.pageNumber\r\n}\r\nexport const selectPageSize = (state: StateType) => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const selectFilter = (state: StateType) => {\r\n    return state.users.filter\r\n}\r\n\r\nexport const selectFollowingInProgress = (state: StateType) => {\r\n    return state.users.followInProgress\r\n}\r\n","import { FilterType } from './../Redux/User-Reducer';\r\nimport { UserType } from '../types/types';\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype UserResponseType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const UserApi = {\r\n    getUsers: async (pageNumber: number, pageSize: number,  filter: FilterType) => {\r\n        const response = await instance.get<UserResponseType>(`users?count=${pageSize}\r\n        &page=${pageNumber}&term=${filter.term}&friend=${filter.friend}`)\r\n        return response.data\r\n    },\r\n    follow: async (id: number) => {\r\n        const response = await instance.post<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n    unFollow: async (id: number) => {\r\n        const response = await instance.delete<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n}\r\n","import { UserApi } from './../Api/User-api';\r\nimport { UserType } from '../types/types';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    isFetching: false,\r\n    followInProgress: [] as number[],\r\n    totalUsersCount: 0,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nexport type FilterType = typeof initialState.filter\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\n\r\nexport const UserReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'UR/USERS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n        case 'UR/FOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: true }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/UNFOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: false }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/SET_PAGE_NUMBER':\r\n            return {\r\n                ...state,\r\n                pageNumber: action.payload.pageNumber\r\n            }\r\n        case 'UR/SET_FILTER_DATA':\r\n            return {\r\n                ...state,\r\n                filter: action.payload.filter\r\n            }\r\n        case 'UR/SET_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followInProgress: action.payload.isFollowInProgress ? [...state.followInProgress, action.payload.id]\r\n                    : state.followInProgress.filter((id) => id !== action.payload.id)\r\n            }\r\n        case 'UR/SET_IS_FETCHING':\r\n        case 'UR/TOTAL_COUNT_IS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (users: UserType[]) =>\r\n        ({ type: 'UR/USERS_RECEIVED', payload: { users } } as const),\r\n    setIsFetching: (isFetching: boolean) =>\r\n        ({ type: 'UR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    followIsFinished: (userId: number) =>\r\n        ({ type: 'UR/FOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    unFollowIsFinished: (userId: number) =>\r\n        ({ type: 'UR/UNFOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    totalCountIsReceived: (totalUsersCount: number) =>\r\n        ({ type: 'UR/TOTAL_COUNT_IS_RECEIVED', payload: { totalUsersCount } } as const),\r\n    setPageNumber: (pageNumber: number) =>\r\n        ({ type: 'UR/SET_PAGE_NUMBER', payload: { pageNumber } } as const),\r\n    setFilterData: (filter: FilterType) =>\r\n        ({ type: 'UR/SET_FILTER_DATA', payload: { filter } } as const),\r\n    setFollowInProgress: (id: number, isFollowInProgress: boolean) =>\r\n        ({ type: 'UR/SET_FOLLOWING_PROGRESS', payload: { id, isFollowInProgress } } as const),\r\n}\r\n\r\n\r\nexport const getUsers = (pageNumber: number, pageSize: number, filter: FilterType): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setFilterData(filter))\r\n            dispatch(actions.setIsFetching(true))\r\n            dispatch(actions.setPageNumber(pageNumber))\r\n            const data = await UserApi.getUsers(pageNumber, pageSize, filter)\r\n            dispatch(actions.setIsFetching(false))\r\n            dispatch(actions.usersReceived(data.items))\r\n            dispatch(actions.totalCountIsReceived(data.totalCount))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)       \r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await UserApi.follow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.followIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number): ThunkType<ActionsType, Promise<any>> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await UserApi.unFollow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.unFollowIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n","import { Pagination } from \"antd\";\r\nimport React from \"react\";\r\nimport s from './Paginator.module.scss';\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number\r\n  pageSize?: number\r\n  onPageChangeHandler: (pageNumber: number) => void\r\n  pageNumber: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo(({\r\n  totalItemsCount,\r\n  pageSize = 10,\r\n  onPageChangeHandler,\r\n  pageNumber\r\n}) => {\r\n\r\n  const pagesCount = totalItemsCount / pageSize\r\n\r\n  const onChange = (currentPageNumber: number) => {\r\n    onPageChangeHandler(currentPageNumber)\r\n  }\r\n  return (\r\n    <div className={s.paginator}>\r\n      <Pagination defaultCurrent={pageNumber} size={'small'} current={pageNumber} total={pagesCount * 10} onChange={onChange} />\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/loading.e94beeb6.gif\";","import { Image } from \"antd\";\r\nimport React from \"react\";\r\nimport preloaderImg from '../../../images/loading.gif';\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n    styles: string\r\n}\r\n\r\nexport const Preloader: React.FC<PropsType> = React.memo(({styles})=> {\r\n    return (\r\n        <div className={s.preloader + ' ' + s[styles]}>\r\n            <Image src={preloaderImg}/>\r\n        </div>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport { Input, Form, Select, Button } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { FilterType } from \"../../../../Redux/User-Reducer\";\r\nimport s from './FilterForm.module.scss';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFilter } from \"../../../../Redux/selectors/user-selector\";\r\nimport { maxLengthCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formsControl/formsControl.module.scss';\r\n\r\n\r\nconst Option = Select.Option\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\n\r\ntype FilterFormValuesType = {\r\n    term: string\r\n    friend: string\r\n}\r\n\r\nexport const FilterForm: React.FC<FilterFormPropsType> = React.memo(({onFilterHandler}) => {\r\n\r\n    const filter = useSelector(selectFilter)\r\n\r\n    const submit = (values: FilterFormValuesType, actions: FormikHelpers<FilterFormValuesType>) => {\r\n        setTimeout(() => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n            }\r\n            onFilterHandler(filter)\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term,  friend: String(filter.friend)}}\r\n            validate={(value) => { }}\r\n            onSubmit={submit} \r\n        >\r\n            {({ isSubmitting, values, setFieldValue, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem>\r\n                        <Field name=\"term\"\r\n                            validate={maxLength}\r\n                            render={({ field }: FieldProps) => <Input {...field} placeholder=\"userName\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"term\" component={()=><div className={formStyle.fieldError}>{errors.term}</div>} />\r\n                    </FormItem>\r\n                        <FormItem>\r\n                        <Field  name={'friend'}\r\n                            placeholder={\"HELLO\"}\r\n                            render={({ field }: FieldProps) => \r\n                             <Select \r\n                                className={s.select}\r\n                                {...field}\r\n                                onChange={value => setFieldValue(\"friend\", value)}\r\n                                value={values.friend}\r\n                            >\r\n                                <Option value=\"null\">all</Option>\r\n                                <Option value=\"true\">follow</Option>\r\n                                <Option value=\"false\">unFollow</Option>\r\n                            </Select>\r\n                            } />\r\n                        </FormItem>\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        find\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { PhotosType } from '../../../../types/types';\r\nimport s from './User.module.scss';\r\nimport spareUserPhoto from '../../../../images/img.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { actions, follow, unFollow } from '../../../../Redux/User-Reducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { History } from 'history';\r\n\r\n// this type must be here for this code below to work\r\ninterface IUserProps {\r\n    id: number\r\n    userName: string | null\r\n    status: string | null\r\n    photos: PhotosType\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    isAuth: boolean\r\n    history: History\r\n}\r\n\r\nexport const User: React.FC<IUserProps> = React.memo(({ id, userName, status, photos, followed, followingInProgress, history, isAuth }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followUnFollow = (followedStatus: string, action: (userId: number) => void) => {\r\n        return  <div className={s.button + \" \" + s[followedStatus]}>\r\n        <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n            if (!isAuth) {\r\n                history.push('./login')\r\n                return\r\n            }\r\n            dispatch(action(id))\r\n            dispatch(actions.setFollowInProgress(id, true))\r\n        }}>\r\n            {followedStatus}\r\n        </Button>\r\n    </div>\r\n    }\r\n\r\n    let button;\r\n    if (followed) {\r\n        button = followUnFollow('unFollow', unFollow)\r\n    } else {\r\n        button = followUnFollow('follow', follow)\r\n    }\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.userInfo}>\r\n                <div className={s.rightBlock}>\r\n                    <div className={s.img}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <img src={ photos.large ?  photos.large : spareUserPhoto} alt={'userPhoto'} />\r\n                        </NavLink>\r\n                    </div>\r\n                    {button}\r\n                </div>\r\n                <div className={s.leftBlock}>\r\n                    <div className={s.userName}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <span> {userName}</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        status: {status ? status : '....'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomLine}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport queryString from 'query-string'\r\n\r\nimport {\r\n    selectIsFetching,\r\n    selectUsers,\r\n    selectTotalUserCount,\r\n    selectPageSize,\r\n    selectPageNumber,\r\n    selectFilter,\r\n    selectFollowingInProgress\r\n} from \"../../../Redux/selectors/user-selector\";\r\nimport { FilterType, getUsers } from \"../../../Redux/User-Reducer\";\r\nimport { Paginator } from \"../../Common/Peginator/Paginator\";\r\nimport { Preloader } from \"../../Common/Preloader/Preloader\";\r\nimport { FilterForm } from \"./FilterForm/FilterForm\";\r\nimport { User } from \"./User/User\"\r\nimport s from './UsersPage.module.scss';\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\n\r\n\r\nexport const UsersPage: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isAuth = useSelector(selectIsAuth) \r\n\r\n    const users = useSelector(selectUsers)\r\n    const isFetching = useSelector(selectIsFetching)\r\n    const totalUserCount = useSelector(selectTotalUserCount)\r\n    const pageSize = useSelector(selectPageSize)\r\n    const pageNumber = useSelector(selectPageNumber)\r\n    const filter = useSelector(selectFilter)\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n\r\n\r\n    useEffect(() => {\r\n        const urlData = queryString.parse(history.location.search) as UrlDataType\r\n        let actualPageNumber = pageNumber\r\n        let actualFilter = filter\r\n\r\n        if (urlData.page) actualPageNumber = Number(urlData.page);\r\n        if (urlData.term && urlData.term !== '') actualFilter = { ...actualFilter, term: urlData.term }\r\n        if (urlData.friend) actualFilter = { ...actualFilter, friend: urlData.friend === 'true' ? true : false }\r\n\r\n        dispatch(getUsers(actualPageNumber, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        let urlData: UrlDataType = {}\r\n\r\n        if (pageNumber !== 1) urlData.page = String(pageNumber)\r\n        if (filter.term !== '') urlData.term = filter.term\r\n        if (filter.friend !== null) urlData.friend = String(filter.friend)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(urlData)\r\n        })\r\n    }, [filter, pageNumber, history])\r\n\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n\r\n    }\r\n    const onFilterHandler = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n\r\n    }\r\n\r\n    const usersElements = users.map((u) => <User isAuth={isAuth} followingInProgress={followingInProgress} key={u.id} id={u.id} userName={u.name}\r\n        photos={u.photos} status={u.status} followed={u.followed} history={history} />)\r\n\r\n    return (\r\n        <div className={s.usersPage}>\r\n            <div className={s.userPageTopBlock}>\r\n                <div className={s.usersHeader}>\r\n                    Users\r\n                </div>\r\n                <div>\r\n                    {isFetching && <Preloader styles={'usersPre'} />}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FilterForm onFilterHandler={onFilterHandler} />\r\n            </div>\r\n            <div>\r\n                <Paginator pageSize={pageSize} pageNumber={pageNumber} onPageChangeHandler={onPageChangeHandler} totalItemsCount={totalUserCount} />\r\n            </div>\r\n            {usersElements.length === 0 \r\n            ? <div className={s.notFound}>not Found</div> \r\n            : usersElements }\r\n        </div>\r\n    )\r\n})","import { IconType } from 'react-icons/lib';\r\nimport { getAuthUser } from './auth-Reducer';\r\nimport { ProfileApi } from './../Api/Profile-api';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { PhotosType, ProfileType } from '../types/types';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\nimport { AiFillFacebook, AiFillGithub, AiFillInstagram, AiOutlineTwitter, AiFillYoutube } from 'react-icons/ai';\r\nimport { CgWebsite } from 'react-icons/cg';\r\nimport { BiConfused } from 'react-icons/bi';\r\n\r\n\r\n\r\nconst initialState = {\r\n    profile: null as null | ProfileType,\r\n    status: '' as string,\r\n    isFetching: false,\r\n    isLoading: false,\r\n    updateProfileStatus: null as null | UpdateProfileStatusType,\r\n    icons: {\r\n        facebook: AiFillFacebook,\r\n        website: CgWebsite,\r\n        vk: BiConfused,\r\n        github: AiFillGithub,\r\n        instagram: AiFillInstagram,\r\n        twitter: AiOutlineTwitter,\r\n        youtube: AiFillYoutube,\r\n        mainLink: BiConfused,\r\n    } as {[key: string]: IconType}\r\n}\r\n\r\ntype UpdateProfileStatusType = 'ready' | 'pending' | 'error';\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PR/STATUS_RECEIVED':\r\n        case 'PR/SET_IS_FETCHING':\r\n        case 'PR/PHOTOS_IS_LOADED':\r\n        case 'PR/SET_UPDATE_PROFILE_STATUS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'PR/PHOTOS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.payload.photos } as ProfileType\r\n            }\r\n        case 'PR/PROFILE_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (profile: ProfileType) => ({ type: 'PR/PROFILE_RECEIVED', payload: profile } as const),\r\n    statusReceived: (status: string) => ({ type: 'PR/STATUS_RECEIVED', payload: { status } } as const),\r\n    setIsFetching: (isFetching: boolean) => ({ type: 'PR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    photosReceived: (photos: PhotosType) => ({ type: 'PR/PHOTOS_RECEIVED', payload: { photos } } as const),\r\n    photosILoaded: (isLoading: boolean) => ({ type: 'PR/PHOTOS_IS_LOADED', payload: { isLoading } } as const),\r\n    setUpdateProfileStatus: (updateProfileStatus: UpdateProfileStatusType) =>\r\n        ({ type: 'PR/SET_UPDATE_PROFILE_STATUS', payload: { updateProfileStatus } } as const),\r\n}\r\n\r\n\r\nexport const getUser = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const data = await ProfileApi.getUser(id)\r\n            dispatch(actions.usersReceived(data))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStatus = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.getStatus(id)\r\n            dispatch(actions.statusReceived(data))\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.updateStatus(status)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.statusReceived(status))\r\n            }\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserPhoto = (file: File): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(actions.photosILoaded(true))\r\n            const data = await ProfileApi.updateUserPhoto(file)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.photosReceived(data.data.photos))\r\n                dispatch(getAuthUser())\r\n            }\r\n            dispatch(actions.photosILoaded(false))\r\n\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfile = (profile: ProfileType, setErrors: any): ThunkType<ActionsType> => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            dispatch(actions.setUpdateProfileStatus('pending'))\r\n            const data = await ProfileApi.updateProfile(profile)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.setUpdateProfileStatus('ready'))\r\n                const authUserId = getState().auth.id\r\n                if (authUserId) {\r\n                    dispatch(getUser(authUserId))\r\n                }\r\n            } else {\r\n                dispatch(actions.setUpdateProfileStatus('error'))\r\n                const errorMessage = data.messages[data.messages.length - 1]\r\n                const fieldName = errorMessage.split('->')[1].split(')').join('').toLocaleLowerCase()\r\n                setErrors({ 'contacts': { [fieldName]: errorMessage } })\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { StateType } from './../store';\r\n\r\nexport const selectProfile = (state: StateType) => {\r\n    return state.profile.profile\r\n}\r\n\r\nexport const selectStatus = (state: StateType) => {\r\n    return state.profile.status\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.profile.isFetching\r\n}\r\n\r\nexport const selectIsLoading = (state: StateType) => {\r\n    return state.profile.isLoading\r\n}\r\n\r\nexport const selectUpdateProfileStatus = (state: StateType) => {\r\n    return state.profile.updateProfileStatus\r\n}\r\n\r\nexport const selectIcons = (state: StateType) => {\r\n    return state.profile.icons\r\n}\r\n","import { Input } from \"antd\"\r\nimport React, { FormEvent } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { AiOutlineSelect } from 'react-icons/ai';\r\n\r\nimport s from './UserPhoto.module.scss'\r\nimport userPhoto from '../../../../../images/img.jpg'\r\nimport { updateUserPhoto } from '../../../../../Redux/Profile-Reducer';\r\nimport { selectIsLoading } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\"\r\n\r\n\r\nexport const UserPhoto: React.FC<UserPhotoType> = React.memo(({ img, isOwner }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(selectIsLoading)\r\n\r\n    const onHandleSelect = (e: FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files?.length && e.currentTarget.files[0]\r\n        dispatch(updateUserPhoto(file as File))\r\n    }\r\n\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <div>\r\n                <img src={img ? img : userPhoto} alt={'userPhoto'} />\r\n            </div>\r\n            {isOwner && <div className={s.selectPhoto}>\r\n                <label className={s.label} htmlFor=\"file\">\r\n                    <AiOutlineSelect />\r\n                </label>\r\n            </div>}\r\n\r\n            <Input hidden={true} type={'file'} id={'file'} onChange={onHandleSelect} />\r\n            {isLoading && <Preloader styles={'photosPre'} />}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {  Input, Form } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStatus } from \"../../../../../../../Redux/selectors/profile-selector\";\r\nimport { maxLengthCreator } from \"../../../../../../../validators/validators\";\r\nimport formStyle from '../../../../../../Common/formsControl/formsControl.module.scss';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: (statusText: string)=> void\r\n}\r\ntype StatusFormValuesType = {\r\n    statusText: string\r\n}\r\n\r\nexport const StatusForm: React.FC<PropsType> = React.memo(({deActivateEditMode}) => {\r\n\r\n    const status = useSelector(selectStatus);\r\n\r\n    const submit = (values: StatusFormValuesType, actions: FormikHelpers<StatusFormValuesType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ statusText: status } as StatusFormValuesType}\r\n            validate={(value)=>{}}\r\n            onSubmit={submit}\r\n        >\r\n            {({ values, errors}) => (\r\n                <FormikForm onBlur={()=> {\r\n                    if(!(values.statusText.length > 30)){\r\n                        deActivateEditMode(values.statusText)\r\n                    }\r\n                }} >\r\n                    <FormItem>\r\n                        <Field name=\"statusText\"\r\n                        validate={maxLength}\r\n                         render={({ field }: FieldProps) => <Input {...field}  placeholder=\"status\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"statusText\" component={() => <div className={formStyle.fieldError}> {errors.statusText} </div>} />\r\n                    </FormItem>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateStatus } from \"../../../../../../Redux/Profile-Reducer\";\r\nimport { selectIsFetching, selectStatus } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../../../Common/Preloader/Preloader\";\r\nimport s from './Status.module.scss';\r\nimport { StatusForm } from \"./StatusForm/StatusForm\";\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { useShowMore } from \"../../../../../../hooks/useShowMore\";\r\n\r\ninterface IPropsType {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Status: React.FC<IPropsType> = React.memo(({ isOwner }) => {\r\n\r\n    const isFetching = useSelector(selectIsFetching);\r\n    const status = useSelector(selectStatus);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n    let {\r\n        fullText: fullStatusText,\r\n        menu: showMoreMenu,\r\n        showFullText: showFullStatusText,\r\n        isTextBig: isStatusTextBig,\r\n        setShowFullText: setShowFullStatusText,\r\n        shortText: shortStatusText\r\n    } = useShowMore(status, 20, 'Status')\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = (statusText: string) => {\r\n        setEditMode(false)\r\n        dispatch(updateStatus(statusText))\r\n    }\r\n\r\n\r\n    const showMore = isStatusTextBig ?\r\n        <Dropdown overlay={showMoreMenu} placement=\"topCenter\">\r\n            <div className={s.showMore} onClick={() => {\r\n                setShowFullStatusText(true)\r\n            }}>\r\n                ...\r\n            </div>\r\n        </Dropdown>\r\n        : null\r\n\r\n    let statusText = status\r\n    if (isStatusTextBig) {\r\n        statusText = shortStatusText\r\n    } else if (!statusText) {\r\n        statusText = 'no status'\r\n    } else {\r\n        statusText = fullStatusText\r\n    }\r\n\r\n    fullStatusText = fullStatusText ? fullStatusText : 'no status'\r\n\r\n\r\n\r\n    const showInfoMenu = (\r\n        <Menu className={s.menu}>\r\n            <Menu.Item className={s.showInfoMenu}>\r\n                <div>\r\n                    doubleClick\r\n                </div>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {!editMode && <div className={`${s.status} ${isOwner ? s.cursor : ''}`} onDoubleClick={() => {\r\n                if (isOwner) {\r\n                    activateEditMode()\r\n                }\r\n            }}>\r\n                {isOwner\r\n                    ? <Dropdown overlay={showInfoMenu} placement=\"topCenter\">\r\n                        <div className={s.statusTitle}>\r\n                            status:\r\n                        </div>\r\n                    </Dropdown>\r\n                    : <div className={s.statusTitle}>\r\n                        status:\r\n                    </div>}\r\n                <div className={s.statusText}>\r\n                    {showFullStatusText ? fullStatusText : statusText}\r\n                </div>\r\n                <div >\r\n                    {showFullStatusText || showMore}\r\n                </div>\r\n            </div>}\r\n            {editMode && <div>\r\n                <StatusForm deActivateEditMode={deActivateEditMode} />\r\n            </div>}\r\n            {isFetching && <div><Preloader styles={'statusPre'} /></div>}\r\n        </>\r\n    )\r\n})\r\n","import React from \"react\";\r\nimport s from \"./UserContact.module.scss\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\ntype PropsType = {\r\n    contactsTitle: string\r\n    contactsValue: string\r\n    Icon: IconType\r\n}\r\n\r\nexport const UserContact: React.FC<PropsType> = React.memo(({ contactsTitle, contactsValue, Icon }) => {\r\n    return (\r\n        <div>\r\n            {contactsValue ?\r\n            <div className={s.contact}>\r\n                <span>{contactsTitle}:</span> \r\n                <a href={contactsValue}> <Icon className={s.icon}/></a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { selectIcons } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { ContactsType } from \"../../../../../../types/types\";\r\nimport { UserContact } from \"./UserContact/UserContact\";\r\nimport s from \"./UserContacts.module.scss\";\r\n\r\n\r\nexport const UserContacts: React.FC<UserContactsType> = React.memo(({profile}) => {\r\n\r\n    const contactIcons = useSelector(selectIcons) \r\n\r\n    const contactsElements = Object.keys(profile?.contacts).map((key) =>  {\r\n        return <UserContact key={key} contactsTitle={key} Icon={contactIcons[key]} contactsValue={profile?.contacts[key as keyof ContactsType]} />\r\n    })\r\n\r\n  let contactsCount: number[] = []\r\n  let contactsTitle = Object.values(profile.contacts)\r\n\r\n  for(let i = 0; i < contactsTitle.length; i++) {\r\n    if(contactsTitle[i] !== null){\r\n        contactsCount.push(i)\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className={s.contacts}>\r\n            <div className={s.contactsTitle}>\r\n                contacts\r\n            </div>\r\n            <div className={s.contactsValues}>\r\n               {contactsCount.length ? contactsElements : <div className={s.noContacts}>no contacts</div>}\r\n              </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router\"\r\n\r\nimport { selectProfile } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { ProfileType } from \"../../../../../types/types\"\r\nimport s from './ProfileData.module.scss';\r\nimport { Status } from \"./Status/Status\"\r\nimport { UserContacts } from \"./UserContacts/UserContacts\"\r\nimport { AiOutlineEdit } from 'react-icons/ai';\r\n\r\nexport const ProfileData: React.FC<ProfileDataPropsType> = React.memo(({ activateEditMode }) => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const { userId } = useParams<UserIdParamTypes>()\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            <div className={s.userNameAndStatus}>\r\n                <div className={s.userName}>\r\n                    {profile?.fullName}\r\n                    {!userId && <div className={s.editIcon} onClick={() => {\r\n                        activateEditMode()\r\n                    }}>\r\n                        <AiOutlineEdit />\r\n                    </div>}\r\n                </div>\r\n                <div>\r\n                    <Status isOwner={!userId} />\r\n                </div>\r\n                <div className={s.aboutMe}>\r\n                    <span>about me: </span>{profile?.aboutMe || '.....'}\r\n                </div>\r\n                <div className={s.lookingForAJob}>\r\n                    <span>looking for a Job: </span>{profile?.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div className={s.professionalSkills}>\r\n                    {profile?.lookingForAJob\r\n                        ? <div><span> my professional skills: </span>{profile?.lookingForAJobDescription || '.....'}</div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <UserContacts profile={profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import FormItem from \"antd/lib/form/FormItem\"\r\nimport { ErrorMessage, Field, FieldProps } from \"formik\"\r\nimport formError from '../../Common/formsControl/formsControl.module.scss'\r\n\r\ninterface ICreateFiled {\r\n    label?: string\r\n    fieldName?: string\r\n    validate?: (value?: any) => string | undefined\r\n    isCheckbox?: boolean\r\n    checkboxText?: string\r\n    properties?: {[key: string]: any}\r\n    fieldError?: string\r\n    Component?: any\r\n    key?: string \r\n    className?: string\r\n}\r\n\r\nexport function createField<T extends string> ({label, fieldName, validate, properties, fieldError, Component, key,className}: ICreateFiled) {\r\n    return <FormItem className={className || ''} label={label} key={key}>\r\n        <Field name={fieldName as T}\r\n            validate={validate}\r\n            render={({ field }: FieldProps) => <Component {...field} {...properties} />} />\r\n        <ErrorMessage name={fieldName || ''} component={() => <div className={formError.fieldError}>{fieldError}</div>} />\r\n    </FormItem>\r\n} ","import React from \"react\";\r\nimport { Input, Form, Button } from \"antd\";\r\nimport { Form as FormikForm, FormikHelpers } from \"formik\";\r\nimport { Formik } from 'formik';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { Modal } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { maxLengthCreator, reqAndMaxLValCreator } from \"../../../../../validators/validators\";\r\nimport s from './ProfileDataForm.module.scss';\r\nimport { selectUpdateProfileStatus } from \"../../../../../Redux/selectors/profile-selector\";\r\nimport { ProfileType } from \"../../../../../types/types\";\r\nimport { updateProfile } from \"../../../../../Redux/Profile-Reducer\";\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\";\r\nimport { createField } from \"../../../../Common/formsControl/formControls\";\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nexport const ProfileDataForm: React.FC<ProfileDataFormPropsType> = React.memo(({ deActivateEditMode, editMode, profile }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const updateProfileStatus = useSelector(selectUpdateProfileStatus)\r\n\r\n    const submit = (values: ProfileType, actions: FormikHelpers<ProfileType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    const contactsFormCreator = (errors: Partial<any>) => {\r\n        return Object.keys(profile.contacts).map((key) => {\r\n           return  createField({\r\n                label: key,\r\n                className: `${s[key]}`,\r\n                fieldName: `contacts.${key}`,\r\n                fieldError: errors.contacts?.[key],\r\n                Component: Input,\r\n                validate: maxLength,\r\n                properties: { 'data-testid': 'contact_input', placeholder: key }\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ ...profile }}\r\n            validate={() => { }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ values, errors, setErrors, resetForm, setSubmitting }) => (\r\n                <Modal centered title={'Edit your profile'} visible={editMode} onCancel={deActivateEditMode} footer={[\r\n                    <Button data-testid='button_submit' htmlType={\"submit\"} type={'primary'} onClick={() => {\r\n                        if (Object.keys(errors).length === 0 && errors.constructor === Object) {\r\n                            dispatch(updateProfile(values, setErrors))\r\n                            if (!(updateProfileStatus === 'error' || updateProfileStatus === 'pending')) {\r\n                                resetForm({})\r\n                                deActivateEditMode()\r\n                                setSubmitting(false)\r\n                            }\r\n                        }\r\n                    }}>\r\n                        save\r\n                    </Button>,\r\n                    <Button data-testid='cancel_button' onClick={() => {\r\n                        deActivateEditMode()\r\n                    }}>\r\n                        cancel\r\n                    </Button>\r\n                ]}>\r\n                    <FormikForm data-testid='form' className={s.form}>\r\n                        <div className={s.pre}>\r\n                            {updateProfileStatus === 'pending' && <div><Preloader styles={'updProfPre'} /></div>}\r\n                        </div>\r\n                        <Input.Group>\r\n                            {createField<'fullName'>({\r\n                                label: 'name',\r\n                                fieldName: 'fullName',\r\n                                className: s.formItem,\r\n                                fieldError: errors.fullName,\r\n                                Component: Input,\r\n                                validate: reqAndMaxLValCreator(20),\r\n                                properties: { autoFocus: true, placeholder: \"fullName\" }\r\n\r\n                            })}\r\n                            {createField({\r\n                                label: 'aboutMe',\r\n                                fieldName: 'aboutMe',\r\n                                fieldError: errors.aboutMe,\r\n                                className: s.formItem,\r\n                                Component: TextArea,\r\n                                validate: reqAndMaxLValCreator(50),\r\n                                properties: {placeholder: \"aboutMe\" }\r\n\r\n                            })}\r\n                             {createField({\r\n                                fieldName: 'lookingForAJob',\r\n                                fieldError: errors.lookingForAJob as string,\r\n                                properties: { checked: values.lookingForAJob },\r\n                                className: s.formItem,\r\n                                Component: Checkbox,\r\n                            })}\r\n                            {createField({\r\n                                label: 'lookingForAJobDescription',\r\n                                fieldName: 'lookingForAJobDescription',\r\n                                fieldError: errors.lookingForAJobDescription,\r\n                                className: s.formItem,\r\n                                Component: TextArea,\r\n                                validate: reqAndMaxLValCreator(40),\r\n                                properties: {placeholder: \"lookingForAJobDescription\" }\r\n\r\n                            })}\r\n                        </Input.Group>\r\n                        <FormItem className={s.contacts}>\r\n                            <div data-testid=\"contacts\" className={s.contactsHeader}>\r\n                                contacts\r\n                            </div>\r\n                            {contactsFormCreator(errors)}\r\n                        </FormItem>\r\n                    </FormikForm>\r\n                </Modal>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport s from \"./UserInfo.module.scss\";\r\nimport { UserPhoto } from \"./UserPhoto/UserPhoto\";\r\nimport { getStatus, getUser } from \"../../../../Redux/Profile-Reducer\";\r\nimport { selectProfile } from \"../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../Common/Preloader/Preloader\";\r\nimport { ProfileType } from \"../../../../types/types\";\r\nimport { selectUserId } from \"../../../../Redux/selectors/auth-selector\";\r\nimport { ProfileData } from \"./ProfileData/ProfileData\";\r\nimport { ProfileDataForm } from \"./ProfileDataForm/ProfileDataForm\";\r\n\r\n\r\nexport const UserInfo: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const AuthUserId = useSelector(selectUserId)\r\n    const history = useHistory()\r\n    const { userId } = useParams<UserIdParamTypes>()\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userIdFromUrl = Number(userId);\r\n        if (userIdFromUrl) {\r\n            dispatch(getUser(userIdFromUrl))\r\n            dispatch(getStatus(userIdFromUrl))\r\n        } else if (AuthUserId) {\r\n            dispatch(getUser(AuthUserId))\r\n            dispatch(getStatus(AuthUserId))\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, AuthUserId, userId, history])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader data-testid=\"userInfo_preloader\" styles={'profilePre'} />\r\n    }\r\n\r\n    return (\r\n        <div data-testid=\"aboutUser_wrapper\" className={s.aboutUser}>\r\n            <UserPhoto data-testid=\"user_photo_component\" isOwner={!userId} img={profile.photos?.large} />\r\n            <div>\r\n            {!editMode && <ProfileData data-testid=\"profile_data_component\" activateEditMode={activateEditMode}/>}\r\n          \r\n            </div>\r\n            {editMode &&  <ProfileDataForm \r\n                profile={profile} \r\n                data-testid=\"profile_data_form_component\" \r\n                deActivateEditMode={deActivateEditMode} \r\n                editMode={editMode}/>}\r\n        </div>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainImg.0de69ef5.jpg\";","import React, { FC } from 'react';\r\n\r\nimport s from \"./ProfilePage.module.scss\";\r\nimport { UserInfo } from './UserInfor/UserInfo';\r\nimport mainPhoto from '../../../images/mainImg.jpg'\r\nimport '../../../App.css';\r\n\r\nexport const ProfilePage: FC = React.memo(() => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <div className={s.mainImg}>\r\n                <img src={mainPhoto} alt={'mainImg'}/>\r\n            </div>\r\n            <div data-testid=\"UserInfo_wrapper\" className={s.contentBottom}>\r\n                <UserInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './SidebarUserPhoto.module.scss'\r\nimport userPhoto from '../../../../images/img.jpg'\r\n\r\nexport const SidebarUserPhoto: React.FC<SidebarUserPhotoType> = React.memo(({img}) => {\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <img src={img ? img : userPhoto} alt={'authorized user'} />\r\n        </div>\r\n    )\r\n})","import { StateType } from '../store';\r\n\r\nexport const selectFriends = (state: StateType) => {\r\n    return state.sideBar.friends\r\n}\r\n\r\n","import { UserApi } from './../Api/User-api';\r\nimport { Dispatch } from 'react';\r\nimport { GetActionsType, ThunkType } from './store';\r\nimport { UserType } from '../types/types';\r\nimport { message } from 'antd';\r\nimport { unFollow } from './User-Reducer';\r\n\r\n\r\nconst initialState = {\r\n    friends: [] as UserType[],\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const SideBarReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SB/FRIENDS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    friendsReceived: (friends: UserType[]) =>\r\n        ({ type: 'SB/FRIENDS_RECEIVED', payload: { friends } } as const),\r\n}\r\n\r\n\r\n\r\nexport const getFriends = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await UserApi.getUsers(20, 3, { term: '', friend: true })\r\n            dispatch(actions.friendsReceived(result.items))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteFriend = (id: number): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let result = dispatch(unFollow(id))\r\n            Promise.all([result]).then(() => {\r\n                dispatch(getFriends())\r\n            })\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport s from './Friend.module.scss'\r\nimport sparePhoto from '../../../../../images/img.jpg'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectFollowingInProgress } from \"../../../../../Redux/selectors/user-selector\"\r\nimport { actions } from \"../../../../../Redux/User-Reducer\"\r\nimport { deleteFriend } from \"../../../../../Redux/Sidebar-Reducer\"\r\nimport { Dropdown, Button } from 'antd';\r\nimport { useShowMore } from \"../../../../../hooks/useShowMore\"\r\n\r\n\r\nexport const Friend: React.FC<IFriendProps> = React.memo(({ photos, id, name }) => {\r\n\r\n    let {\r\n        fullText: fullFriendName, menu, showFullText: showFullFriendName,\r\n        isTextBig: isFriendNameBig, shortText: shortFriendName\r\n    } = useShowMore(name, 10, 'Friend')\r\n\r\n\r\n    const friendPhoto = photos.small\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n    const dispatch = useDispatch()\r\n\r\n    const onHandelClick = () => {\r\n        dispatch(deleteFriend(id))\r\n        dispatch(actions.setFollowInProgress(id, true))\r\n    }\r\n\r\n    const isDisabled = followingInProgress.some((selectedId) => selectedId === id)\r\n\r\n    let friendName = name \r\n    if(isFriendNameBig) {\r\n        friendName = shortFriendName\r\n    } else {\r\n        friendName = fullFriendName\r\n    }\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <div className={s.imgAndName}>\r\n                <div className={s.img}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img src={friendPhoto ? friendPhoto : sparePhoto} alt={'friendPhoto'} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.nameLink}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        {showFullFriendName ? fullFriendName : friendName}\r\n                        <span className={s.showMore}>{isFriendNameBig\r\n                            ? <Dropdown overlay={menu} placement=\"topCenter\">\r\n                                <span>...</span>\r\n                            </Dropdown>\r\n                            : null}</span>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Button disabled={isDisabled} onClick={onHandelClick}>\r\n                delete\r\n            </Button>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { selectFriends } from \"../../../../Redux/selectors/sideBar-selector\"\r\nimport s from './Friends.module.scss'\r\nimport {Friend} from './Friend/Friend'\r\n\r\n\r\nexport const Friends: React.FC = React.memo(() => {\r\n    \r\n    const friends = useSelector(selectFriends)\r\n\r\n    const friendElements = friends.map((f) => <Friend key={f.id} photos={f.photos} name={f.name} id={f.id}/>)\r\n\r\n    return (\r\n        <div className={s.SidBaFriends}>\r\n            <h2>\r\n                friends\r\n            </h2>\r\n            <div className={s.test}>\r\n            <div className={s.friends}>\r\n                {friendElements}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from \"./SideBar.module.scss\";\r\nimport { SidebarUserPhoto } from './SidebarUserPhoto/SidebarUserPhoto';\r\nimport { getAuthUser } from '../../../Redux/auth-Reducer';\r\nimport { selectAuthUserProfile } from '../../../Redux/selectors/auth-selector';\r\nimport { Friends } from './Friends/Friends'\r\nimport { getFriends } from '../../../Redux/Sidebar-Reducer';\r\n\r\n\r\nexport const SideBar = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const authorizedUserData = useSelector(selectAuthUserProfile)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthUser())\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n  \r\n\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <div className={s.sidebarTop}>\r\n      </div>\r\n      <div className={s.sidebarBottom}>\r\n        <div className={s.userPhoto}>\r\n          <NavLink to={'/profile'}>\r\n            <SidebarUserPhoto img={authorizedUserData?.photos.large} />\r\n          </NavLink>\r\n        </div>\r\n        <div className={s.userName}>\r\n          <NavLink to={'/profile'}>\r\n            <span>{authorizedUserData?.fullName}</span>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <Friends/>\r\n        </div>\r\n        <div className={s.viewP}>\r\n        <NavLink to={'/profile'}>\r\n            view profile\r\n        </NavLink>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}","import React from \"react\";\r\nimport { Input, Form, Button, Image } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport s from './LoginForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../../Redux/auth-Reducer\";\r\nimport {selectCaptchaUrl, selectErrorMessage} from '../../../../Redux/selectors/auth-selector';\r\nimport { emailValidator,  reqAndMaxLValCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formsControl/formsControl.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type FormActionsType = FormikHelpers<LoginFormValuesType>\r\n\r\nexport const LoginForm: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const captchaUrl = useSelector(selectCaptchaUrl)\r\n    const error = useSelector(selectErrorMessage)\r\n  \r\n\r\n    const submit = (values: LoginFormValuesType, actions: FormActionsType,) => {\r\n        setTimeout(() => {\r\n            const {email, password, rememberMe, captcha} = values;\r\n            dispatch(login(email, password, rememberMe, captcha ))\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', rememberMe: false, captcha: '', }}\r\n            validate={(value) => {\r\n            \r\n            }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem label={'email'}>\r\n                        <Field name=\"email\"\r\n                            validate={emailValidator}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"email\" placeholder=\"email\" />} />\r\n                        <ErrorMessage name=\"email\" component={()=><div className={formStyle.fieldError}>{errors.email}</div>} />\r\n                    </FormItem>\r\n                    <FormItem label={'password'} >\r\n                        <Field name=\"password\"\r\n                            validate={reqAndMaxLValCreator(40)}\r\n                            render={({ field }: FieldProps) => <Input.Password {...field}  type=\"password\" placeholder=\"password\"/>} />\r\n                        <ErrorMessage name=\"password\" component={()=> <div className={formStyle.fieldError}>{errors.password}</div>} />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Field name=\"rememberMe\"\r\n                            render={({ field }: FieldProps) =>   \r\n                            <Checkbox\r\n                            {...field}\r\n                            checked={values.rememberMe}\r\n                          >\r\n                            rememberMe\r\n                          </Checkbox>}/>\r\n                    </FormItem>\r\n                    {error && <div className={formStyle.formError}>{error}</div>}\r\n                   {captchaUrl && <div className={s.captcha}>\r\n                       <div className={s.captchaImg}> \r\n                            <Image src={captchaUrl}/>\r\n                       </div>\r\n                    <FormItem label={'captcha'}>\r\n                        <Field name=\"captcha\"\r\n                            validate={reqAndMaxLValCreator(20)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  placeholder=\"captcha\" autoFocus={true}/>} />\r\n                        <ErrorMessage name=\"captcha\" component={()=> <div className={formStyle.fieldError}>{errors.captcha}</div>} />\r\n                    </FormItem>\r\n                       </div>}\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        login\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport s from './LoginPage.module.scss';\r\nimport {LoginForm} from './LoginForm/LoginForm';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  if(isAuth){\r\n      return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div className= {s.loginPage}>\r\n      <div className={s.loginHeader}>\r\n        login\r\n      </div>\r\n      <div>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n","import React from 'react';\r\nimport s from \"./NotFound.module.scss\";\r\n\r\n\r\nexport const NotFound: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={s.notFound}>\r\n            NOT FOUND\r\n        </div>\r\n    )\r\n})","import React, { FC, Suspense } from 'react';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport s from \"./Main.module.scss\";\r\nimport '../../App.css';\r\nimport { UsersPage } from \"./UserPage/UserPage\";\r\nimport { ProfilePage } from \"./ProfilePage/ProfilePage\"\r\nimport { SideBar } from \"./SideBar/SideBar\"\r\nimport { selectIsAuth } from '../../Redux/selectors/auth-selector'\r\nimport { LoginPage } from \"./LoginPage/LoginPage\";\r\nimport { NotFound } from './../NotFound/NotFound'\r\n\r\n\r\nconst ChatPage: FC = React.lazy(() => import('./ChatPage/ChatPage'));\r\n\r\n\r\nexport const Main = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      {isAuth && <SideBar />}\r\n      <div className={`commonContentStyle ${!isAuth ? 'authorized' : ''}`}>\r\n        <div>\r\n          <Switch>\r\n            <Route path={'/profile/:userId?'} render={() => {\r\n              return <ProfilePage />\r\n            }} />\r\n            <Route path={'/users'}>\r\n              <UsersPage />\r\n            </Route>\r\n            <Route path={'/login'}>\r\n              <LoginPage />\r\n            </Route>\r\n            <Route exact path={'/'} render={() => {\r\n              return <Redirect to={\"/profile\"}\r\n              />\r\n            }} />\r\n            <Route path={'*'}>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <div>\r\n         {isAuth && <Suspense fallback={<div>loading...</div>}>\r\n        <ChatPage/>\r\n        </Suspense>}\r\n      </div> \r\n    </div>\r\n  )\r\n})","import { GetActionsType, ThunkType } from './store';\r\nimport { authMe } from './auth-Reducer';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    isAuthorizeFinished: false,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AppReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AP/AUTHORIZE_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n        authorizedIsFinished: (isAuthorizeFinished: boolean) =>\r\n        ({ type: 'AP/AUTHORIZE_IS_FINISHED', payload: { isAuthorizeFinished } } as const),\r\n}\r\n\r\n\r\n\r\nexport const authorize = (): ThunkType<ActionsType> => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = dispatch(authMe())\r\n            Promise.all([result]).then(()=> {\r\n                dispatch(actions.authorizedIsFinished(true))\r\n            })\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { StateType } from '../store';\r\n\r\nexport const selectIsAuthorizeFinished = (state: StateType) => {\r\n    return state.app.isAuthorizeFinished\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './Footer.module.scss';\r\n\r\nexport const Footer: React.FC = React.memo(() => {\r\n    return (\r\n        <div data-testid=\"footer\" className={s.footer}>\r\n            this site was created by David Gasparian\r\n        </div>\r\n    )\r\n})","import { useEffect } from 'react';\nimport 'antd/dist/antd.css';\n\nimport './App.css';\nimport { Header } from './Components/Header/Header';\nimport { Main } from './Components/Main/Main';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Preloader } from './Components/Common/Preloader/Preloader';\nimport { authorize } from './Redux/App-Reducer';\nimport { selectIsAuthorizeFinished } from './Redux/selectors/App-selector';\nimport { Footer } from './Components/Footer/Footer';\ndocument.body.style.backgroundColor = \"#F3F2EF\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const isAuthorizeFinished = useSelector(selectIsAuthorizeFinished)\n\n  useEffect(() => {\n    dispatch(authorize());\n  }, [dispatch]);\n\n  if (!isAuthorizeFinished) {\n    return <Preloader styles={'appPre'} />\n  }\n\n  return (\n    <div className={'App'}>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ThunkAction } from 'redux-thunk'\r\nimport { SideBarReducer } from './Sidebar-Reducer';\r\nimport { UserReducer } from './User-Reducer';\r\nimport { Action, applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { ProfileReducer } from \"./Profile-Reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { AuthReducer } from \"./auth-Reducer\";\r\nimport { AppReducer } from './App-Reducer';\r\nimport { ChatReducer } from './Chat-Reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: ProfileReducer,\r\n    auth: AuthReducer,\r\n    users: UserReducer,\r\n    app: AppReducer,\r\n    chat: ChatReducer,\r\n    sideBar: SideBarReducer\r\n})\r\n\r\n\r\ntype TypeWithInfer<T> = T extends {[key: string]: infer U} ? U : any\r\nexport type GetActionsType<T extends {[key: string]: (...args: any) => any}> = ReturnType<TypeWithInfer<T>>   \r\nexport type StateType = ReturnType<typeof rootReducer>\r\nexport type ThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>\r\n\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n//@ts-ignore\r\nwindow._store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />,\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const emailValidator = (value: string) => {\r\n    let error;\r\n    const maxLength = maxLengthCreator(40)\r\n    error = maxLength(value)\r\n    error = error || required(value) \r\n     if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = error || 'Invalid email address';\r\n    } \r\n    return error;\r\n}\r\n\r\nexport const reqAndMaxLValCreator = (MaxLength: number) => {\r\n    return (value: string) => {\r\n        let error;\r\n        const maxLength = maxLengthCreator(MaxLength)\r\n        error = maxLength(value)\r\n        error = error || required(value) \r\n        return error\r\n    }\r\n}\r\n\r\nexport const required = (value: string) => {\r\n    let error;\r\n    if(!value) {\r\n        error = 'filed is required'\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    let error;\r\n    if (value && value.length > maxLength) {\r\n        error = `Max length is ${maxLength}`\r\n    }\r\n    return error;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldError\":\"formsControl_fieldError__2W8lW\",\"formError\":\"formsControl_formError__1ienr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1m8QG\",\"userInfo\":\"User_userInfo__psQg3\",\"rightBlock\":\"User_rightBlock__iRdgz\",\"button\":\"User_button__1hc_-\",\"leftBlock\":\"User_leftBlock__3WWr7\",\"status\":\"User_status__2w2lD\",\"userName\":\"User_userName__3dUmi\",\"bottomLine\":\"User_bottomLine__3sa7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__1FYMM\",\"pre\":\"ProfileDataForm_pre__2O8rg\",\"formItem\":\"ProfileDataForm_formItem__23klk\",\"contacts\":\"ProfileDataForm_contacts__1uNUy\",\"contactsHeader\":\"ProfileDataForm_contactsHeader__37Njc\",\"contact\":\"ProfileDataForm_contact__2AOVd\",\"SendButton\":\"ProfileDataForm_SendButton__2uSCV\",\"closeIcon\":\"ProfileDataForm_closeIcon__19z6Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__3wzJC\",\"userNameAndStatus\":\"ProfileData_userNameAndStatus__1_-SB\",\"userName\":\"ProfileData_userName__2tGwV\",\"editIcon\":\"ProfileData_editIcon__14FgP\",\"aboutMe\":\"ProfileData_aboutMe__2PHeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__KLu2k\",\"cursor\":\"Status_cursor__fCL1U\",\"statusTitle\":\"Status_statusTitle__3rOuF\",\"statusText\":\"Status_statusText__3sk-5\",\"showMore\":\"Status_showMore__O3g_3\",\"menu\":\"Status_menu__3HvJw\",\"showInfoMenu\":\"Status_showInfoMenu__9qS5j\"};","export default __webpack_public_path__ + \"static/media/img.4e5df239.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"SideBar_sidebar__3dulD\",\"sidebarBottom\":\"SideBar_sidebarBottom__vxHE7\",\"userPhoto\":\"SideBar_userPhoto__tSYGM\",\"userName\":\"SideBar_userName__pnHuT\",\"viewP\":\"SideBar_viewP__3zbLI\",\"sidebarTop\":\"SideBar_sidebarTop__LRdFP\"};"],"sourceRoot":""}