{"version":3,"sources":["Components/Header/Header.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.module.scss","Components/Wrapper/SideBar/Friends/Friend/Friend.module.scss","Components/Wrapper/UserPage/UsersPage.module.scss","Components/Wrapper/LoginPage/LoginForm/LoginForm.module.scss","Components/Wrapper/ProfilePage/ProfilePage.module.scss","Components/Wrapper/SideBar/Friends/Friends.module.scss","Components/Wrapper/UserPage/FilterForm/FilterForm.module.scss","Components/Header/Pages/Page/Page.module.scss","Components/Wrapper/ProfilePage/UserInfor/UserInfo.module.scss","Components/Wrapper/ProfilePage/UserInfor/UserPhoto/UserPhoto.module.scss","Components/Common/Preloader/Preloader.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/Status.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.module.scss","Components/Wrapper/LoginPage/LoginPage.module.scss","Api/Chat-api.ts","Redux/Chat-Reducer.ts","Components/Header/Pages/Pages.module.scss","Components/Header/UserAvatar/UserAvatar.module.scss","Components/Wrapper/SideBar/SidebarUserPhoto/SidebarUserPhoto.module.scss","Components/Wrapper/Main.module.scss","Components/Common/Peginator/Paginator.module.scss","Components/NotFound/NotFound.module.scss","Redux/selectors/auth-selector.ts","Api/Api.ts","Components/Header/Pages/Page/Page.tsx","Components/Header/Pages/Pages.tsx","Api/Auth-api.ts","Api/Profile-api.ts","Api/security-api.ts","Redux/auth-Reducer.ts","Components/Header/UserAvatar/UserAvatar.tsx","Components/Header/Header.tsx","Redux/Profile-Reducer.ts","Redux/selectors/profile-selector.ts","images/loading.gif","Components/Common/Preloader/Preloader.tsx","Components/Wrapper/ProfilePage/UserInfor/UserPhoto/UserPhoto.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/StatusForm/StatusForm.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/Status.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/ProfileData.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.tsx","Components/Wrapper/ProfilePage/UserInfor/UserInfo.tsx","images/mainImg.jpg","Components/Wrapper/ProfilePage/ProfilePage.tsx","Components/Wrapper/SideBar/SidebarUserPhoto/SidebarUserPhoto.tsx","Redux/selectors/sideBar-selector.ts","Redux/selectors/user-selector.ts","Api/User-api.ts","Redux/User-Reducer.ts","Redux/Sidebar-Reducer.ts","Components/Wrapper/SideBar/Friends/Friend/Friend.tsx","Components/Wrapper/SideBar/Friends/Friends.tsx","Components/Wrapper/SideBar/SideBar.tsx","Components/Common/Peginator/Paginator.tsx","Components/Wrapper/UserPage/FilterForm/FilterForm.tsx","Components/Wrapper/UserPage/User/User.tsx","Components/Wrapper/UserPage/UserPage.tsx","Components/Wrapper/LoginPage/LoginForm/LoginForm.tsx","Components/Wrapper/LoginPage/LoginPage.tsx","Components/NotFound/NotFound.tsx","Components/Wrapper/Main.tsx","Redux/App-Reducer.ts","Redux/store.ts","Redux/selectors/App-selector.ts","App.tsx","reportWebVitals.ts","index.tsx","Components/Common/formControl.module.scss","validators/validators.ts","Components/Wrapper/UserPage/User/User.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.module.scss","images/img.jpg","Components/Wrapper/ProfilePage/UserInfor/ProfileData/ProfileData.module.scss","Components/Wrapper/SideBar/SideBar.module.scss"],"names":["module","exports","ws","subscribers","message","open","onMessageHandler","e","forEach","s","JSON","parse","data","onErrorHandler","console","log","onCloseHandler","setTimeout","createWebsocket","onOpenHandler","clineUp","close","removeEventListener","WebSocket","addEventListener","WebSocketApi","wsEvent","callback","filter","send","initialState","messages","wsStatus","ChatReducer","state","action","type","payload","map","m","id","uuidv4","index","arr","length","actions","_messageEventSubscriber","messageEventSubscriberCreator","dispatch","_openEventSubscriber","openEventSubscriberCreator","status","startMessageEventListening","a","stopMessageEventListening","sendMessage","selectUserId","auth","selectIsAuth","isAuth","selectAuthUserProfile","authUserProfile","selectCaptchaUrl","captchaUrl","selectErrorMessage","errorMessage","ResultCodeEnum","ResultCodeCaptchaEnum","Page","React","memo","Icon","path","pageName","className","page","activeClassName","active","to","Pages","pages","HomeOutlined","UserSwitchOutlined","instance","axios","create","baseURL","withCredentials","headers","AuthApi","authMe","get","response","login","email","password","rememberMe","captcha","post","logout","delete","ProfileApi","getUser","getStatus","updateStatus","put","updateUserPhoto","file","FormData","append","updateProfile","profile","SecurityApi","getCaptchaUrl","resultCode","success","stringify","errorText","slice","error","getAuthUser","getState","userId","url","UserAvatar","useSelector","userName","fullName","useDispatch","menu","Item","danger","block","onClick","info","icon","UserOutlined","avatar","Button","overlay","Header","header","headerContent","headerContentLeft","logo","headerContentRight","isFetching","isLoading","updateProfileStatus","icons","facebook","AiFillFacebook","website","CgWebsite","vk","BiConfused","github","AiFillGithub","instagram","AiFillInstagram","twitter","AiOutlineTwitter","youtube","AiFillYoutube","mainLink","photos","selectProfile","selectStatus","selectIsFetching","selectIsLoading","selectUpdateProfileStatus","selectIcons","Preloader","styles","preloader","src","preloaderImg","UserPhoto","img","isOwner","userPhoto","alt","htmlFor","ownerPhoto","hidden","onChange","currentTarget","files","FormItem","Form","maxLength","maxLengthCreator","StatusForm","deActivateEditMode","initialValues","statusText","validate","value","onSubmit","values","setSubmitting","errors","onBlur","name","render","field","placeholder","autoFocus","component","formStyle","fieldError","Status","useState","editMode","setEditMode","data-test","onDoubleClick","UserContact","contactsTitle","contactsValue","contact","href","UserContacts","contactsElements","Object","keys","contacts","key","i","push","contactsValues","noContacts","ProfileData","useParams","profileData","userNameAndStatus","aboutMe","lookingForAJob","professionalSkills","lookingForAJobDescription","ProfileDataForm","contactsFormCreator","label","formError","enableReinitialize","isSubmitting","setErrors","resetForm","width","centered","title","visible","onCancel","footer","htmlType","disabled","authUserId","fieldName","split","join","toLocaleLowerCase","form","pre","Group","formItem","reqAndMaxLValCreator","checked","contactsHeader","UserInfo","AuthUserId","history","useHistory","useEffect","userIdFromUrl","Number","aboutUser","large","edit","ProfilePage","profilePage","mainImg","mainPhoto","contentBottom","SidebarUserPhoto","selectFriends","sideBar","friends","selectUsers","users","selectTotalUserCount","totalUsersCount","selectPageNumber","pageNumber","selectPageSize","pageSize","selectFilter","selectFollowingInProgress","followInProgress","UserApi","getUsers","term","friend","follow","unFollow","isFollowInProgress","items","totalCount","friendsReceived","getFriends","result","Friend","friendPhoto","small","followingInProgress","imgAndName","sparePhoto","nameLink","some","FPId","promise","Promise","all","then","Friends","friendElements","f","SidBaFriends","test","SideBar","sidebar","sidebarTop","sidebarBottom","viewP","Paginator","totalItemsCount","onPageChangeHandler","pagesCount","paginator","defaultCurrent","size","current","total","currentPageNumber","Option","Select","FilterForm","onFilterHandler","String","setFieldValue","select","SendButton","User","button","followed","user","userInfo","rightBlock","spareUserPhoto","leftBlock","bottomLine","UsersPage","totalUserCount","urlData","queryString","location","search","actualPageNumber","actualFilter","pathname","usersElements","u","usersPage","userPageTopBlock","usersHeader","notFound","LoginForm","Password","emailValidator","captchaImg","LoginPage","loginPage","loginHeader","NotFound","ChatPage","lazy","Main","main","match","exact","fallback","isAuthorizeFinished","rootReducer","combineReducers","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_store","selectIsAuthorizeFinished","App","document","body","style","backgroundColor","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","required","MaxLength"],"mappings":"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","file":"static/js/main.9b241c55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3oEm5\",\"headerContent\":\"Header_headerContent__3cVMj\",\"headerContentLeft\":\"Header_headerContentLeft__1kmPt\",\"logo\":\"Header_logo__1iYvb\",\"headerContentRight\":\"Header_headerContentRight__3Tyn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"UserContacts_contacts__1X4Lm\",\"contactsTitle\":\"UserContacts_contactsTitle__2TRMk\",\"contactsValues\":\"UserContacts_contactsValues__2oA9h\",\"noContacts\":\"UserContacts_noContacts__2jza1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3RwNA\",\"imgAndName\":\"Friend_imgAndName__3MeiW\",\"nameLink\":\"Friend_nameLink__nFGbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__KNlYX\",\"userPageTopBlock\":\"UsersPage_userPageTopBlock__28NMv\",\"usersHeader\":\"UsersPage_usersHeader__Ug5Ze\",\"notFound\":\"UsersPage_notFound__1vz8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2C7Lw\",\"captcha\":\"LoginForm_captcha__1uwlE\",\"captchaImg\":\"LoginForm_captchaImg__3OOhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__QbFDQ\",\"mainImg\":\"ProfilePage_mainImg__1YIVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidBaFriends\":\"Friends_SidBaFriends__3Drqr\",\"friends\":\"Friends_friends__-xPh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterForm_form__2SOIS\",\"select\":\"FilterForm_select__3FX-T\",\"SendButton\":\"FilterForm_SendButton__u-gOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__3wQj-\",\"active\":\"Page_active__biFyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"UserInfo_aboutUser__2dBJa\",\"edit\":\"UserInfo_edit__FE81H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"UserPhoto_userPhoto__2kC_L\",\"ownerPhoto\":\"UserPhoto_ownerPhoto__9WDdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__vZgi5\",\"profilePre\":\"Preloader_profilePre__Xazmf\",\"statusPre\":\"Preloader_statusPre__2Ed3w\",\"photosPre\":\"Preloader_photosPre__1Q_Cs\",\"usersPre\":\"Preloader_usersPre__14nWV\",\"updProfPre\":\"Preloader_updProfPre__1slyY\",\"appPre\":\"Preloader_appPre__7OWEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1z8J_\",\"statusText\":\"Status_statusText__Uyoyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"UserContact_contact__TEHD_\",\"icon\":\"UserContact_icon__hJ8eh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginHeader\":\"LoginPage_loginHeader__3STEh\"};","import { wsStatusType } from './../Redux/Chat-Reducer';\r\n\r\nlet ws: null | WebSocket = null\r\n\r\nlet subscribers = {\r\n    message: [] as MessageSubscriberType[],\r\n    open: [] as OpenSubscriberType[]\r\n}\r\n\r\n\r\nconst onMessageHandler = (e: MessageEvent) => {\r\n    subscribers.message.forEach((s) => s(JSON.parse(e.data)))\r\n}\r\n\r\nconst onErrorHandler = () => {\r\n    console.log('error')\r\n}\r\n\r\nconst onCloseHandler = () => {\r\n    setTimeout(() => {\r\n        createWebsocket()\r\n        console.log('reconnecting')\r\n        subscribers.open.forEach((s) => s('close'))\r\n    }, 3000)\r\n}\r\nconst onOpenHandler = () => {\r\n    subscribers.open.forEach((s) => s('open'))\r\n}\r\n\r\n\r\nconst clineUp = () => {\r\n    ws?.close();\r\n    ws?.removeEventListener('message', onMessageHandler);\r\n    ws?.removeEventListener('close', onCloseHandler);\r\n    ws?.removeEventListener('open', onOpenHandler);\r\n    ws?.removeEventListener('error', onErrorHandler);\r\n}\r\n\r\nconst createWebsocket = () => {\r\n    clineUp()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    ws.addEventListener('message', onMessageHandler);\r\n    ws.addEventListener('close', onCloseHandler);\r\n    ws.addEventListener('open', onOpenHandler);\r\n    ws.addEventListener('error', onErrorHandler);\r\n}\r\n\r\nexport const WebSocketApi = {\r\n    start() {\r\n        createWebsocket()\r\n    },\r\n    subscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        subscribers = { ...subscribers, [wsEvent]: [...subscribers[wsEvent], callback] }\r\n    },\r\n    unSubscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        //@ts-ignore\r\n        subscribers = { ...subscribers, [wsEvent]: subscribers[wsEvent].filter((s: SubscriberType) => s !== callback) }\r\n    },\r\n    send(message: string) {\r\n        ws?.send(message);\r\n    },\r\n    stop() {\r\n        clineUp()\r\n        subscribers = { ...subscribers, message: [] }\r\n        subscribers = { ...subscribers, open: [] }\r\n    }\r\n}\r\n\r\n\r\nexport type WsEventType = 'message' | 'open'\r\ntype SubscriberType = MessageSubscriberType | OpenSubscriberType\r\nexport type MessageSubscriberType = (messages: MessageType[]) => void\r\nexport type OpenSubscriberType = (wsStatus: wsStatusType) => void\r\nexport type MessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n    id: string \r\n}","import { MessageSubscriberType, OpenSubscriberType } from './../Api/Chat-api';\r\nimport { Dispatch } from 'react';\r\nimport { MessageType, WebSocketApi } from '../Api/Chat-api';\r\nimport { GetActionsType } from './store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst initialState = {\r\n   messages: [] as MessageType[],\r\n   wsStatus: 'open' as wsStatusType,\r\n}\r\n\r\nexport type wsStatusType = 'open' | 'close'\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ChatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CR/MESSAGES_RECEIVED':  \r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages\r\n                    .map((m: MessageType) => ( {...m, id: uuidv4()} ))]\r\n                .filter((m, index, arr) => index >= arr.length - 50)\r\n            }\r\n            case 'CR/CLEAN_MESSAGES':\r\n            case 'CR/WS_STATUS_CHANGED': \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setMessages: ( messages: MessageType[]) => ({ type: 'CR/MESSAGES_RECEIVED', payload: { messages } } as const),\r\n    wsStatusChanged: (wsStatus: wsStatusType) => ({ type: 'CR/WS_STATUS_CHANGED', payload: { wsStatus } } as const),\r\n    cleanMessages: () =>\r\n    ({ type: 'CR/CLEAN_MESSAGES', payload:{ messages: [] as MessageType[] } } as const),\r\n}\r\n\r\n\r\nlet _messageEventSubscriber: null | MessageSubscriberType = null;\r\nconst messageEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_messageEventSubscriber){\r\n        _messageEventSubscriber = (messages: MessageType[]) => {\r\n            dispatch(actions.setMessages( messages))\r\n        }\r\n    }\r\n    return _messageEventSubscriber\r\n}\r\n\r\nlet _openEventSubscriber: null | OpenSubscriberType = null;\r\nconst openEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_openEventSubscriber){\r\n        _openEventSubscriber = (status: wsStatusType) => {\r\n            dispatch(actions.wsStatusChanged(status))\r\n        }\r\n    }\r\n    return _openEventSubscriber\r\n}\r\n\r\nexport const startMessageEventListening = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n            WebSocketApi.start();\r\n            WebSocketApi.subscribe('message', messageEventSubscriberCreator(dispatch));\r\n            WebSocketApi.subscribe('open', openEventSubscriberCreator(dispatch))\r\n    }\r\n}\r\n\r\nexport const stopMessageEventListening = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        WebSocketApi.stop();\r\n        WebSocketApi.unSubscribe('message', messageEventSubscriberCreator(dispatch));\r\n        WebSocketApi.unSubscribe('open', openEventSubscriberCreator(dispatch));\r\n        dispatch(actions.cleanMessages())\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message: string) => {\r\n    return async () => {\r\n        WebSocketApi.send(message)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pages_pages__2_8Fx\",\"ant-menu-submenu-title\":\"Pages_ant-menu-submenu-title__2FIm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserAvatar_avatar__ibIyS\",\"img\":\"UserAvatar_img__1uriq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"SidebarUserPhoto_userPhoto__-NQPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__Yr-ZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__h4jVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__f8O5n\"};","import { StateType } from './../store';\r\n\r\nexport const selectUserId = (state: StateType) => {\r\n    return state.auth.id\r\n}\r\n\r\nexport const selectIsAuth = (state: StateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectAuthUserProfile = (state: StateType) => {\r\n    return state.auth.authUserProfile\r\n}\r\n\r\n\r\nexport const selectCaptchaUrl = (state: StateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const selectErrorMessage = (state: StateType) => {\r\n    return state.auth.errorMessage\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n      \"API-KEY\": \"bb181220-b3ed-4219-9d9b-5805e04d81d5\"\r\n    }\r\n  });\r\n\r\n  export type ResponseType<D = {}, RC = ResultCodeEnum> = {\r\n    resultCode: RC\r\n    messages: string[]\r\n    data: D\r\n  }\r\n\r\n  export enum ResultCodeEnum {\r\n    success = 0,\r\n    error = 1\r\n  }\r\n\r\n  export enum ResultCodeCaptchaEnum {\r\n    captcha = 10\r\n  }","import React, { } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport s from './Page.module.scss';\r\nimport { IconType } from \"react-icons\";\r\n\r\n\r\ntype PropsType = {\r\n    Icon: IconType\r\n    path: string\r\n    pageName: string\r\n}\r\n\r\nexport const Page: React.FC<PropsType> = React.memo(({ Icon, path, pageName }) => {\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <NavLink activeClassName={s.active} to={`/${path}`}>\r\n                <Icon />\r\n               <span>{pageName} </span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './Pages.module.scss';\r\nimport {\r\n    HomeOutlined,\r\n    UserSwitchOutlined\r\n} from '@ant-design/icons';\r\nimport { Page } from \"./Page/Page\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\n\r\nexport const Pages: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.pages}>\r\n            <div>\r\n                <Page key={'page1'} Icon={HomeOutlined as IconType} path={'profile'} pageName={'profile'}/>\r\n            </div>\r\n            <div>\r\n                <Page key={'page2'} Icon={UserSwitchOutlined as IconType} path={'users'} pageName={'users'}/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n","import { instance, ResponseType, ResultCodeCaptchaEnum, ResultCodeEnum } from \"./Api\"\r\n\r\nexport type AuthMeDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe: async () => {\r\n        const response = await instance.get<ResponseType<AuthMeDataType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    login: async (email: string, password: string, rememberMe: boolean, captcha = '') => {\r\n        const response = await instance.post<ResponseType<{}, ResultCodeEnum | ResultCodeCaptchaEnum>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n}","import { PhotosType } from './../Types';\r\nimport { ProfileType } from \"../Types\"\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype PhotosResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getUser: async (id: number) => {\r\n        const response = await instance.get<ProfileType>(`profile/${id}`)\r\n        return response.data\r\n    },\r\n    getStatus: async (id: number) => {\r\n        const response = await instance.get<string>(`profile/status/${id}`)\r\n        return response.data\r\n    },\r\n    updateStatus: async (status: string) => {\r\n        const response = await instance.put<ResponseType>(`profile/status`, { status })\r\n        return response.data\r\n    },\r\n    updateUserPhoto: async (file: File) => {\r\n        const data = new FormData()\r\n        data.append('file', file)\r\n        const response = await instance.put<ResponseType<PhotosResponseType>>(`profile/photo`, data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        return response.data\r\n    },\r\n    updateProfile: async (profile: ProfileType) => {\r\n            const response = await instance.put<ResponseType>(`profile`, profile)\r\n            return response.data\r\n        }\r\n}\r\n","import { instance } from \"./Api\"\r\n\r\ntype CaptchaUrlType = {\r\n    url: string\r\n} \r\n\r\nexport const SecurityApi = {\r\n    getCaptchaUrl: async () => {\r\n        const response = await instance.get<CaptchaUrlType>(`security/get-captcha-url`)\r\n        return response.data\r\n    },\r\n}","import { ResultCodeCaptchaEnum } from './../Api/Api';\r\nimport { ProfileType } from './../Types';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType, StateType } from './store';\r\nimport { AuthApi } from '../Api/Auth-api';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { ProfileApi } from \"../Api/Profile-api\";\r\nimport { SecurityApi } from '../Api/security-api';\r\nimport { message } from 'antd';\r\n\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    authUserProfile: null as null | ProfileType,\r\n    captchaUrl: null as null | string,\r\n    errorMessage: null as null | string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AuthReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AU/AUTH_VERIFIED':\r\n        case 'AU/AUTH_USER_RECEIVED':\r\n        case 'AU/CAPTCHA_URL_IS_RECEIVED':\r\n        case 'AU/AN_ERROR_HAS_OCCURRED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    authVerified: (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n        ({ type: 'AU/AUTH_VERIFIED', payload: { email, login, id, isAuth } } as const),\r\n    authUserReceived: (authUserProfile: ProfileType) =>\r\n        ({ type: 'AU/AUTH_USER_RECEIVED', payload: { authUserProfile } } as const),\r\n    captchaUrlIsReceived: (captchaUrl: string | null) =>\r\n        ({ type: 'AU/CAPTCHA_URL_IS_RECEIVED', payload: { captchaUrl } } as const),\r\n    AnErrorHasOccurred: (errorMessage: string | null) =>\r\n        ({ type: 'AU/AN_ERROR_HAS_OCCURRED', payload: { errorMessage } } as const),\r\n}\r\n\r\n\r\nexport const authMe = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await AuthApi.authMe()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                const { id, login, email } = data.data\r\n                dispatch(actions.authVerified(id, login, email, true))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = () => {\r\n    return async (dispatch: Dispatch<ActionsType>, getState: () => StateType) => {\r\n        try {\r\n            const state = getState()\r\n            const userId = state.auth.id\r\n            if (userId) {\r\n                const data = await ProfileApi.getUser(userId)\r\n                dispatch(actions.authUserReceived(data))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, Password: string, rememberMe: boolean, captcha: string,) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        try {\r\n            const data = await AuthApi.login(email, Password, rememberMe, captcha)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(authMe())\r\n                dispatch(actions.captchaUrlIsReceived(null))\r\n                dispatch(actions.AnErrorHasOccurred(null))\r\n            } else if (data.resultCode === ResultCodeCaptchaEnum.captcha) {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n                dispatch(getCaptchaUrl())\r\n            } else {\r\n                dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        try {\r\n            const data = await AuthApi.logout()\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.authVerified(null, null, null, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await SecurityApi.getCaptchaUrl()\r\n            dispatch(actions.captchaUrlIsReceived(data.url))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { Button, Dropdown, Menu, message } from 'antd';\r\nimport React from 'react';\r\nimport s from \"./UserAvatar.module.scss\";\r\nimport {\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAuthUserProfile, selectIsAuth } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logout } from '../../../Redux/auth-Reducer';\r\n\r\n\r\nexport const UserAvatar: React.FC = React.memo(() => {\r\n\r\n    const profile = useSelector(selectAuthUserProfile)\r\n    const userName = profile?.fullName\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    function handleMenuClick(e: any) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\">\r\n                <Button danger block onClick={()=> {\r\n                    dispatch(logout())\r\n                }}>\r\n                    logout\r\n                </Button>\r\n          </Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={handleMenuClick} icon={<UserOutlined />}>\r\n                2nd menu item\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={s.avatar}>\r\n            {isAuth ? <Dropdown.Button overlay={menu}>\r\n                <NavLink to={'/profile'}>\r\n                    <div> {userName}</div>\r\n                </NavLink>\r\n            </Dropdown.Button> \r\n            : <div>\r\n                <Button>\r\n                    <NavLink to={'./login'}>\r\n                        login\r\n                    </NavLink>\r\n                </Button>\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n","import { BiNetworkChart } from 'react-icons/bi';\r\nimport React from 'react';\r\nimport s from \"./Header.module.scss\";\r\nimport { Pages } from './Pages/Pages';\r\nimport { UserAvatar } from './UserAvatar/UserAvatar';\r\n\r\n\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n\r\n  return (\r\n    <div className={s.header}>\r\n      <div className={s.headerContent}>\r\n        <div className={s.headerContentLeft}>\r\n          <div className={s.logo}>\r\n            <BiNetworkChart />\r\n            <span>SOCIAL NETWORK</span>\r\n          </div>\r\n        </div>\r\n        <div className={s.headerContentRight}>\r\n          <div>\r\n            <Pages />\r\n          </div>\r\n          <div>\r\n            <UserAvatar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","import { getAuthUser } from './auth-Reducer';\r\nimport { ProfileApi } from './../Api/Profile-api';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType, StateType } from './store';\r\nimport { PhotosType, ProfileType } from '../Types';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\nimport { AiFillFacebook, AiFillGithub, AiFillInstagram, AiOutlineTwitter, AiFillYoutube } from 'react-icons/ai';\r\nimport { CgWebsite } from 'react-icons/cg';\r\nimport { BiConfused } from 'react-icons/bi';\r\n\r\n\r\nconst initialState = {\r\n    profile: null as null | ProfileType,\r\n    status: null as null | string,\r\n    isFetching: false,\r\n    isLoading: false,\r\n    updateProfileStatus: null as null | UpdateProfileStatusType,\r\n    icons: {\r\n        facebook: AiFillFacebook,\r\n        website: CgWebsite,\r\n        vk: BiConfused,\r\n        github: AiFillGithub,\r\n        instagram: AiFillInstagram,\r\n        twitter: AiOutlineTwitter,\r\n        youtube: AiFillYoutube,\r\n        mainLink: BiConfused,\r\n    } as any\r\n}\r\n\r\ntype UpdateProfileStatusType = 'ready' | 'pending' | 'error';\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PR/STATUS_RECEIVED':\r\n        case 'PR/SET_IS_FETCHING':\r\n        case 'PR/PHOTOS_IS_LOADED':\r\n        case 'PR/SET_UPDATE_PROFILE_STATUS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'PR/PHOTOS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.payload.photos } as ProfileType\r\n            }\r\n        case 'PR/PROFILE_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (profile: ProfileType) => ({ type: 'PR/PROFILE_RECEIVED', payload: profile } as const),\r\n    statusReceived: (status: string) => ({ type: 'PR/STATUS_RECEIVED', payload: { status } } as const),\r\n    setIsFetching: (isFetching: boolean) => ({ type: 'PR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    photosReceived: (photos: PhotosType) => ({ type: 'PR/PHOTOS_RECEIVED', payload: { photos } } as const),\r\n    photosILoaded: (isLoading: boolean) => ({ type: 'PR/PHOTOS_IS_LOADED', payload: { isLoading } } as const),\r\n    setUpdateProfileStatus: (updateProfileStatus: UpdateProfileStatusType) =>\r\n        ({ type: 'PR/SET_UPDATE_PROFILE_STATUS', payload: { updateProfileStatus } } as const),\r\n}\r\n\r\n\r\nexport const getUser = (id: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await ProfileApi.getUser(id)\r\n            dispatch(actions.usersReceived(data))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStatus = (id: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.getStatus(id)\r\n            dispatch(actions.statusReceived(data))\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.updateStatus(status)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.statusReceived(status))\r\n            }\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserPhoto = (file: File) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        try {\r\n            dispatch(actions.photosILoaded(true))\r\n            const data = await ProfileApi.updateUserPhoto(file)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.photosReceived(data.data.photos))\r\n                dispatch(getAuthUser())\r\n            }\r\n            dispatch(actions.photosILoaded(false))\r\n\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfile = (profile: ProfileType, setErrors: any) => {\r\n    return async (dispatch: Dispatch<any>, getState: () => StateType) => {\r\n        try {\r\n            dispatch(actions.setUpdateProfileStatus('pending'))\r\n            const data = await ProfileApi.updateProfile(profile)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.setUpdateProfileStatus('ready'))\r\n                const authUserId = getState().auth.id\r\n                if (authUserId) {\r\n                    dispatch(getUser(authUserId))\r\n                }\r\n            } else {\r\n                dispatch(actions.setUpdateProfileStatus('error'))\r\n                const errorMessage = data.messages[data.messages.length - 1]\r\n                const fieldName = errorMessage.split('->')[1].split(')').join('').toLocaleLowerCase()\r\n                setErrors({ 'contacts': { [fieldName]: errorMessage } })\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { StateType } from './../store';\r\n\r\nexport const selectProfile = (state: StateType) => {\r\n    return state.profile.profile\r\n}\r\n\r\nexport const selectStatus = (state: StateType) => {\r\n    return state.profile.status\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.profile.isFetching\r\n}\r\n\r\nexport const selectIsLoading = (state: StateType) => {\r\n    return state.profile.isLoading\r\n}\r\n\r\nexport const selectUpdateProfileStatus = (state: StateType) => {\r\n    return state.profile.updateProfileStatus\r\n}\r\n\r\nexport const selectIcons = (state: StateType) => {\r\n    return state.profile.icons\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.e94beeb6.gif\";","import { Image } from \"antd\";\r\nimport React from \"react\";\r\nimport preloaderImg from '../../../images/loading.gif';\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n    styles: string\r\n}\r\n\r\nexport const Preloader: React.FC<PropsType> = React.memo(({styles})=> {\r\n    return (\r\n        <div className={s.preloader + ' ' + s[styles]}>\r\n            <Image src={preloaderImg}/>\r\n        </div>\r\n    )\r\n})\r\n","import { Input } from \"antd\"\r\nimport React, { FormEvent } from \"react\"\r\nimport s from './UserPhoto.module.scss'\r\nimport userPhoto from '../../../../../images/img.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateUserPhoto } from '../../../../../Redux/Profile-Reducer';\r\nimport { selectIsLoading } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\"\r\n\r\n\r\ntype PropsType = {\r\n    img: string | null\r\n    isOwner: boolean\r\n}\r\n\r\nexport const UserPhoto: React.FC<PropsType> = React.memo(({ img, isOwner }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(selectIsLoading)\r\n\r\n    const onHandleSelect = (e: FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files?.length && e.currentTarget.files[0]\r\n        dispatch(updateUserPhoto(file as File))\r\n    }\r\n\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            {!isOwner \r\n            ? <label htmlFor=\"file\">\r\n                <img className={s.ownerPhoto} src={img ? img : userPhoto} alt={'userPhoto'} />\r\n             </label>\r\n            : <img src={img ? img : userPhoto} alt={'userPhoto'} />\r\n            }\r\n            <Input hidden={true} type={'file'} id={'file'} onChange={onHandleSelect} />\r\n                {isLoading && <Preloader styles={'photosPre'} />}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {  Input, Form } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStatus } from \"../../../../../../../Redux/selectors/profile-selector\";\r\nimport { maxLengthCreator } from \"../../../../../../../validators/validators\";\r\nimport formStyle from '../../../../../../Common/formControl.module.scss';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: (statusText: string)=> void\r\n}\r\ntype StatusFormValuesType = {\r\n    statusText: string\r\n}\r\n\r\nexport const StatusForm: React.FC<PropsType> = React.memo(({deActivateEditMode}) => {\r\n\r\n    const status = useSelector(selectStatus);\r\n\r\n    const submit = (values: StatusFormValuesType, actions: FormikHelpers<StatusFormValuesType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ statusText: status } as StatusFormValuesType}\r\n            validate={(value)=>{}}\r\n            onSubmit={submit}\r\n        >\r\n            {({ values, errors}) => (\r\n                <FormikForm onBlur={()=> {\r\n                    if(!(values.statusText.length > 30)){\r\n                        deActivateEditMode(values.statusText)\r\n                    }\r\n                }} >\r\n                    <FormItem>\r\n                        <Field name=\"statusText\"\r\n                        validate={maxLength}\r\n                         render={({ field }: FieldProps) => <Input {...field}  placeholder=\"status\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"statusText\" component={() => <div className={formStyle.fieldError}> {errors.statusText} </div>} />\r\n                    </FormItem>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateStatus } from \"../../../../../../Redux/Profile-Reducer\";\r\nimport { selectStatus, selectIsFetching } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../../../Common/Preloader/Preloader\";\r\nimport s from './Status.module.scss';\r\nimport { StatusForm } from \"./StatusForm/StatusForm\";\r\n\r\n\r\ntype PropsYpe = {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Status: React.FC<PropsYpe> = React.memo(({isOwner}) => {\r\n\r\n\r\n    const status = useSelector(selectStatus);\r\n    const isFetching = useSelector(selectIsFetching);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = (statusText: string) => {\r\n            setEditMode(false)\r\n            dispatch(updateStatus(statusText))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode && <div data-test={'noEditMode'} onDoubleClick={()=> {\r\n                if(!isOwner) {\r\n                    activateEditMode()\r\n                }\r\n            }}>\r\n                <span>status: </span>\r\n                 <span className={s.statusText}>{status ? status: '....'}</span>\r\n            </div>}\r\n            {editMode && <div data-test={'editMode'}>\r\n             <StatusForm deActivateEditMode={deActivateEditMode}/>\r\n            </div>}\r\n            {isFetching && <div><Preloader styles={'statusPre'}/></div>}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport s from \"./UserContact.module.scss\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\ntype PropsType = {\r\n    contactsTitle: string\r\n    contactsValue: string\r\n    Icon: IconType\r\n}\r\n\r\nexport const UserContact: React.FC<PropsType> = React.memo(({ contactsTitle, contactsValue, Icon }) => {\r\n    return (\r\n        <div>\r\n            {contactsValue ?\r\n            <div className={s.contact}>\r\n                <span>{contactsTitle}:</span> \r\n                <a href={contactsValue}> <Icon className={s.icon}/></a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIcons } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { ContactsType, ProfileType } from \"../../../../../../Types\";\r\nimport { UserContact } from \"./UserContact/UserContact\";\r\nimport s from \"./UserContacts.module.scss\";\r\n\r\n\r\ntype PropsType = {\r\n   profile: ProfileType\r\n}\r\n\r\nexport const UserContacts: React.FC<PropsType> = React.memo(({profile}) => {\r\n\r\n    const icons = useSelector(selectIcons) \r\n\r\n    const contactsElements = Object.keys(profile?.contacts).map((key) =>  {\r\n        return <UserContact key={key} contactsTitle={key} Icon={icons[key]} contactsValue={profile?.contacts[key as keyof ContactsType]} />\r\n    })\r\n\r\n  let arr: number[] = []\r\n  let contactsTitle = Object.values(profile?.contacts)\r\n\r\n  for(let i = 0; i < contactsTitle.length; i++) {\r\n    if(contactsTitle[i]){\r\n       arr.push(i)\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className={s.contacts}>\r\n            <div className={s.contactsTitle}>\r\n                contacts\r\n            </div>\r\n            <div className={s.contactsValues}>\r\n               {arr.length ? contactsElements : <div className={s.noContacts}>no contacts</div>}\r\n              </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router\"\r\nimport { selectProfile } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { ProfileType } from \"../../../../../Types\"\r\nimport { ParamTypes } from \"../UserInfo\"\r\nimport s from './ProfileData.module.scss';\r\nimport { Status } from \"./Status/Status\"\r\nimport { UserContacts } from \"./UserContacts/UserContacts\"\r\n\r\n\r\n\r\nexport const ProfileData: React.FC = React.memo(() => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const { userId } = useParams<ParamTypes>()\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            <div className={s.userNameAndStatus}>\r\n                <div className={s.userName}>\r\n                    {profile?.fullName}\r\n                </div>\r\n                <Status isOwner={!!userId} />\r\n                <div className={s.aboutMe}>\r\n                    <span>about me: </span>{profile?.aboutMe || '.....'}\r\n                </div>\r\n                <div className={s.lookingForAJob}>\r\n                    <span>looking for a Job: </span>{profile?.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div className={s.professionalSkills}>\r\n                    {profile?.lookingForAJob\r\n                        ? <div><span> my professional skills: </span>{profile?.lookingForAJobDescription || '.....'}</div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <UserContacts profile={profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Row, Col } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { maxLengthCreator, reqAndMaxLValCreator } from \"../../../../../validators/validators\";\r\nimport s from './ProfileDataForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { selectProfile, selectUpdateProfileStatus } from \"../../../../../Redux/selectors/profile-selector\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProfileType } from \"../../../../../Types\";\r\nimport { updateProfile } from \"../../../../../Redux/Profile-Reducer\";\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\";\r\nimport formError  from \"../../../../Common/formControl.module.scss\";\r\nimport { Modal } from 'antd';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: () => void\r\n    editMode: boolean\r\n}\r\n\r\n\r\nexport const ProfileDataForm: React.FC<PropsType> = React.memo(({deActivateEditMode, editMode}) => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const dispatch = useDispatch()\r\n    const updateProfileStatus = useSelector(selectUpdateProfileStatus)\r\n\r\n\r\n    const submit = (values: ProfileType, actions: FormikHelpers<ProfileType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    const contactsFormCreator = (errors: Partial<any>) => {\r\n        return Object.keys(profile.contacts).map((key) => {\r\n            return <FormItem label={key} className={`${s[key]} ${s.contact}`} key={key}>\r\n                <Field name={`contacts.${key}`}\r\n                    validate={maxLength}\r\n                    render={({ field }: FieldProps) => <Input {...field} placeholder={key} />} />\r\n                <ErrorMessage name={`contacts.${key}`} component={() => <div className={formError.fieldError}>{errors.contacts[key]}</div>} />\r\n            </FormItem>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ ...profile }}\r\n            validate={(value) => { }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors, setErrors, resetForm, setSubmitting }) => (\r\n                <Modal width={600} centered title={'edit your profile'} visible={editMode} onCancel={deActivateEditMode} footer={[\r\n                    <Button htmlType={\"submit\"} disabled={isSubmitting} type={'primary'} onClick={() => {\r\n                        setTimeout(() => {\r\n                            dispatch(updateProfile(values, setErrors))\r\n                            if (!(updateProfileStatus === 'error' || updateProfileStatus === 'pending')) {\r\n                                resetForm({})\r\n                                deActivateEditMode()\r\n                                setSubmitting(false)\r\n                            }\r\n                        }, 600)\r\n                    }}>\r\n                        save\r\n                    </Button>,\r\n                    <Button onClick={() => {\r\n                        deActivateEditMode()\r\n                    }}>\r\n                        cancel\r\n                    </Button>\r\n                ]}>\r\n                <FormikForm className={s.form}>\r\n                            <div className={s.pre}>\r\n                                {updateProfileStatus === 'pending' && <div><Preloader styles={'updProfPre'}/></div>}\r\n                            </div>\r\n                            <Input.Group>\r\n                                <FormItem className={s.formItem} label={'name'}>\r\n                                    <Field name=\"fullName\"\r\n                                        validate={reqAndMaxLValCreator(20)}\r\n                                        render={({ field }: FieldProps) => <Input {...field} placeholder=\"fullName\" autoFocus={true} />} />\r\n                                    <ErrorMessage name=\"fullName\" component={() => <div className={formError.fieldError}>{errors.fullName}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'about me'}>\r\n                                    <Field name=\"aboutMe\"\r\n                                        validate={reqAndMaxLValCreator(50)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"aboutMe\" />} />\r\n                                    <ErrorMessage name=\"aboutMe\" component={() => <div className={formError.fieldError}>{errors.aboutMe}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem}>\r\n                                    <Field name=\"lookingForAJob\"\r\n                                        render={({ field }: FieldProps) => <Checkbox {...field} checked={values.lookingForAJob}>\r\n                                            looking for a job\r\n                                     </Checkbox>} />\r\n                                    <ErrorMessage name=\"lookingForAJob\" component={() => <div className={formError.fieldError}>{errors.lookingForAJob}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'my professional skills'}>\r\n                                    <Field name=\"lookingForAJobDescription\"\r\n                                        validate={reqAndMaxLValCreator(40)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"lookingForAJobDescription\" />} />\r\n                                    <ErrorMessage name=\"lookingForAJobDescription\"\r\n                                        component={() => <div className={formError.fieldError}>{errors.lookingForAJobDescription}</div>} />\r\n                                </FormItem>\r\n                            </Input.Group>\r\n                            <FormItem className={s.contacts}>\r\n                                <div className={s.contactsHeader}>\r\n                                    contacts\r\n                                </div>\r\n                                {contactsFormCreator(errors)}\r\n                            </FormItem>                   \r\n                </FormikForm>\r\n                </Modal>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport s from \"./UserInfo.module.scss\";\r\nimport { UserPhoto } from \"./UserPhoto/UserPhoto\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStatus, getUser } from \"../../../../Redux/Profile-Reducer\";\r\nimport { selectProfile } from \"../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../Common/Preloader/Preloader\";\r\nimport { ProfileType } from \"../../../../Types\";\r\nimport { selectUserId } from \"../../../../Redux/selectors/auth-selector\";\r\nimport { useParams } from \"react-router\";\r\nimport { ProfileData } from \"./ProfileData/ProfileData\";\r\nimport { ProfileDataForm } from \"./ProfileDataForm/ProfileDataForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AiOutlineEdit } from 'react-icons/ai';\r\n\r\n\r\nexport type ParamTypes = {\r\n    userId: string\r\n}\r\n\r\nexport const UserInfo: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const AuthUserId = useSelector(selectUserId)\r\n    const history = useHistory()\r\n    const { userId } = useParams<ParamTypes>()\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userIdFromUrl = Number(userId);\r\n        if (userIdFromUrl) {\r\n            dispatch(getUser(userIdFromUrl))\r\n            dispatch(getStatus(userIdFromUrl))\r\n        } else if (AuthUserId) {\r\n            dispatch(getUser(AuthUserId))\r\n            dispatch(getStatus(AuthUserId))\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, AuthUserId, userId, history])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader styles={'profilePre'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.aboutUser}>\r\n            <UserPhoto isOwner={!!userId} img={profile.photos?.large} />\r\n            {!editMode && <ProfileData />}\r\n            {editMode &&  <ProfileDataForm deActivateEditMode={deActivateEditMode} editMode={editMode}/>}\r\n            \r\n            {!userId && <div className={s.edit} onClick={() => {\r\n                activateEditMode()\r\n            }}>\r\n                <AiOutlineEdit />\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainImg.0de69ef5.jpg\";","import React from 'react';\r\nimport s from \"./ProfilePage.module.scss\";\r\nimport { UserInfo } from './UserInfor/UserInfo';\r\nimport mainPhoto from '../../../images/mainImg.jpg'\r\nimport '../../../App.css';\r\n\r\nexport const ProfilePage: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <div className={s.mainImg}>\r\n                <img src={mainPhoto} alt={'mainImg'}/>\r\n            </div>\r\n            <div className={s.contentBottom}>\r\n                <UserInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './SidebarUserPhoto.module.scss'\r\nimport userPhoto from '../../../../images/img.jpg'\r\n\r\ntype PropsType = {\r\n    img: string | null | undefined\r\n}\r\n\r\nexport const SidebarUserPhoto: React.FC<PropsType> = React.memo(({img}) => {\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <img src={img ? img : userPhoto} alt={'authorized user'} />\r\n        </div>\r\n    )\r\n})","import { StateType } from '../store';\r\n\r\nexport const selectFriends = (state: StateType) => {\r\n    return state.sideBar.friends\r\n}\r\n\r\n","import { StateType } from './../store';\r\n\r\n\r\nexport const selectUsers = (state: StateType) => {\r\n    return state.users.users\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.users.isFetching\r\n}\r\n\r\nexport const selectTotalUserCount = (state: StateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\n\r\nexport const selectPageNumber = (state: StateType) => {\r\n    return state.users.pageNumber\r\n}\r\nexport const selectPageSize = (state: StateType) => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const selectFilter = (state: StateType) => {\r\n    return state.users.filter\r\n}\r\n\r\nexport const selectFollowingInProgress = (state: StateType) => {\r\n    return state.users.followInProgress\r\n}\r\n","import { FilterType } from './../Redux/User-Reducer';\r\nimport { UserType } from './../Types';\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype UserResponseType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const UserApi = {\r\n    getUsers: async (pageNumber: number, pageSize: number,  filter: FilterType) => {\r\n        const response = await instance.get<UserResponseType>(`users?count=${pageSize}\r\n        &page=${pageNumber}&term=${filter.term}&friend=${filter.friend}`)\r\n        return response.data\r\n    },\r\n    follow: async (id: number) => {\r\n        const response = await instance.post<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n    unFollow: async (id: number) => {\r\n        const response = await instance.delete<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n}\r\n","import { UserApi } from './../Api/User-api';\r\nimport { UserType } from './../Types';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType } from './store';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    isFetching: false,\r\n    followInProgress: [] as number[],\r\n    totalUsersCount: 0,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nexport type FilterType = typeof initialState.filter\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\n\r\nexport const UserReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'UR/USERS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n        case 'UR/FOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: true }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/UNFOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: false }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/SET_PAGE_NUMBER':\r\n            return {\r\n                ...state,\r\n                pageNumber: action.payload.pageNumber\r\n            }\r\n        case 'UR/SET_FILTER_DATA':\r\n            return {\r\n                ...state,\r\n                filter: action.payload.filter\r\n            }\r\n        case 'UR/SET_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followInProgress: action.payload.isFollowInProgress ? [...state.followInProgress, action.payload.id]\r\n                    : state.followInProgress.filter((id) => id !== action.payload.id)\r\n            }\r\n        case 'UR/SET_IS_FETCHING':\r\n        case 'UR/TOTAL_COUNT_IS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (users: UserType[]) =>\r\n        ({ type: 'UR/USERS_RECEIVED', payload: { users } } as const),\r\n    setIsFetching: (isFetching: boolean) =>\r\n        ({ type: 'UR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    followIsFinished: (userId: number) =>\r\n        ({ type: 'UR/FOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    unFollowIsFinished: (userId: number) =>\r\n        ({ type: 'UR/UNFOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    totalCountIsReceived: (totalUsersCount: number) =>\r\n        ({ type: 'UR/TOTAL_COUNT_IS_RECEIVED', payload: { totalUsersCount } } as const),\r\n    setPageNumber: (pageNumber: number) =>\r\n        ({ type: 'UR/SET_PAGE_NUMBER', payload: { pageNumber } } as const),\r\n    setFilterData: (filter: FilterType) =>\r\n        ({ type: 'UR/SET_FILTER_DATA', payload: { filter } } as const),\r\n    setFollowInProgress: (id: number, isFollowInProgress: boolean) =>\r\n        ({ type: 'UR/SET_FOLLOWING_PROGRESS', payload: { id, isFollowInProgress } } as const),\r\n}\r\n\r\n\r\nexport const getUsers = (pageNumber: number, pageSize: number, filter: FilterType) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setFilterData(filter))\r\n            dispatch(actions.setIsFetching(true))\r\n            dispatch(actions.setPageNumber(pageNumber))\r\n            const data = await UserApi.getUsers(pageNumber, pageSize, filter)\r\n            dispatch(actions.setIsFetching(false))\r\n            dispatch(actions.usersReceived(data.items))\r\n            dispatch(actions.totalCountIsReceived(data.totalCount))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)       \r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await UserApi.follow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.followIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await UserApi.unFollow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.unFollowIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n            return data\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n","import { UserApi } from './../Api/User-api';\r\nimport { Dispatch } from 'react';\r\nimport { GetActionsType } from './store';\r\nimport { UserType } from '../Types';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    friends: [] as UserType[],\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const SideBarReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SB/FRIENDS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst actions = {\r\n    friendsReceived: (friends: UserType[]) =>\r\n        ({ type: 'SB/FRIENDS_RECEIVED', payload: { friends } } as const),\r\n}\r\nexport default actions\r\n\r\n\r\nexport const getFriends = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const result = await UserApi.getUsers(20, 3, { term: '', friend: true })\r\n            dispatch(actions.friendsReceived(result.items))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n ","import React from \"react\"\r\nimport s from './Friend.module.scss'\r\nimport sparePhoto from '../../../../../images/img.jpg'\r\nimport { PhotosType } from \"../../../../../Types\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { selectFollowingInProgress } from \"../../../../../Redux/selectors/user-selector\"\r\nimport { Button } from 'antd';\r\nimport { actions, unFollow } from \"../../../../../Redux/User-Reducer\"\r\nimport { getFriends } from \"../../../../../Redux/Sidebar-Reducer\"\r\n\r\n\r\ntype PropsType = {\r\n    photos: PhotosType\r\n    name: string | null\r\n    id: number\r\n}\r\n\r\nexport const Friend: React.FC<PropsType> = React.memo(({ photos, name, id }) => {\r\n\r\n    const friendPhoto = photos.small\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <div className={s.imgAndName}>\r\n                <div className={s.img}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        <img src={friendPhoto ? friendPhoto : sparePhoto} alt={'friendPhoto'} />\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.nameLink}>\r\n                    <NavLink to={`/profile/${id}`}>\r\n                        {name}\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n               let promise =  dispatch(unFollow(id))\r\n                Promise.all([promise]).then(()=> {\r\n                    dispatch(getFriends())\r\n                })\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                delete\r\n            </Button>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectFriends } from \"../../../../Redux/selectors/sideBar-selector\"\r\nimport s from './Friends.module.scss'\r\nimport {Friend} from './Friend/Friend'\r\n\r\nexport const Friends: React.FC = React.memo(() => {\r\n    \r\n    const friends = useSelector(selectFriends)\r\n\r\n    const friendElements = friends.map((f) => <Friend key={f.id} photos={f.photos} name={f.name} id={f.id}/>)\r\n\r\n    return (\r\n        <div className={s.SidBaFriends}>\r\n            <h2>\r\n                friends\r\n            </h2>\r\n            <div className={s.test}>\r\n            <div className={s.friends}>\r\n                {friendElements}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React, { useEffect } from 'react';\r\nimport s from \"./SideBar.module.scss\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SidebarUserPhoto } from './SidebarUserPhoto/SidebarUserPhoto';\r\nimport { getAuthUser } from '../../../Redux/auth-Reducer';\r\nimport { selectAuthUserProfile } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Friends } from './Friends/Friends'\r\nimport { getFriends } from '../../../Redux/Sidebar-Reducer';\r\n\r\n\r\nexport const SideBar = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const profile = useSelector(selectAuthUserProfile)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthUser())\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n  \r\n\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <div className={s.sidebarTop}>\r\n      </div>\r\n      <div className={s.sidebarBottom}>\r\n        <div className={s.userPhoto}>\r\n          <NavLink to={'/profile'}>\r\n            <SidebarUserPhoto img={profile?.photos.large} />\r\n          </NavLink>\r\n        </div>\r\n        <div className={s.userName}>\r\n          <NavLink to={'/profile'}>\r\n            <span>{profile?.fullName}</span>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <Friends/>\r\n        </div>\r\n        <div className={s.viewP}>\r\n        <NavLink to={'/profile'}>\r\n            view profile\r\n        </NavLink>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}","import { Pagination } from \"antd\";\r\nimport React from \"react\";\r\nimport s from './Paginator.module.scss';\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number\r\n  pageSize?: number\r\n  onPageChangeHandler: (pageNumber: number) => void\r\n  pageNumber: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo(({\r\n  totalItemsCount,\r\n  pageSize = 10,\r\n  onPageChangeHandler,\r\n  pageNumber\r\n}) => {\r\n\r\n  const pagesCount = totalItemsCount / pageSize\r\n\r\n  const onChange = (currentPageNumber: number) => {\r\n    onPageChangeHandler(currentPageNumber)\r\n  }\r\n  return (\r\n    <div className={s.paginator}>\r\n      <Pagination defaultCurrent={pageNumber} size={'small'} current={pageNumber} total={pagesCount * 10} onChange={onChange} />\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Input, Form, Select, Button } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { FilterType } from \"../../../../Redux/User-Reducer\";\r\nimport s from './FilterForm.module.scss';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFilter } from \"../../../../Redux/selectors/user-selector\";\r\nimport { maxLengthCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formControl.module.scss';\r\n\r\n\r\nconst Option = Select.Option\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(10)\r\n\r\ntype PropsType = {\r\n    onFilterHandler: (filter: FilterType) => void\r\n}\r\ntype FilterFormValuesType = {\r\n    term: string\r\n    friend: string\r\n}\r\n\r\nexport const FilterForm: React.FC<PropsType> = React.memo(({onFilterHandler}) => {\r\n\r\n    const filter = useSelector(selectFilter)\r\n\r\n    const submit = (values: FilterFormValuesType, actions: FormikHelpers<FilterFormValuesType>) => {\r\n        setTimeout(() => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n            }\r\n            onFilterHandler(filter)\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term,  friend: String(filter.friend)}}\r\n            validate={(value) => { }}\r\n            onSubmit={submit} \r\n        >\r\n            {({ isSubmitting, values, setFieldValue, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem>\r\n                        <Field name=\"term\"\r\n                            validate={maxLength}\r\n                            render={({ field }: FieldProps) => <Input {...field} placeholder=\"userName\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"term\" component={()=><div className={formStyle.fieldError}>{errors.term}</div>} />\r\n                    </FormItem>\r\n                        <FormItem>\r\n                        <Field  name={'friend'}\r\n                            placeholder={\"HELLO\"}\r\n                            render={({ field }: FieldProps) => \r\n                             <Select \r\n                                className={s.select}\r\n                                {...field}\r\n                                onChange={value => setFieldValue(\"friend\", value)}\r\n                                value={values.friend}\r\n                            >\r\n                                <Option value=\"null\">all</Option>\r\n                                <Option value=\"true\">follow</Option>\r\n                                <Option value=\"false\">unFollow</Option>\r\n                            </Select>\r\n                            } />\r\n                        </FormItem>\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        find\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { PhotosType } from '../../../../Types';\r\nimport s from './User.module.scss';\r\nimport spareUserPhoto from '../../../../images/img.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { actions, follow, unFollow } from '../../../../Redux/User-Reducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    userName: string | null\r\n    status: string | null\r\n    photos: PhotosType\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User: React.FC<PropsType> = React.memo(({ id, userName, status, photos, followed, followingInProgress, isAuth }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userPhoto = photos.large\r\n\r\n\r\n    let button;\r\n\r\n    if (followed) {\r\n        button = <div className={s.button + \" \" + s.follow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(unFollow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                follow\r\n            </Button>\r\n        </div>\r\n    } else {\r\n        button = <div className={s.button + \" \" + s.unFollow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(follow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                unFollow\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.userInfo}>\r\n                <div className={s.rightBlock}>\r\n                    <div className={s.img}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <img src={userPhoto ? userPhoto : spareUserPhoto} alt={'userPhoto'} />\r\n                        </NavLink>\r\n                    </div>\r\n                    {isAuth ? button : null}\r\n                </div>\r\n                <div className={s.leftBlock}>\r\n                    <div className={s.userName}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <span> {userName}</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        status: {status ? status : '....'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomLine}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n    selectIsFetching,\r\n    selectUsers,\r\n    selectTotalUserCount,\r\n    selectPageSize,\r\n    selectPageNumber,\r\n    selectFilter,\r\n    selectFollowingInProgress\r\n} from \"../../../Redux/selectors/user-selector\";\r\nimport { FilterType, getUsers } from \"../../../Redux/User-Reducer\";\r\nimport { Paginator } from \"../../Common/Peginator/Paginator\";\r\nimport { Preloader } from \"../../Common/Preloader/Preloader\";\r\nimport { FilterForm } from \"./FilterForm/FilterForm\";\r\nimport { User } from \"./User/User\"\r\nimport s from './UsersPage.module.scss';\r\nimport queryString from 'query-string'\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\n\r\n\r\n\r\nexport const UsersPage: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isAuth = useSelector(selectIsAuth) \r\n\r\n    const users = useSelector(selectUsers)\r\n    const isFetching = useSelector(selectIsFetching)\r\n    const totalUserCount = useSelector(selectTotalUserCount)\r\n    const pageSize = useSelector(selectPageSize)\r\n    const pageNumber = useSelector(selectPageNumber)\r\n    const filter = useSelector(selectFilter)\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n\r\n\r\n    type UrlDataType = {\r\n        friend?: string\r\n        term?: string\r\n        page?: string | number\r\n    }\r\n\r\n    useEffect(() => {\r\n        const urlData = queryString.parse(history.location.search) as UrlDataType\r\n        let actualPageNumber = pageNumber\r\n        let actualFilter = filter\r\n\r\n        if (urlData.page) actualPageNumber = Number(urlData.page);\r\n        if (urlData.term && urlData.term !== '') actualFilter = { ...actualFilter, term: urlData.term }\r\n        if (urlData.friend) actualFilter = { ...actualFilter, friend: urlData.friend === 'true' ? true : false }\r\n\r\n        dispatch(getUsers(actualPageNumber, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        let urlData: UrlDataType = {}\r\n\r\n        if (pageNumber !== 1) urlData.page = String(pageNumber)\r\n        if (filter.term !== '') urlData.term = filter.term\r\n        if (filter.friend !== null) urlData.friend = String(filter.friend)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(urlData)\r\n        })\r\n    }, [filter, pageNumber, history])\r\n\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n\r\n    }\r\n    const onFilterHandler = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n\r\n    }\r\n\r\n    const usersElements = users.map((u) => <User isAuth={isAuth} followingInProgress={followingInProgress} key={u.id} id={u.id} userName={u.name}\r\n        photos={u.photos} status={u.status} followed={u.followed} />)\r\n\r\n    return (\r\n        <div className={s.usersPage}>\r\n            <div className={s.userPageTopBlock}>\r\n                <div className={s.usersHeader}>\r\n                    Users\r\n                </div>\r\n                <div>\r\n                    {isFetching && <Preloader styles={'usersPre'} />}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FilterForm onFilterHandler={onFilterHandler} />\r\n            </div>\r\n            <div>\r\n                <Paginator pageSize={pageSize} pageNumber={pageNumber} onPageChangeHandler={onPageChangeHandler} totalItemsCount={totalUserCount} />\r\n            </div>\r\n            {usersElements.length === 0 \r\n            ? <div className={s.notFound}>not Found</div> \r\n            : usersElements }\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Image } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport s from './LoginForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../../Redux/auth-Reducer\";\r\nimport {selectCaptchaUrl, selectErrorMessage} from '../../../../Redux/selectors/auth-selector';\r\nimport { emailValidator,  reqAndMaxLValCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formControl.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type FormActionsType = FormikHelpers<LoginFormValuesType>\r\n\r\nexport const LoginForm: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const captchaUrl = useSelector(selectCaptchaUrl)\r\n    const error = useSelector(selectErrorMessage)\r\n  \r\n\r\n    const submit = (values: LoginFormValuesType, actions: FormActionsType,) => {\r\n        setTimeout(() => {\r\n            const {email, password, rememberMe, captcha} = values;\r\n            dispatch(login(email, password, rememberMe, captcha ))\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', rememberMe: false, captcha: '', }}\r\n            validate={(value) => {\r\n            \r\n            }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem label={'email'}>\r\n                        {console.log(errors)}\r\n                        <Field name=\"email\"\r\n                            validate={emailValidator}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"email\" placeholder=\"email\" />} />\r\n                        <ErrorMessage name=\"email\" component={()=><div className={formStyle.fieldError}>{errors.email}</div>} />\r\n                    </FormItem>\r\n                    <FormItem label={'password'} >\r\n                        <Field name=\"password\"\r\n                            validate={reqAndMaxLValCreator(30)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"password\" placeholder=\"password\"/>} />\r\n                        <ErrorMessage name=\"password\" component={()=> <div className={formStyle.fieldError}>{errors.password}</div>} />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Field name=\"rememberMe\"\r\n                            render={({ field }: FieldProps) =>   \r\n                            <Checkbox\r\n                            {...field}\r\n                            checked={values.rememberMe}\r\n                          >\r\n                            rememberMe\r\n                          </Checkbox>}/>\r\n                    </FormItem>\r\n                    {error && <div className={formStyle.formError}>{error}</div>}\r\n                   {captchaUrl && <div className={s.captcha}>\r\n                       <div className={s.captchaImg}> \r\n                            <Image src={captchaUrl}/>\r\n                       </div>\r\n                    <FormItem label={'captcha'}>\r\n                        <Field name=\"captcha\"\r\n                            validate={reqAndMaxLValCreator(20)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  placeholder=\"captcha\" autoFocus={true}/>} />\r\n                        <ErrorMessage name=\"captcha\" component={()=> <div className={formStyle.fieldError}>{errors.captcha}</div>} />\r\n                    </FormItem>\r\n                       </div>}\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        login\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport s from './LoginPage.module.scss';\r\nimport {LoginForm} from './LoginForm/LoginForm';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  if(isAuth){\r\n      return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div className= {s.loginPage}>\r\n      <div className={s.loginHeader}>\r\n        login\r\n      </div>\r\n      <div>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n","import React from 'react';\r\nimport s from \"./NotFound.module.scss\";\r\n\r\n\r\nexport const NotFound: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={s.notFound}>\r\n            NOT FOUND\r\n        </div>\r\n    )\r\n})","import { ProfilePage } from \"./ProfilePage/ProfilePage\"\r\nimport { SideBar } from \"./SideBar/SideBar\"\r\nimport React, { Suspense } from 'react';\r\nimport s from \"./Main.module.scss\";\r\nimport '../../App.css';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { UsersPage } from \"./UserPage/UserPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from '../../Redux/selectors/auth-selector'\r\nimport { LoginPage } from \"./LoginPage/LoginPage\";\r\nimport { NotFound } from './../NotFound/NotFound'\r\n\r\n\r\nconst ChatPage: React.FC = React.lazy(() => import('./ChatPage/ChatPage'));\r\n\r\n\r\nexport const Main = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      {isAuth && <SideBar />}\r\n      <div className={`commonContentStyle ${!isAuth ? 'authorized' : ''}`}>\r\n        <div>\r\n          <Switch>\r\n            <Route path={'/profile/:userId?'} render={(match) => {\r\n              return <ProfilePage />\r\n            }} />\r\n            <Route path={'/users'}>\r\n              <UsersPage />\r\n            </Route>\r\n            <Route path={'/login'}>\r\n              <LoginPage />\r\n            </Route>\r\n            <Route exact path={'/'} render={() => {\r\n              return <Redirect to={\"/profile\"}\r\n              />\r\n            }} />\r\n            <Route path={'*'}>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <div>\r\n         {isAuth && <Suspense fallback={<div>loading...</div>}>\r\n        <   ChatPage/>\r\n        </Suspense>}\r\n      </div> \r\n    </div>\r\n  )\r\n})","import { Dispatch } from 'react';\r\nimport { GetActionsType } from './store';\r\nimport { authMe } from './auth-Reducer';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    isAuthorizeFinished: false,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AppReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AP/AUTHORIZE_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n        authorizedIsFinished: (isAuthorizeFinished: boolean) =>\r\n        ({ type: 'AP/AUTHORIZE_IS_FINISHED', payload: { isAuthorizeFinished } } as const),\r\n}\r\n\r\n\r\n\r\nexport const authorize = () => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        try {\r\n            const result = dispatch(authMe())\r\n            Promise.all([result]).then(()=> {\r\n                dispatch(actions.authorizedIsFinished(true))\r\n            })\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { SideBarReducer } from './Sidebar-Reducer';\r\nimport { UserReducer } from './User-Reducer';\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { ProfileReducer } from \"./Profile-Reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { AuthReducer } from \"./auth-Reducer\";\r\nimport { AppReducer } from './App-Reducer';\r\nimport { ChatReducer } from './Chat-Reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: ProfileReducer,\r\n    auth: AuthReducer,\r\n    users: UserReducer,\r\n    app: AppReducer,\r\n    chat: ChatReducer,\r\n    sideBar: SideBarReducer\r\n})\r\n\r\n\r\ntype TypeWithInfer<T> = T extends {[key: string]: infer U} ? U : any\r\nexport type GetActionsType<T extends {[key: string]: (...args: any) => any}> = ReturnType<TypeWithInfer<T>>   \r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n//@ts-ignore\r\nwindow._store = store\r\nexport default store","import { StateType } from '../store';\r\n\r\nexport const selectIsAuthorizeFinished = (state: StateType) => {\r\n    return state.app.isAuthorizeFinished\r\n}\r\n\r\n","import { useEffect } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Header } from './Components/Header/Header';\nimport { Main } from './Components/Wrapper/Main';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './Redux/store';\nimport { Preloader } from './Components/Common/Preloader/Preloader';\nimport { authorize } from './Redux/App-Reducer';\nimport { selectIsAuthorizeFinished } from './Redux/selectors/App-selector';\ndocument.body.style.backgroundColor = \"#F3F2EF\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const isAuthorizeFinished = useSelector(selectIsAuthorizeFinished)\n\n  useEffect(() => {\n    dispatch(authorize())\n  }, [dispatch])\n\n  if(!isAuthorizeFinished) {\n    return <Preloader styles={'appPre'} />\n  }\n\n  return (\n    <div className= {'App'}>\n      <Header />\n      <Main />\n      <div className={'footer'}>\n        this site was created by David Gasparian\n      </div>\n    </div>\n  );\n}\n\n\nconst AppContainer = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default AppContainer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldError\":\"formControl_fieldError__1ytsd\",\"formError\":\"formControl_formError__ujNm0\"};","export const emailValidator = (value: string) => {\r\n    let error;\r\n    const maxLength = maxLengthCreator(30)\r\n    error = maxLength(value)\r\n    error = error || required(value) \r\n     if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = error || 'Invalid email address';\r\n    } \r\n    return error;\r\n}\r\n\r\nexport const reqAndMaxLValCreator = (MaxLength: number) => {\r\n    return (value: string) => {\r\n        let error;\r\n        const maxLength = maxLengthCreator(MaxLength)\r\n        error = maxLength(value)\r\n        error = error || required(value) \r\n        return error\r\n    }\r\n}\r\n\r\nexport const required = (value: string) => {\r\n    let error;\r\n    if(!value) {\r\n        error = 'filed is required'\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    let error;\r\n    if (value && value.length > maxLength) {\r\n        error = `Max length is ${maxLength}`\r\n    }\r\n    return error;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3ModP\",\"userInfo\":\"User_userInfo__nNP59\",\"rightBlock\":\"User_rightBlock__255QJ\",\"button\":\"User_button__bxhvM\",\"leftBlock\":\"User_leftBlock__-K_ls\",\"status\":\"User_status__1h0yh\",\"userName\":\"User_userName__3d00A\",\"bottomLine\":\"User_bottomLine__lrGqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__2dZBI\",\"pre\":\"ProfileDataForm_pre__1cLd3\",\"formItem\":\"ProfileDataForm_formItem__16xpv\",\"contacts\":\"ProfileDataForm_contacts__6VFH2\",\"contactsHeader\":\"ProfileDataForm_contactsHeader__2CgVR\",\"contact\":\"ProfileDataForm_contact__3m3Su\",\"SendButton\":\"ProfileDataForm_SendButton__1imWj\",\"closeIcon\":\"ProfileDataForm_closeIcon__2-5UX\"};","export default __webpack_public_path__ + \"static/media/img.4e5df239.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__O_014\",\"userNameAndStatus\":\"ProfileData_userNameAndStatus__2Gc-a\",\"userName\":\"ProfileData_userName__1Ekr2\",\"aboutMe\":\"ProfileData_aboutMe__y2SWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"SideBar_sidebar__3EBIU\",\"sidebarBottom\":\"SideBar_sidebarBottom__1NvTj\",\"userPhoto\":\"SideBar_userPhoto__Leu0y\",\"userName\":\"SideBar_userName__3NIFf\",\"viewP\":\"SideBar_viewP__34Y20\",\"sidebarTop\":\"SideBar_sidebarTop__2crVr\"};"],"sourceRoot":""}