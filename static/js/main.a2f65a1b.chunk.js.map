{"version":3,"sources":["Components/Header/Header.module.scss","Components/Wrapper/ProfilePage/UserInfor/UserPhoto/UserPhoto.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.module.scss","Components/Wrapper/UserPage/UsersPage.module.scss","Components/Wrapper/LoginPage/LoginForm/LoginForm.module.scss","Components/Wrapper/ProfilePage/ProfilePage.module.scss","Components/Wrapper/SideBar/Friends/Friends.module.scss","Components/Wrapper/SideBar/Friends/Friend/Friend.module.scss","Components/Wrapper/UserPage/FilterForm/FilterForm.module.scss","Components/Common/Preloader/Preloader.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/Status.module.scss","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.module.scss","Components/Wrapper/LoginPage/LoginPage.module.scss","Api/Chat-api.ts","Redux/Chat-Reducer.ts","Components/Header/Pages/Pages.module.scss","Components/Header/Pages/Page/Page.module.scss","Components/Header/UserAvatar/UserAvatar.module.scss","Components/Wrapper/ProfilePage/UserInfor/UserInfo.module.scss","Components/Wrapper/SideBar/SidebarUserPhoto/SidebarUserPhoto.module.scss","Components/Wrapper/Main.module.scss","Components/Common/Peginator/Paginator.module.scss","Components/NotFound/NotFound.module.scss","Components/Footer/Footer.module.scss","Redux/selectors/auth-selector.ts","Api/Api.ts","Components/Header/Pages/Page/Page.tsx","Components/Header/Pages/Pages.tsx","Api/Auth-api.ts","Api/Profile-api.ts","Api/security-api.ts","Redux/auth-Reducer.ts","Components/Header/UserAvatar/UserAvatar.tsx","Components/Header/Header.tsx","Redux/Profile-Reducer.ts","Redux/selectors/profile-selector.ts","images/loading.gif","Components/Common/Preloader/Preloader.tsx","Components/Wrapper/ProfilePage/UserInfor/UserPhoto/UserPhoto.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/StatusForm/StatusForm.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/Status/Status.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContact/UserContact.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/UserContacts/UserContacts.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileData/ProfileData.tsx","Components/Wrapper/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.tsx","Components/Wrapper/ProfilePage/UserInfor/UserInfo.tsx","images/mainImg.jpg","Components/Wrapper/ProfilePage/ProfilePage.tsx","Components/Wrapper/SideBar/SidebarUserPhoto/SidebarUserPhoto.tsx","Redux/selectors/sideBar-selector.ts","Components/Wrapper/SideBar/Friends/Friend/Friend.tsx","Components/Wrapper/SideBar/Friends/Friends.tsx","Api/User-api.ts","Redux/Sidebar-Reducer.ts","Components/Wrapper/SideBar/SideBar.tsx","Redux/selectors/user-selector.ts","Redux/User-Reducer.ts","Components/Common/Peginator/Paginator.tsx","Components/Wrapper/UserPage/FilterForm/FilterForm.tsx","Components/Wrapper/UserPage/User/User.tsx","Components/Wrapper/UserPage/UserPage.tsx","Components/Wrapper/LoginPage/LoginForm/LoginForm.tsx","Components/Wrapper/LoginPage/LoginPage.tsx","Components/NotFound/NotFound.tsx","Components/Wrapper/Main.tsx","Redux/App-Reducer.ts","Redux/store.ts","Redux/selectors/App-selector.ts","Components/Footer/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx","Components/Common/formControl.module.scss","validators/validators.ts","Components/Wrapper/ProfilePage/UserInfor/ProfileDataForm/ProfileDataForm.module.scss","Components/Wrapper/UserPage/User/User.module.scss","images/img.jpg","Components/Wrapper/ProfilePage/UserInfor/ProfileData/ProfileData.module.scss","Components/Wrapper/SideBar/SideBar.module.scss"],"names":["module","exports","ws","subscribers","message","open","onMessageHandler","e","forEach","s","JSON","parse","data","onErrorHandler","console","log","onCloseHandler","setTimeout","createWebsocket","onOpenHandler","clineUp","close","removeEventListener","WebSocket","addEventListener","WebSocketApi","wsEvent","callback","filter","send","initialState","messages","wsStatus","ChatReducer","state","action","type","payload","map","m","id","uuidv4","index","arr","length","actions","_messageEventSubscriber","messageEventSubscriberCreator","dispatch","_openEventSubscriber","openEventSubscriberCreator","status","startMessageEventListening","a","stopMessageEventListening","sendMessage","selectUserId","auth","selectIsAuth","isAuth","selectAuthUserProfile","authUserProfile","selectCaptchaUrl","captchaUrl","selectErrorMessage","errorMessage","ResultCodeEnum","ResultCodeCaptchaEnum","Page","React","memo","Icon","path","pageName","className","page","to","Pages","pages","HomeOutlined","UserSwitchOutlined","BsChatDots","instance","axios","create","baseURL","withCredentials","headers","AuthApi","authMe","get","response","login","email","password","rememberMe","captcha","post","logout","delete","ProfileApi","getUser","getStatus","updateStatus","put","updateUserPhoto","file","FormData","append","updateProfile","profile","SecurityApi","getCaptchaUrl","resultCode","success","getAuthUser","getState","userId","url","UserAvatar","useSelector","userName","fullName","useDispatch","menu","Item","danger","block","onClick","info","icon","UserOutlined","avatar","Button","overlay","Header","header","headerContent","headerContentLeft","logo","headerContentRight","isFetching","isLoading","updateProfileStatus","icons","facebook","AiFillFacebook","website","CgWebsite","vk","BiConfused","github","AiFillGithub","instagram","AiFillInstagram","twitter","AiOutlineTwitter","youtube","AiFillYoutube","mainLink","photos","stringify","errorText","slice","error","selectProfile","selectStatus","selectIsFetching","selectIsLoading","selectUpdateProfileStatus","selectIcons","Preloader","styles","preloader","src","preloaderImg","UserPhoto","img","isOwner","userPhoto","alt","htmlFor","hidden","onChange","currentTarget","files","select","FormItem","Form","maxLength","maxLengthCreator","StatusForm","deActivateEditMode","initialValues","statusText","validate","value","onSubmit","values","setSubmitting","errors","onBlur","name","render","field","placeholder","autoFocus","component","formStyle","fieldError","Status","useState","editMode","setEditMode","data-test","onDoubleClick","UserContact","contactsTitle","contactsValue","contact","href","UserContacts","contactsElements","Object","keys","contacts","key","i","push","contactsValues","noContacts","ProfileData","activateEditMode","useParams","profileData","userNameAndStatus","aboutMe","lookingForAJob","professionalSkills","lookingForAJobDescription","ProfileDataForm","contactsFormCreator","label","formError","enableReinitialize","formikActions","authUserId","fieldName","split","join","toLocaleLowerCase","setErrors","resetForm","isSubmitting","form","span","buttonAndPre","SendButton","htmlType","disabled","Group","formItem","reqAndMaxLValCreator","checked","contactsHeader","offset","closeIcon","UserInfo","AuthUserId","history","useHistory","useEffect","userIdFromUrl","Number","aboutUser","large","ProfilePage","profilePage","mainImg","mainPhoto","contentBottom","SidebarUserPhoto","selectFriends","sideBar","friends","Friend","friendPhoto","small","friend","sparePhoto","nameLink","Friends","friendElements","f","SidBaFriends","test","UserApi","getUsers","pageNumber","pageSize","term","follow","unFollow","SideBar","result","items","sidebar","sidebarTop","sidebarBottom","viewP","selectUsers","users","selectTotalUserCount","totalUsersCount","selectPageNumber","selectPageSize","selectFilter","selectFollowingInProgress","followInProgress","isFollowInProgress","totalCount","Paginator","totalItemsCount","onPageChangeHandler","pagesCount","paginator","defaultCurrent","size","current","total","currentPageNumber","Option","Select","FilterForm","onFilterHandler","String","setFieldValue","User","button","followed","followingInProgress","some","FPId","user","userInfo","rightBlock","spareUserPhoto","leftBlock","bottomLine","UsersPage","totalUserCount","urlData","queryString","location","search","actualPageNumber","actualFilter","pathname","usersElements","u","usersPage","userPageTopBlock","usersHeader","notFound","LoginForm","Password","emailValidator","captchaImg","LoginPage","loginPage","loginHeader","NotFound","ChatPage","lazy","Main","main","match","fallback","exact","isAuthorizeFinished","rootReducer","combineReducers","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","_store","selectIsAuthorizeFinished","Footer","footer","App","Promise","all","then","document","body","style","backgroundColor","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","required","MaxLength"],"mappings":"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","file":"static/js/main.a2f65a1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3oEm5\",\"headerContent\":\"Header_headerContent__3cVMj\",\"headerContentLeft\":\"Header_headerContentLeft__1kmPt\",\"logo\":\"Header_logo__1iYvb\",\"headerContentRight\":\"Header_headerContentRight__3Tyn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"UserPhoto_userPhoto__2kC_L\",\"file\":\"UserPhoto_file__2vEZ6\",\"icon\":\"UserPhoto_icon__2Gm9J\",\"select\":\"UserPhoto_select__22lpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"UserContacts_contacts__1X4Lm\",\"contactsTitle\":\"UserContacts_contactsTitle__2TRMk\",\"contactsValues\":\"UserContacts_contactsValues__2oA9h\",\"noContacts\":\"UserContacts_noContacts__2jza1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"UsersPage_usersPage__KNlYX\",\"userPageTopBlock\":\"UsersPage_userPageTopBlock__28NMv\",\"usersHeader\":\"UsersPage_usersHeader__Ug5Ze\",\"notFound\":\"UsersPage_notFound__1vz8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginForm_form__2C7Lw\",\"captcha\":\"LoginForm_captcha__1uwlE\",\"captchaImg\":\"LoginForm_captchaImg__3OOhx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePage\":\"ProfilePage_profilePage__QbFDQ\",\"mainImg\":\"ProfilePage_mainImg__1YIVn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidBaFriends\":\"Friends_SidBaFriends__3Drqr\",\"friends\":\"Friends_friends__-xPh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__3RwNA\",\"nameLink\":\"Friend_nameLink__nFGbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FilterForm_form__2SOIS\",\"select\":\"FilterForm_select__3FX-T\",\"SendButton\":\"FilterForm_SendButton__u-gOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__vZgi5\",\"profilePre\":\"Preloader_profilePre__Xazmf\",\"statusPre\":\"Preloader_statusPre__2Ed3w\",\"photosPre\":\"Preloader_photosPre__1Q_Cs\",\"usersPre\":\"Preloader_usersPre__14nWV\",\"updProfPre\":\"Preloader_updProfPre__1slyY\",\"appPre\":\"Preloader_appPre__7OWEe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"Status_status__1z8J_\",\"statusText\":\"Status_statusText__Uyoyo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"UserContact_contact__TEHD_\",\"icon\":\"UserContact_icon__hJ8eh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginHeader\":\"LoginPage_loginHeader__3STEh\"};","import { wsStatusType } from './../Redux/Chat-Reducer';\r\n\r\nlet ws: null | WebSocket = null\r\n\r\nlet subscribers = {\r\n    message: [] as MessageSubscriberType[],\r\n    open: [] as OpenSubscriberType[]\r\n}\r\n\r\n\r\nconst onMessageHandler = (e: MessageEvent) => {\r\n    subscribers.message.forEach((s) => s(JSON.parse(e.data)))\r\n}\r\n\r\nconst onErrorHandler = () => {\r\n    console.log('error')\r\n}\r\n\r\nconst onCloseHandler = () => {\r\n    setTimeout(() => {\r\n        createWebsocket()\r\n        console.log('reconnecting')\r\n        subscribers.open.forEach((s) => s('close'))\r\n    }, 3000)\r\n}\r\nconst onOpenHandler = () => {\r\n    subscribers.open.forEach((s) => s('open'))\r\n}\r\n\r\n\r\nconst clineUp = () => {\r\n    ws?.close();\r\n    ws?.removeEventListener('message', onMessageHandler);\r\n    ws?.removeEventListener('close', onCloseHandler);\r\n    ws?.removeEventListener('open', onOpenHandler);\r\n    ws?.removeEventListener('error', onErrorHandler);\r\n}\r\n\r\nconst createWebsocket = () => {\r\n    clineUp()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    ws.addEventListener('message', onMessageHandler);\r\n    ws.addEventListener('close', onCloseHandler);\r\n    ws.addEventListener('open', onOpenHandler);\r\n    ws.addEventListener('error', onErrorHandler);\r\n}\r\n\r\nexport const WebSocketApi = {\r\n    start() {\r\n        createWebsocket()\r\n    },\r\n    subscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        subscribers = { ...subscribers, [wsEvent]: [...subscribers[wsEvent], callback] }\r\n    },\r\n    unSubscribe(wsEvent: WsEventType, callback: SubscriberType) {\r\n        //@ts-ignore\r\n        subscribers = { ...subscribers, [wsEvent]: subscribers[wsEvent].filter((s: SubscriberType) => s !== callback) }\r\n    },\r\n    send(message: string) {\r\n        ws?.send(message);\r\n    },\r\n    stop() {\r\n        clineUp()\r\n        subscribers = { ...subscribers, message: [] }\r\n        subscribers = { ...subscribers, open: [] }\r\n    }\r\n}\r\n\r\n\r\nexport type WsEventType = 'message' | 'open'\r\ntype SubscriberType = MessageSubscriberType | OpenSubscriberType\r\nexport type MessageSubscriberType = (messages: MessageType[]) => void\r\nexport type OpenSubscriberType = (wsStatus: wsStatusType) => void\r\nexport type MessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n    id: string \r\n}","import { MessageSubscriberType, OpenSubscriberType } from './../Api/Chat-api';\r\nimport { Dispatch } from 'react';\r\nimport { MessageType, WebSocketApi } from '../Api/Chat-api';\r\nimport { GetActionsType } from './store';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst initialState = {\r\n   messages: [] as MessageType[],\r\n   wsStatus: 'open' as wsStatusType,\r\n}\r\n\r\nexport type wsStatusType = 'open' | 'close'\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ChatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'CR/MESSAGES_RECEIVED':  \r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages\r\n                    .map((m: MessageType) => ( {...m, id: uuidv4()} ))]\r\n                .filter((m, index, arr) => index >= arr.length - 50)\r\n            }\r\n            case 'CR/WS_STATUS_CHANGED': \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    setMessages: ( messages: MessageType[]) => ({ type: 'CR/MESSAGES_RECEIVED', payload: { messages } } as const),\r\n    wsStatusChanged: (wsStatus: wsStatusType) => ({ type: 'CR/WS_STATUS_CHANGED', payload: { wsStatus } } as const),\r\n}\r\n\r\n\r\nlet _messageEventSubscriber: null | MessageSubscriberType = null;\r\nconst messageEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_messageEventSubscriber){\r\n        _messageEventSubscriber = (messages: MessageType[]) => {\r\n            dispatch(actions.setMessages( messages))\r\n        }\r\n    }\r\n    return _messageEventSubscriber\r\n}\r\n\r\nlet _openEventSubscriber: null | OpenSubscriberType = null;\r\nconst openEventSubscriberCreator = (dispatch: Dispatch<ActionsType>) => {\r\n    if(!_openEventSubscriber){\r\n        _openEventSubscriber = (status: wsStatusType) => {\r\n            dispatch(actions.wsStatusChanged(status))\r\n        }\r\n    }\r\n    return _openEventSubscriber\r\n}\r\n\r\nexport const startMessageEventListening = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n            WebSocketApi.start();\r\n            WebSocketApi.subscribe('message', messageEventSubscriberCreator(dispatch));\r\n            WebSocketApi.subscribe('open', openEventSubscriberCreator(dispatch))\r\n    }\r\n}\r\n\r\nexport const stopMessageEventListening = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        WebSocketApi.stop();\r\n        WebSocketApi.unSubscribe('message', messageEventSubscriberCreator(dispatch));\r\n        WebSocketApi.unSubscribe('open', openEventSubscriberCreator(dispatch));\r\n    }\r\n}\r\n\r\nexport const sendMessage = (message: string) => {\r\n    return async () => {\r\n        WebSocketApi.send(message)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Pages_pages__2_8Fx\",\"ant-menu-submenu-title\":\"Pages_ant-menu-submenu-title__2FIm8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__3wQj-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserAvatar_avatar__ibIyS\",\"img\":\"UserAvatar_img__1uriq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutUser\":\"UserInfo_aboutUser__2dBJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"SidebarUserPhoto_userPhoto__-NQPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__Yr-ZZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__h4jVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"NotFound_notFound__f8O5n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__bQfBH\"};","import { StateType } from './../store';\r\n\r\nexport const selectUserId = (state: StateType) => {\r\n    return state.auth.id\r\n}\r\n\r\nexport const selectIsAuth = (state: StateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const selectAuthUserProfile = (state: StateType) => {\r\n    return state.auth.authUserProfile\r\n}\r\n\r\n\r\nexport const selectCaptchaUrl = (state: StateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const selectErrorMessage = (state: StateType) => {\r\n    return state.auth.errorMessage\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n      \"API-KEY\": \"bb181220-b3ed-4219-9d9b-5805e04d81d5\"\r\n    }\r\n  });\r\n\r\n  export type ResponseType<D = {}, RC = ResultCodeEnum> = {\r\n    resultCode: RC\r\n    messages: string[]\r\n    data: D\r\n  }\r\n\r\n  export enum ResultCodeEnum {\r\n    success = 0,\r\n    error = 1\r\n  }\r\n\r\n  export enum ResultCodeCaptchaEnum {\r\n    captcha = 10\r\n  }","import React, {  } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport s from './Page.module.scss';\r\nimport { IconType } from \"react-icons\";\r\n\r\n\r\ntype PropsType = {\r\n    Icon: IconType\r\n    path: string\r\n    pageName: string\r\n}\r\n\r\nexport const Page: React.FC<PropsType> = React.memo(({ Icon, path, pageName }) => {\r\n\r\n    return (\r\n        <div className={s.page}>\r\n            <NavLink to={`/${path}`}>\r\n                <span><Icon /></span>\r\n                <span>{pageName}</span>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport s from './Pages.module.scss';\r\nimport {\r\n    HomeOutlined,\r\n    UserSwitchOutlined\r\n} from '@ant-design/icons';\r\nimport { Page } from \"./Page/Page\";\r\nimport { IconType } from \"react-icons/lib\";\r\nimport { BsChatDots } from 'react-icons/bs';\r\n\r\n\r\nexport const Pages: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.pages}>\r\n            <Page key={'page1'} Icon={HomeOutlined as IconType} path={'profile'} pageName={'profile'}/>\r\n            <Page key={'page2'} Icon={UserSwitchOutlined as IconType} path={'users'} pageName={'users'}/>\r\n            <Page key={'page3'} Icon={BsChatDots as IconType} path={'chat'} pageName={'chat'}/>\r\n        </div>\r\n    )\r\n})\r\n","import { instance, ResponseType, ResultCodeCaptchaEnum, ResultCodeEnum } from \"./Api\"\r\n\r\nexport type AuthMeDataType = {\r\n        id: number\r\n        email: string\r\n        login: string\r\n}\r\n\r\nexport const AuthApi = {\r\n    authMe: async () => {\r\n        const response = await instance.get<ResponseType<AuthMeDataType>>(`auth/me`)\r\n        return response.data\r\n    },\r\n    login: async (email: string, password: string, rememberMe: boolean, captcha = '') => {\r\n        const response = await instance.post<ResponseType<{}, ResultCodeEnum | ResultCodeCaptchaEnum>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n        return response.data\r\n    },\r\n    logout: async () => {\r\n        const response = await instance.delete<ResponseType>(`auth/login`)\r\n        return response.data\r\n    },\r\n}","import { PhotosType } from './../Types';\r\nimport { ProfileType } from \"../Types\"\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype PhotosResponseType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const ProfileApi = {\r\n    getUser: async (id: number) => {\r\n        const response = await instance.get<ProfileType>(`profile/${id}`)\r\n        return response.data\r\n    },\r\n    getStatus: async (id: number) => {\r\n        const response = await instance.get<string>(`profile/status/${id}`)\r\n        return response.data\r\n    },\r\n    updateStatus: async (status: string) => {\r\n        const response = await instance.put<ResponseType>(`profile/status`, { status })\r\n        return response.data\r\n    },\r\n    updateUserPhoto: async (file: File) => {\r\n        const data = new FormData()\r\n        data.append('file', file)\r\n        const response = await instance.put<ResponseType<PhotosResponseType>>(`profile/photo`, data, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n        return response.data\r\n    },\r\n    updateProfile: async (profile: ProfileType) => {\r\n            const response = await instance.put<ResponseType>(`profile`, profile)\r\n            return response.data\r\n        }\r\n}\r\n","import { instance } from \"./Api\"\r\n\r\ntype CaptchaUrlType = {\r\n    url: string\r\n} \r\n\r\nexport const SecurityApi = {\r\n    getCaptchaUrl: async () => {\r\n        const response = await instance.get<CaptchaUrlType>(`security/get-captcha-url`)\r\n        return response.data\r\n    },\r\n}","import { ResultCodeCaptchaEnum } from './../Api/Api';\r\nimport { ProfileType } from './../Types';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType, StateType } from './store';\r\nimport { AuthApi } from '../Api/Auth-api';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { ProfileApi } from \"../Api/Profile-api\";\r\nimport { SecurityApi } from '../Api/security-api';\r\n\r\n\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    id: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    authUserProfile: null as null | ProfileType,\r\n    captchaUrl: null as null | string,\r\n    errorMessage: null as null | string\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AuthReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AU/AUTH_VERIFIED':\r\n        case 'AU/AUTH_USER_RECEIVED':\r\n        case 'AU/CAPTCHA_URL_IS_RECEIVED':\r\n        case 'AU/AN_ERROR_HAS_OCCURRED':    \r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    authVerified: (id: number | null, email: string | null, login: string | null, isAuth: boolean) =>\r\n        ({ type: 'AU/AUTH_VERIFIED', payload: { email, login, id, isAuth } } as const),\r\n    authUserReceived: (authUserProfile: ProfileType) =>\r\n        ({ type: 'AU/AUTH_USER_RECEIVED', payload: { authUserProfile } } as const),\r\n    captchaUrlIsReceived: (captchaUrl: string | null) =>\r\n        ({ type: 'AU/CAPTCHA_URL_IS_RECEIVED', payload: { captchaUrl } } as const),\r\n    AnErrorHasOccurred: (errorMessage: string | null) =>\r\n        ({ type: 'AU/AN_ERROR_HAS_OCCURRED', payload: { errorMessage } } as const),  \r\n}\r\n\r\n\r\nexport const authMe = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        const data = await AuthApi.authMe()\r\n        if (data.resultCode === ResultCodeEnum.success) {\r\n            const { id, login, email } = data.data\r\n            dispatch(actions.authVerified(id, login, email, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAuthUser = () => {\r\n    return async (dispatch: Dispatch<ActionsType>, getState: () => StateType) => {\r\n        const state = getState()\r\n        const userId = state.auth.id\r\n        if (userId) {\r\n            const data = await ProfileApi.getUser(userId)\r\n            dispatch(actions.authUserReceived(data))\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, Password: string, rememberMe: boolean, captcha: string, ) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        const data = await AuthApi.login(email, Password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodeEnum.success) {\r\n            dispatch(authMe())\r\n            dispatch(actions.captchaUrlIsReceived(null))\r\n            dispatch(actions.AnErrorHasOccurred(null))\r\n        } else if(data.resultCode === ResultCodeCaptchaEnum.captcha) {\r\n            dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n            dispatch(getCaptchaUrl())\r\n        } else {\r\n            dispatch(actions.AnErrorHasOccurred(data.messages[0]))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        const data = await AuthApi.logout()\r\n        if (data.resultCode === ResultCodeEnum.success) {\r\n            dispatch(actions.authVerified(null, null, null, false))\r\n        } \r\n    }\r\n}\r\n\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        const data = await SecurityApi.getCaptchaUrl()\r\n            dispatch(actions.captchaUrlIsReceived(data.url))\r\n    }\r\n}\r\n","import { Button, Dropdown, Menu, message } from 'antd';\r\nimport React from 'react';\r\nimport s from \"./UserAvatar.module.scss\";\r\nimport {\r\n    UserOutlined\r\n} from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectAuthUserProfile, selectIsAuth } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { logout } from '../../../Redux/auth-Reducer';\r\n\r\n\r\nexport const UserAvatar: React.FC = React.memo(() => {\r\n\r\n    const profile = useSelector(selectAuthUserProfile)\r\n    const userName = profile?.fullName\r\n    const isAuth = useSelector(selectIsAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    function handleMenuClick(e: any) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n    }\r\n\r\n    const menu = (\r\n        <Menu>\r\n            <Menu.Item key=\"1\">\r\n                <Button danger block onClick={()=> {\r\n                    dispatch(logout())\r\n                }}>\r\n                    logout\r\n                </Button>\r\n          </Menu.Item>\r\n            <Menu.Item key=\"2\" onClick={handleMenuClick} icon={<UserOutlined />}>\r\n                2nd menu item\r\n          </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={s.avatar}>\r\n            {isAuth ? <Dropdown.Button overlay={menu}>\r\n                <NavLink to={'/profile'}>\r\n                    <div> {userName}</div>\r\n                </NavLink>\r\n            </Dropdown.Button> \r\n            : <div>\r\n                <Button>\r\n                    <NavLink to={'./login'}>\r\n                        login\r\n                    </NavLink>\r\n                </Button>\r\n            </div>}\r\n        </div>\r\n    )\r\n})\r\n","import { FaCheckDouble } from 'react-icons/fa';\r\nimport React from 'react';\r\nimport s from \"./Header.module.scss\";\r\nimport { Pages } from './Pages/Pages';\r\nimport { UserAvatar } from './UserAvatar/UserAvatar';\r\n\r\n\r\n\r\nexport const Header: React.FC = React.memo(() => {\r\n\r\n  return (\r\n    <div className={s.header}>\r\n      <div className={s.headerContent}>\r\n        <div className={s.headerContentLeft}>\r\n          <div className={s.logo}>\r\n            <FaCheckDouble />\r\n          </div>\r\n        </div>\r\n        <div className={s.headerContentRight}>\r\n          <div>\r\n            <Pages />\r\n          </div>\r\n          <div>\r\n            <UserAvatar />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n","import { FormikHelpers } from 'formik';\r\nimport { getAuthUser } from './auth-Reducer';\r\nimport { ProfileApi } from './../Api/Profile-api';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType, StateType } from './store';\r\nimport { PhotosType, ProfileType } from '../Types';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\nimport { AiFillFacebook, AiFillGithub, AiFillInstagram, AiOutlineTwitter, AiFillYoutube } from 'react-icons/ai';\r\nimport { CgWebsite } from 'react-icons/cg';\r\nimport { BiConfused } from 'react-icons/bi';\r\n\r\n\r\nconst initialState = {\r\n    profile: null as null | ProfileType,\r\n    status: null as null | string,\r\n    isFetching: false,\r\n    isLoading: false,\r\n    updateProfileStatus: null as null | UpdateProfileStatusType,\r\n    icons: {\r\n        facebook: AiFillFacebook,\r\n        website: CgWebsite,\r\n        vk: BiConfused,\r\n        github: AiFillGithub,\r\n        instagram: AiFillInstagram,\r\n        twitter: AiOutlineTwitter,\r\n        youtube: AiFillYoutube,\r\n        mainLink: BiConfused,\r\n    } as any\r\n}\r\n\r\ntype UpdateProfileStatusType = 'ready' | 'pending' | 'error';\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const ProfileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PR/STATUS_RECEIVED':\r\n        case 'PR/SET_IS_FETCHING':\r\n        case 'PR/PHOTOS_IS_LOADED':\r\n        case 'PR/SET_UPDATE_PROFILE_STATUS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'PR/PHOTOS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.payload.photos } as ProfileType\r\n            }\r\n        case 'PR/PROFILE_RECEIVED':\r\n            return {\r\n                ...state,\r\n                profile: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (profile: ProfileType) => ({ type: 'PR/PROFILE_RECEIVED', payload: profile } as const),\r\n    statusReceived: (status: string) => ({ type: 'PR/STATUS_RECEIVED', payload: { status } } as const),\r\n    setIsFetching: (isFetching: boolean) => ({ type: 'PR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    photosReceived: (photos: PhotosType) => ({ type: 'PR/PHOTOS_RECEIVED', payload: { photos } } as const),\r\n    photosILoaded: (isLoading: boolean) => ({ type: 'PR/PHOTOS_IS_LOADED', payload: { isLoading } } as const),\r\n    setUpdateProfileStatus: (updateProfileStatus: UpdateProfileStatusType) =>\r\n        ({ type: 'PR/SET_UPDATE_PROFILE_STATUS', payload: { updateProfileStatus } } as const),\r\n}\r\n\r\n\r\nexport const getUser = (id: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await ProfileApi.getUser(id)\r\n            dispatch(actions.usersReceived(data))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStatus = (id: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.getStatus(id)\r\n            dispatch(actions.statusReceived(data))\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status: string) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setIsFetching(true))\r\n            const data = await ProfileApi.updateStatus(status)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.statusReceived(status))\r\n            }\r\n            dispatch(actions.setIsFetching(false))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUserPhoto = (file: File) => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n        try {\r\n            dispatch(actions.photosILoaded(true))\r\n            const data = await ProfileApi.updateUserPhoto(file)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.photosReceived(data.data.photos))\r\n                dispatch(getAuthUser())\r\n            }\r\n            dispatch(actions.photosILoaded(false))\r\n\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateProfile = (profile: ProfileType, formikActions: FormikHelpers<ProfileType>) => {\r\n    return async (dispatch: Dispatch<any>, getState: () => StateType) => {\r\n        try {\r\n            dispatch(actions.setUpdateProfileStatus('pending'))\r\n            const data = await ProfileApi.updateProfile(profile)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.setUpdateProfileStatus('ready'))\r\n                const authUserId = getState().auth.id\r\n                if (authUserId) {\r\n                    dispatch(getUser(authUserId))\r\n                }\r\n            } else {\r\n                dispatch(actions.setUpdateProfileStatus('error'))\r\n                const errorMessage = data.messages[data.messages.length - 1]\r\n                const fieldName = errorMessage.split('->')[1].split(')').join('').toLocaleLowerCase()\r\n                formikActions.setErrors({ 'contacts': { [fieldName]: errorMessage } })\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n","import { StateType } from './../store';\r\n\r\nexport const selectProfile = (state: StateType) => {\r\n    return state.profile.profile\r\n}\r\n\r\nexport const selectStatus = (state: StateType) => {\r\n    return state.profile.status\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.profile.isFetching\r\n}\r\n\r\nexport const selectIsLoading = (state: StateType) => {\r\n    return state.profile.isLoading\r\n}\r\n\r\nexport const selectUpdateProfileStatus = (state: StateType) => {\r\n    return state.profile.updateProfileStatus\r\n}\r\n\r\nexport const selectIcons = (state: StateType) => {\r\n    return state.profile.icons\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.e94beeb6.gif\";","import { Image } from \"antd\";\r\nimport React from \"react\";\r\nimport preloaderImg from '../../../images/loading.gif';\r\nimport s from './Preloader.module.scss';\r\n\r\ntype PropsType = {\r\n    styles: string\r\n}\r\n\r\nexport const Preloader: React.FC<PropsType> = React.memo(({styles})=> {\r\n    return (\r\n        <div className={s.preloader + ' ' + s[styles]}>\r\n            <Image src={preloaderImg}/>\r\n        </div>\r\n    )\r\n})","import { Input } from \"antd\"\r\nimport React, { FormEvent } from \"react\"\r\nimport s from './UserPhoto.module.scss'\r\nimport userPhoto from '../../../../../images/img.jpg'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { updateUserPhoto } from '../../../../../Redux/Profile-Reducer';\r\nimport { selectIsLoading } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\"\r\nimport { AiOutlineSelect } from 'react-icons/ai';\r\n\r\ntype PropsType = {\r\n    img: string | null\r\n    isOwner: boolean\r\n}\r\n\r\nexport const UserPhoto: React.FC<PropsType> = React.memo(({ img, isOwner }) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(selectIsLoading)\r\n\r\n    const onHandleSelect = (e: FormEvent<HTMLInputElement>) => {\r\n        const file = e.currentTarget.files?.length && e.currentTarget.files[0]\r\n        dispatch(updateUserPhoto(file as File))\r\n    }\r\n\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <img src={img ? img : userPhoto} alt={'userPhoto'} />\r\n            {!isOwner && <div className={s.file}>\r\n                <label htmlFor=\"file\">\r\n                    <Input hidden={true} type={'file'} id={'file'} onChange={onHandleSelect} />\r\n                    <span className={s.icon}>\r\n                        <AiOutlineSelect />\r\n                    </span>\r\n                    <span className={s.select}>select</span>\r\n                </label>\r\n            </div>}\r\n                {isLoading && <Preloader styles={'photosPre'} />}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport {  Input, Form } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStatus } from \"../../../../../../../Redux/selectors/profile-selector\";\r\nimport { maxLengthCreator } from \"../../../../../../../validators/validators\";\r\nimport formStyle from '../../../../../../Common/formControl.module.scss';\r\n\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: (statusText: string)=> void\r\n}\r\ntype StatusFormValuesType = {\r\n    statusText: string\r\n}\r\n\r\nexport const StatusForm: React.FC<PropsType> = React.memo(({deActivateEditMode}) => {\r\n\r\n    const status = useSelector(selectStatus);\r\n\r\n    const submit = (values: StatusFormValuesType, actions: FormikHelpers<StatusFormValuesType>) => {\r\n        setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ statusText: status } as StatusFormValuesType}\r\n            validate={(value)=>{}}\r\n            onSubmit={submit}\r\n        >\r\n            {({ values, errors}) => (\r\n                <FormikForm onBlur={()=> {\r\n                    if(!(values.statusText.length > 30)){\r\n                        deActivateEditMode(values.statusText)\r\n                    }\r\n                }} >\r\n                    <FormItem>\r\n                        <Field name=\"statusText\"\r\n                        validate={maxLength}\r\n                         render={({ field }: FieldProps) => <Input {...field}  placeholder=\"status\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"statusText\" component={() => <div className={formStyle.fieldError}> {errors.statusText} </div>} />\r\n                    </FormItem>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateStatus } from \"../../../../../../Redux/Profile-Reducer\";\r\nimport { selectStatus, selectIsFetching } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../../../Common/Preloader/Preloader\";\r\nimport s from './Status.module.scss';\r\nimport { StatusForm } from \"./StatusForm/StatusForm\";\r\n\r\n\r\ntype PropsYpe = {\r\n    isOwner: boolean\r\n}\r\n\r\nexport const Status: React.FC<PropsYpe> = React.memo(({isOwner}) => {\r\n\r\n\r\n    const status = useSelector(selectStatus);\r\n    const isFetching = useSelector(selectIsFetching);\r\n    const dispatch = useDispatch();\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = (statusText: string) => {\r\n            setEditMode(false)\r\n            dispatch(updateStatus(statusText))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode && <div data-test={'noEditMode'} onDoubleClick={()=> {\r\n                if(!isOwner) {\r\n                    activateEditMode()\r\n                }\r\n            }}>\r\n                <span>status: </span>\r\n                 <span className={s.statusText}>{status ? status: '....'}</span>\r\n            </div>}\r\n            {editMode && <div data-test={'editMode'}>\r\n             <StatusForm deActivateEditMode={deActivateEditMode}/>\r\n            </div>}\r\n            {isFetching && <div><Preloader styles={'statusPre'}/></div>}\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport s from \"./UserContact.module.scss\";\r\nimport { IconType } from \"react-icons/lib\";\r\n\r\ntype PropsType = {\r\n    contactsTitle: string\r\n    contactsValue: string\r\n    Icon: IconType\r\n}\r\n\r\nexport const UserContact: React.FC<PropsType> = React.memo(({ contactsTitle, contactsValue, Icon }) => {\r\n    return (\r\n        <div>\r\n            {contactsValue ?\r\n            <div className={s.contact}>\r\n                <span>{contactsTitle}:</span> \r\n                <a href={contactsValue}> <Icon className={s.icon}/></a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n});\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIcons } from \"../../../../../../Redux/selectors/profile-selector\";\r\nimport { ContactsType, ProfileType } from \"../../../../../../Types\";\r\nimport { UserContact } from \"./UserContact/UserContact\";\r\nimport s from \"./UserContacts.module.scss\";\r\n\r\n\r\ntype PropsType = {\r\n   profile: ProfileType\r\n}\r\n\r\nexport const UserContacts: React.FC<PropsType> = React.memo(({profile}) => {\r\n\r\n    const icons = useSelector(selectIcons) \r\n\r\n    const contactsElements = Object.keys(profile?.contacts).map((key) =>  {\r\n        return <UserContact key={key} contactsTitle={key} Icon={icons[key]} contactsValue={profile?.contacts[key as keyof ContactsType]} />\r\n    })\r\n\r\n  let arr: number[] = []\r\n  let contactsTitle = Object.values(profile?.contacts)\r\n\r\n  for(let i = 0; i < contactsTitle.length; i++) {\r\n    if(contactsTitle[i]){\r\n       arr.push(i)\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className={s.contacts}>\r\n            <div className={s.contactsTitle}>\r\n                contacts\r\n            </div>\r\n            <div className={s.contactsValues}>\r\n               {arr.length ? contactsElements : <div className={s.noContacts}>no contacts</div>}\r\n              </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useParams } from \"react-router\"\r\nimport { selectProfile } from \"../../../../../Redux/selectors/profile-selector\"\r\nimport { ProfileType } from \"../../../../../Types\"\r\nimport { ParamTypes } from \"../UserInfo\"\r\nimport s from './ProfileData.module.scss';\r\nimport { Status } from \"./Status/Status\"\r\nimport { UserContacts } from \"./UserContacts/UserContacts\"\r\nimport { Button } from \"antd\"\r\n\r\n\r\ntype PropsType = {\r\n    activateEditMode: () => void\r\n    isOwner: boolean\r\n}\r\n\r\nexport const ProfileData: React.FC<PropsType> = React.memo(({ activateEditMode, isOwner }) => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const { userId } = useParams<ParamTypes>()\r\n\r\n    return (\r\n        <div className={s.profileData}>\r\n            <div className={s.userNameAndStatus}>\r\n                <div className={s.userName}>\r\n                    {profile?.fullName}\r\n                </div>\r\n                <Status isOwner={!!userId} />\r\n                <div className={s.aboutMe}>\r\n                    <span>about me: </span>{profile?.aboutMe || '.....'}\r\n                </div>\r\n                <div className={s.lookingForAJob}>\r\n                    <span>looking for a Job: </span>{profile?.lookingForAJob ? 'yes' : 'no'}\r\n                </div>\r\n                <div className={s.professionalSkills}>\r\n                    {profile?.lookingForAJob\r\n                        ? <div><span> my professional skills: </span>{profile?.lookingForAJobDescription || '.....'}</div>\r\n                        : null}\r\n                    {!userId && <Button onClick={() => {\r\n                        activateEditMode()\r\n                    }} type={'default'}>\r\n                        edit\r\n                    </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={s.contacts}>\r\n                <UserContacts profile={profile} />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Row, Col,  } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { maxLengthCreator, reqAndMaxLValCreator } from \"../../../../../validators/validators\";\r\nimport s from './ProfileDataForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport TextArea from \"antd/lib/input/TextArea\";\r\nimport { selectProfile, selectUpdateProfileStatus } from \"../../../../../Redux/selectors/profile-selector\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ProfileType } from \"../../../../../Types\";\r\nimport { updateProfile } from \"../../../../../Redux/Profile-Reducer\";\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Preloader } from \"../../../../Common/Preloader/Preloader\";\r\nimport formError  from \"../../../../Common/formControl.module.scss\";\r\n\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(30)\r\n\r\n\r\ntype PropsType = {\r\n    deActivateEditMode: () => void\r\n}\r\n\r\nexport const ProfileDataForm: React.FC<PropsType> = React.memo(({ deActivateEditMode }) => {\r\n\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const dispatch = useDispatch()\r\n    const updateProfileStatus = useSelector(selectUpdateProfileStatus)\r\n\r\n\r\n    const submit = (values: ProfileType, actions: FormikHelpers<ProfileType>) => {\r\n        setTimeout(() => {\r\n            dispatch(updateProfile(values, actions))\r\n            if (!(updateProfileStatus === 'error' || updateProfileStatus === 'pending')) {\r\n                actions.resetForm({})\r\n                deActivateEditMode()\r\n            }\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n    const contactsFormCreator = (errors: Partial<any>) => {\r\n        return Object.keys(profile.contacts).map((key) => {\r\n            return <FormItem label={key} className={`${s[key]} ${s.contact}`} key={key}>\r\n                <Field name={`contacts.${key}`}\r\n                    validate={maxLength}\r\n                    render={({ field }: FieldProps) => <Input {...field} placeholder={key} />} />\r\n                <ErrorMessage name={`contacts.${key}`} component={() => <div className={formError.fieldError}>{errors.contacts[key]}</div>} />\r\n            </FormItem>\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ ...profile }}\r\n            validate={(value) => { }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors }) => (\r\n                <FormikForm className={s.form}>\r\n                    <Row>\r\n                        <Col span={10}>\r\n                            <div className={s.buttonAndPre}>\r\n                                <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                                    save\r\n                                </Button>\r\n                                {updateProfileStatus === 'pending' && <div><Preloader styles={'updProfPre'}/></div>}\r\n                            </div>\r\n                            <Input.Group>\r\n                                <FormItem className={s.formItem} label={'name'}>\r\n                                    <Field name=\"fullName\"\r\n                                        validate={reqAndMaxLValCreator(20)}\r\n                                        render={({ field }: FieldProps) => <Input {...field} placeholder=\"fullName\" autoFocus={true} />} />\r\n                                    <ErrorMessage name=\"fullName\" component={() => <div className={formError.fieldError}>{errors.fullName}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'about me'}>\r\n                                    <Field name=\"aboutMe\"\r\n                                        validate={reqAndMaxLValCreator(50)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"aboutMe\" />} />\r\n                                    <ErrorMessage name=\"aboutMe\" component={() => <div className={formError.fieldError}>{errors.aboutMe}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem}>\r\n                                    <Field name=\"lookingForAJob\"\r\n                                        render={({ field }: FieldProps) => <Checkbox {...field} checked={values.lookingForAJob}>\r\n                                            looking for a job\r\n                                     </Checkbox>} />\r\n                                    <ErrorMessage name=\"lookingForAJob\" component={() => <div className={formError.fieldError}>{errors.lookingForAJob}</div>} />\r\n                                </FormItem>\r\n                                <FormItem className={s.formItem} label={'my professional skills'}>\r\n                                    <Field name=\"lookingForAJobDescription\"\r\n                                        validate={reqAndMaxLValCreator(40)}\r\n                                        render={({ field }: FieldProps) => <TextArea {...field} placeholder=\"lookingForAJobDescription\" />} />\r\n                                    <ErrorMessage name=\"lookingForAJobDescription\"\r\n                                        component={() => <div className={formError.fieldError}>{errors.lookingForAJobDescription}</div>} />\r\n                                </FormItem>\r\n                            </Input.Group>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <FormItem className={s.contacts}>\r\n                                <div className={s.contactsHeader}>\r\n                                    contacts\r\n                                </div>\r\n                                {contactsFormCreator(errors)}\r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col offset={1}>\r\n                            <AiOutlineCloseCircle className={s.closeIcon} onClick={() => {\r\n                                deActivateEditMode()\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React, { useEffect, useState } from \"react\"\r\nimport s from \"./UserInfo.module.scss\";\r\nimport { UserPhoto } from \"./UserPhoto/UserPhoto\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStatus, getUser } from \"../../../../Redux/Profile-Reducer\";\r\nimport { selectProfile } from \"../../../../Redux/selectors/profile-selector\";\r\nimport { Preloader } from \"../../../Common/Preloader/Preloader\";\r\nimport { ProfileType } from \"../../../../Types\";\r\nimport { selectIsAuth, selectUserId } from \"../../../../Redux/selectors/auth-selector\";\r\nimport { useParams } from \"react-router\";\r\nimport { ProfileData } from \"./ProfileData/ProfileData\";\r\nimport { ProfileDataForm } from \"./ProfileDataForm/ProfileDataForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport type ParamTypes = {\r\n    userId: string\r\n}\r\n\r\nexport const UserInfo: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector(selectProfile) as ProfileType\r\n    const AuthUserId = useSelector(selectUserId)\r\n    const history = useHistory()\r\n    const { userId } = useParams<ParamTypes>()\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let userIdFromUrl = Number(userId);\r\n        if (userIdFromUrl) {\r\n            dispatch(getUser(userIdFromUrl))\r\n            dispatch(getStatus(userIdFromUrl))\r\n        } else if (AuthUserId) {\r\n            dispatch(getUser(AuthUserId))\r\n            dispatch(getStatus(AuthUserId))\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, AuthUserId, userId, history])\r\n\r\n\r\n    if (!profile) {\r\n        return <Preloader styles={'profilePre'} />\r\n    }\r\n\r\n    return (\r\n            <div className={s.aboutUser}>\r\n                <UserPhoto isOwner={!!userId} img={profile.photos?.large} />\r\n                {!editMode && <ProfileData isOwner={!!userId} activateEditMode = {activateEditMode} />}\r\n                {editMode && <ProfileDataForm deActivateEditMode = {deActivateEditMode}/>}\r\n            </div>\r\n    )\r\n})\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/mainImg.0de69ef5.jpg\";","import React from 'react';\r\nimport s from \"./ProfilePage.module.scss\";\r\nimport { UserInfo } from './UserInfor/UserInfo';\r\nimport mainPhoto from '../../../images/mainImg.jpg'\r\nimport '../../../App.css';\r\n\r\nexport const ProfilePage: React.FC = React.memo(() => {\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <div className={s.mainImg}>\r\n                <img src={mainPhoto} alt={'mainImg'}/>\r\n            </div>\r\n            <div className={s.contentBottom}>\r\n                <UserInfo />\r\n            </div>\r\n        </div>\r\n    )\r\n})","import { Image } from \"antd\"\r\nimport React from \"react\"\r\nimport s from './SidebarUserPhoto.module.scss'\r\nimport userPhoto from '../../../../images/img.jpg'\r\n\r\ntype PropsType = {\r\n    img: string | null | undefined\r\n}\r\n\r\nexport const SidebarUserPhoto: React.FC<PropsType> = React.memo(({img}) => {\r\n    return (\r\n        <div className={s.userPhoto}>\r\n            <img src={img ? img : userPhoto} alt={'authorized user'} />\r\n        </div>\r\n    )\r\n})","import { StateType } from '../store';\r\n\r\nexport const selectFriends = (state: StateType) => {\r\n    return state.sideBar.friends\r\n}\r\n\r\n","import React from \"react\"\r\nimport s from './Friend.module.scss'\r\nimport sparePhoto from '../../../../../images/img.jpg'\r\nimport { PhotosType } from \"../../../../../Types\"\r\nimport { NavLink } from \"react-router-dom\"\r\n\r\ntype PropsType = {\r\n    photos: PhotosType\r\n    name: string | null\r\n    id: number\r\n}\r\n\r\nexport const Friend: React.FC<PropsType> = React.memo(({photos, name, id}) => {\r\n\r\n    const friendPhoto = photos.small\r\n\r\n    return (\r\n        <div className={s.friend}>\r\n            <div className={s.img}>\r\n                <NavLink to={`/profile/${id}`}>\r\n                    <img src={friendPhoto ? friendPhoto : sparePhoto} alt={'friendPhoto'}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.nameLink}>\r\n             <NavLink to={`/profile/${id}`}>\r\n                {name}\r\n             </NavLink>   \r\n            </div>\r\n        </div>\r\n    )\r\n})","import React from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectFriends } from \"../../../../Redux/selectors/sideBar-selector\"\r\nimport s from './Friends.module.scss'\r\nimport {Friend} from './Friend/Friend'\r\n\r\nexport const Friends: React.FC = React.memo(() => {\r\n    \r\n    const friends = useSelector(selectFriends)\r\n\r\n    const friendElements = friends.map((f) => <Friend key={f.id} photos={f.photos} name={f.name} id={f.id}/>)\r\n\r\n    return (\r\n        <div className={s.SidBaFriends}>\r\n            <h2>\r\n                friends\r\n            </h2>\r\n            <div className={s.test}>\r\n            <div className={s.friends}>\r\n                {friendElements}\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import { FilterType } from './../Redux/User-Reducer';\r\nimport { UserType } from './../Types';\r\nimport { instance, ResponseType } from \"./Api\"\r\n\r\ntype UserResponseType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string\r\n}\r\n\r\nexport const UserApi = {\r\n    getUsers: async (pageNumber: number, pageSize: number,  filter: FilterType) => {\r\n        const response = await instance.get<UserResponseType>(`users?count=${pageSize}\r\n        &page=${pageNumber}&term=${filter.term}&friend=${filter.friend}`)\r\n        return response.data\r\n    },\r\n    follow: async (id: number) => {\r\n        const response = await instance.post<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n    unFollow: async (id: number) => {\r\n        const response = await instance.delete<ResponseType>(`follow/${id}`)\r\n        return response.data\r\n    }, \r\n}\r\n","import { UserApi } from './../Api/User-api';\r\nimport { Dispatch } from 'react';\r\nimport { GetActionsType } from './store';\r\nimport { UserType } from '../Types';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    friends: [] as UserType[],\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const SideBarReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SB/FRIENDS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    friendsReceived: (friends: UserType[]) =>\r\n        ({ type: 'SB/FRIENDS_RECEIVED', payload: { friends } } as const),\r\n}\r\n\r\n\r\nexport const getFriends = () => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const result = await UserApi.getUsers(20, 3, { term: '', friend: true })\r\n            dispatch(actions.friendsReceived(result.items))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n ","import React, { useEffect } from 'react';\r\nimport s from \"./SideBar.module.scss\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SidebarUserPhoto } from './SidebarUserPhoto/SidebarUserPhoto';\r\nimport { getAuthUser } from '../../../Redux/auth-Reducer';\r\nimport { selectAuthUserProfile } from '../../../Redux/selectors/auth-selector';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Friends } from './Friends/Friends'\r\nimport { getFriends } from '../../../Redux/Sidebar-Reducer';\r\n\r\n\r\nexport const SideBar = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const profile = useSelector(selectAuthUserProfile)\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthUser())\r\n    dispatch(getFriends())\r\n  }, [dispatch])\r\n  \r\n\r\n  return (\r\n    <div className={s.sidebar}>\r\n      <div className={s.sidebarTop}>\r\n      </div>\r\n      <div className={s.sidebarBottom}>\r\n        <div className={s.userPhoto}>\r\n          <NavLink to={'/profile'}>\r\n            <SidebarUserPhoto img={profile?.photos.large} />\r\n          </NavLink>\r\n        </div>\r\n        <div className={s.userName}>\r\n          <NavLink to={'/profile'}>\r\n            <span>{profile?.fullName}</span>\r\n          </NavLink>\r\n        </div>\r\n        <div>\r\n          <Friends/>\r\n        </div>\r\n        <div className={s.viewP}>\r\n        <NavLink to={'/profile'}>\r\n            view profile\r\n        </NavLink>\r\n        </div>\r\n      </div>\r\n      </div>\r\n  )\r\n}","import { StateType } from './../store';\r\n\r\n\r\nexport const selectUsers = (state: StateType) => {\r\n    return state.users.users\r\n}\r\n\r\nexport const selectIsFetching = (state: StateType) => {\r\n    return state.users.isFetching\r\n}\r\n\r\nexport const selectTotalUserCount = (state: StateType) => {\r\n    return state.users.totalUsersCount\r\n}\r\n\r\nexport const selectPageNumber = (state: StateType) => {\r\n    return state.users.pageNumber\r\n}\r\nexport const selectPageSize = (state: StateType) => {\r\n    return state.users.pageSize\r\n}\r\n\r\nexport const selectFilter = (state: StateType) => {\r\n    return state.users.filter\r\n}\r\n\r\nexport const selectFollowingInProgress = (state: StateType) => {\r\n    return state.users.followInProgress\r\n}\r\n","import { UserApi } from './../Api/User-api';\r\nimport { UserType } from './../Types';\r\nimport { Dispatch } from \"react\";\r\nimport { GetActionsType } from './store';\r\nimport { ResultCodeEnum } from '../Api/Api';\r\nimport { message } from 'antd';\r\n\r\n\r\nconst initialState = {\r\n    users: [] as UserType[],\r\n    isFetching: false,\r\n    followInProgress: [] as number[],\r\n    totalUsersCount: 0,\r\n    pageNumber: 1,\r\n    pageSize: 10,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nexport type FilterType = typeof initialState.filter\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\n\r\nexport const UserReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'UR/USERS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n        case 'UR/FOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: true }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/UNFOLLOW_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                users: [...state.users?.map((u: UserType) => {\r\n                    if (u.id === action.payload.userId) {\r\n                        return { ...u, followed: false }\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })]\r\n            }\r\n        case 'UR/SET_PAGE_NUMBER':\r\n            return {\r\n                ...state,\r\n                pageNumber: action.payload.pageNumber\r\n            }\r\n        case 'UR/SET_FILTER_DATA':\r\n            return {\r\n                ...state,\r\n                filter: action.payload.filter\r\n            }\r\n        case 'UR/SET_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followInProgress: action.payload.isFollowInProgress ? [...state.followInProgress, action.payload.id]\r\n                    : state.followInProgress.filter((id) => id !== action.payload.id)\r\n            }\r\n        case 'UR/SET_IS_FETCHING':\r\n        case 'UR/TOTAL_COUNT_IS_RECEIVED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n    usersReceived: (users: UserType[]) =>\r\n        ({ type: 'UR/USERS_RECEIVED', payload: { users } } as const),\r\n    setIsFetching: (isFetching: boolean) =>\r\n        ({ type: 'UR/SET_IS_FETCHING', payload: { isFetching } } as const),\r\n    followIsFinished: (userId: number) =>\r\n        ({ type: 'UR/FOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    unFollowIsFinished: (userId: number) =>\r\n        ({ type: 'UR/UNFOLLOW_IS_FINISHED', payload: { userId } } as const),\r\n    totalCountIsReceived: (totalUsersCount: number) =>\r\n        ({ type: 'UR/TOTAL_COUNT_IS_RECEIVED', payload: { totalUsersCount } } as const),\r\n    setPageNumber: (pageNumber: number) =>\r\n        ({ type: 'UR/SET_PAGE_NUMBER', payload: { pageNumber } } as const),\r\n    setFilterData: (filter: FilterType) =>\r\n        ({ type: 'UR/SET_FILTER_DATA', payload: { filter } } as const),\r\n    setFollowInProgress: (id: number, isFollowInProgress: boolean) =>\r\n        ({ type: 'UR/SET_FOLLOWING_PROGRESS', payload: { id, isFollowInProgress } } as const),\r\n}\r\n\r\n\r\nexport const getUsers = (pageNumber: number, pageSize: number, filter: FilterType) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            dispatch(actions.setFilterData(filter))\r\n            dispatch(actions.setIsFetching(true))\r\n            dispatch(actions.setPageNumber(pageNumber))\r\n            const data = await UserApi.getUsers(pageNumber, pageSize, filter)\r\n            dispatch(actions.setIsFetching(false))\r\n            dispatch(actions.usersReceived(data.items))\r\n            dispatch(actions.totalCountIsReceived(data.totalCount))\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)       \r\n        }\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await UserApi.follow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.followIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\nexport const unFollow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionsType>) => {\r\n        try {\r\n            const data = await UserApi.unFollow(userId)\r\n            if (data.resultCode === ResultCodeEnum.success) {\r\n                dispatch(actions.unFollowIsFinished(userId))\r\n                dispatch(actions.setFollowInProgress(userId, false))\r\n            }\r\n        } catch (e) {\r\n            const errorMessage = JSON.stringify(e.message)\r\n            const errorText = errorMessage.slice(1, errorMessage.length - 1)\r\n            message.error(errorText)\r\n        }\r\n    }\r\n}\r\n\r\n","import { Pagination } from \"antd\";\r\nimport React from \"react\";\r\nimport s from './Paginator.module.scss';\r\n\r\ntype PropsType = {\r\n  totalItemsCount: number\r\n  pageSize?: number\r\n  onPageChangeHandler: (pageNumber: number) => void\r\n  pageNumber: number\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = React.memo(({\r\n  totalItemsCount,\r\n  pageSize = 10,\r\n  onPageChangeHandler,\r\n  pageNumber\r\n}) => {\r\n\r\n  const pagesCount = totalItemsCount / pageSize\r\n\r\n  const onChange = (currentPageNumber: number) => {\r\n    onPageChangeHandler(currentPageNumber)\r\n  }\r\n  return (\r\n    <div className={s.paginator}>\r\n      <Pagination defaultCurrent={pageNumber} size={'small'} current={pageNumber} total={pagesCount * 10} onChange={onChange} />\r\n    </div>\r\n  )\r\n})\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Input, Form, Select, Button } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport { FilterType } from \"../../../../Redux/User-Reducer\";\r\nimport s from './FilterForm.module.scss';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectFilter } from \"../../../../Redux/selectors/user-selector\";\r\nimport { maxLengthCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formControl.module.scss';\r\n\r\n\r\nconst Option = Select.Option\r\nconst FormItem = Form.Item;\r\nconst maxLength = maxLengthCreator(10)\r\n\r\ntype PropsType = {\r\n    onFilterHandler: (filter: FilterType) => void\r\n}\r\ntype FilterFormValuesType = {\r\n    term: string\r\n    friend: string\r\n}\r\n\r\nexport const FilterForm: React.FC<PropsType> = React.memo(({onFilterHandler}) => {\r\n\r\n    const filter = useSelector(selectFilter)\r\n\r\n    const submit = (values: FilterFormValuesType, actions: FormikHelpers<FilterFormValuesType>) => {\r\n        setTimeout(() => {\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n            }\r\n            onFilterHandler(filter)\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{ term: filter.term,  friend: String(filter.friend)}}\r\n            validate={(value) => { }}\r\n            onSubmit={submit} \r\n        >\r\n            {({ isSubmitting, values, setFieldValue, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem>\r\n                        <Field name=\"term\"\r\n                            validate={maxLength}\r\n                            render={({ field }: FieldProps) => <Input {...field} placeholder=\"userName\" autoFocus={true} />} />\r\n                        <ErrorMessage name=\"term\" component={()=><div className={formStyle.fieldError}>{errors.term}</div>} />\r\n                    </FormItem>\r\n                        <FormItem>\r\n                        <Field  name={'friend'}\r\n                            placeholder={\"HELLO\"}\r\n                            render={({ field }: FieldProps) => \r\n                             <Select \r\n                                className={s.select}\r\n                                {...field}\r\n                                onChange={value => setFieldValue(\"friend\", value)}\r\n                                value={values.friend}\r\n                            >\r\n                                <Option value=\"null\">all</Option>\r\n                                <Option value=\"true\">follow</Option>\r\n                                <Option value=\"false\">unFollow</Option>\r\n                            </Select>\r\n                            } />\r\n                        </FormItem>\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        find\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import { Button } from 'antd';\r\nimport React from 'react';\r\nimport { PhotosType } from '../../../../Types';\r\nimport s from './User.module.scss';\r\nimport spareUserPhoto from '../../../../images/img.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { actions, follow, unFollow } from '../../../../Redux/User-Reducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    userName: string | null\r\n    status: string | null\r\n    photos: PhotosType\r\n    followed: boolean\r\n    followingInProgress: number[]\r\n    isAuth: boolean\r\n}\r\n\r\nexport const User: React.FC<PropsType> = React.memo(({ id, userName, status, photos, followed, followingInProgress, isAuth }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userPhoto = photos.large\r\n\r\n\r\n    let button;\r\n\r\n    if (followed) {\r\n        button = <div className={s.button + \" \" + s.follow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(unFollow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                follow\r\n            </Button>\r\n        </div>\r\n    } else {\r\n        button = <div className={s.button + \" \" + s.unFollow}>\r\n            <Button disabled={followingInProgress.some((FPId) => FPId === id)} onClick={() => {\r\n                dispatch(follow(id))\r\n                dispatch(actions.setFollowInProgress(id, true))\r\n            }}>\r\n                unFollow\r\n            </Button>\r\n        </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.userInfo}>\r\n                <div className={s.rightBlock}>\r\n                    <div className={s.img}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <img src={userPhoto ? userPhoto : spareUserPhoto} alt={'userPhoto'} />\r\n                        </NavLink>\r\n                    </div>\r\n                    {isAuth ? button : null}\r\n                </div>\r\n                <div className={s.leftBlock}>\r\n                    <div className={s.userName}>\r\n                        <NavLink to={`/profile/${id}`}>\r\n                            <span> {userName}</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.status}>\r\n                        status: {status ? status : '....'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={s.bottomLine}></div>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n    selectIsFetching,\r\n    selectUsers,\r\n    selectTotalUserCount,\r\n    selectPageSize,\r\n    selectPageNumber,\r\n    selectFilter,\r\n    selectFollowingInProgress\r\n} from \"../../../Redux/selectors/user-selector\";\r\nimport { FilterType, getUsers } from \"../../../Redux/User-Reducer\";\r\nimport { Paginator } from \"../../Common/Peginator/Paginator\";\r\nimport { Preloader } from \"../../Common/Preloader/Preloader\";\r\nimport { FilterForm } from \"./FilterForm/FilterForm\";\r\nimport { User } from \"./User/User\"\r\nimport s from './UsersPage.module.scss';\r\nimport queryString from 'query-string'\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\n\r\n\r\n\r\nexport const UsersPage: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const isAuth = useSelector(selectIsAuth) \r\n\r\n    const users = useSelector(selectUsers)\r\n    const isFetching = useSelector(selectIsFetching)\r\n    const totalUserCount = useSelector(selectTotalUserCount)\r\n    const pageSize = useSelector(selectPageSize)\r\n    const pageNumber = useSelector(selectPageNumber)\r\n    const filter = useSelector(selectFilter)\r\n    const followingInProgress = useSelector(selectFollowingInProgress)\r\n\r\n\r\n    type UrlDataType = {\r\n        friend?: string\r\n        term?: string\r\n        page?: string | number\r\n    }\r\n\r\n    useEffect(() => {\r\n        const urlData = queryString.parse(history.location.search) as UrlDataType\r\n        let actualPageNumber = pageNumber\r\n        let actualFilter = filter\r\n\r\n        if (urlData.page) actualPageNumber = Number(urlData.page);\r\n        if (urlData.term && urlData.term !== '') actualFilter = { ...actualFilter, term: urlData.term }\r\n        if (urlData.friend) actualFilter = { ...actualFilter, friend: urlData.friend === 'true' ? true : false }\r\n\r\n        dispatch(getUsers(actualPageNumber, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        let urlData: UrlDataType = {}\r\n\r\n        if (pageNumber !== 1) urlData.page = String(pageNumber)\r\n        if (filter.term !== '') urlData.term = filter.term\r\n        if (filter.friend !== null) urlData.friend = String(filter.friend)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(urlData)\r\n        })\r\n    }, [filter, pageNumber, history])\r\n\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(getUsers(pageNumber, pageSize, filter))\r\n\r\n    }\r\n    const onFilterHandler = (filter: FilterType) => {\r\n        dispatch(getUsers(1, pageSize, filter))\r\n\r\n    }\r\n\r\n    const usersElements = users.map((u) => <User isAuth={isAuth} followingInProgress={followingInProgress} key={u.id} id={u.id} userName={u.name}\r\n        photos={u.photos} status={u.status} followed={u.followed} />)\r\n\r\n    return (\r\n        <div className={s.usersPage}>\r\n            <div className={s.userPageTopBlock}>\r\n                <div className={s.usersHeader}>\r\n                    Users\r\n                </div>\r\n                <div>\r\n                    {isFetching && <Preloader styles={'usersPre'} />}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <FilterForm onFilterHandler={onFilterHandler} />\r\n            </div>\r\n            <div>\r\n                <Paginator pageSize={pageSize} pageNumber={pageNumber} onPageChangeHandler={onPageChangeHandler} totalItemsCount={totalUserCount} />\r\n            </div>\r\n            {usersElements.length === 0 \r\n            ? <div className={s.notFound}>not Found</div> \r\n            : usersElements }\r\n        </div>\r\n    )\r\n})","import React from \"react\";\r\nimport { Input, Form, Button, Image } from \"antd\";\r\nimport { Form as FormikForm, Field, FormikHelpers, FieldProps } from \"formik\";\r\nimport { Formik, ErrorMessage } from 'formik';\r\nimport s from './LoginForm.module.scss';\r\nimport Checkbox from \"antd/lib/checkbox/Checkbox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login } from \"../../../../Redux/auth-Reducer\";\r\nimport {selectCaptchaUrl, selectErrorMessage} from '../../../../Redux/selectors/auth-selector';\r\nimport { emailValidator,  reqAndMaxLValCreator } from \"../../../../validators/validators\";\r\nimport formStyle from '../../../Common/formControl.module.scss';\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nexport type FormActionsType = FormikHelpers<LoginFormValuesType>\r\n\r\nexport const LoginForm: React.FC = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const captchaUrl = useSelector(selectCaptchaUrl)\r\n    const error = useSelector(selectErrorMessage)\r\n  \r\n\r\n    const submit = (values: LoginFormValuesType, actions: FormActionsType,) => {\r\n        setTimeout(() => {\r\n            const {email, password, rememberMe, captcha} = values;\r\n            dispatch(login(email, password, rememberMe, captcha ))\r\n            actions.setSubmitting(false);\r\n        }, 400);\r\n    }\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', rememberMe: false, captcha: '', }}\r\n            validate={(value) => {\r\n            \r\n            }}\r\n            onSubmit={submit}\r\n        >\r\n            {({ isSubmitting, values, errors}) => (\r\n                <FormikForm className={s.form}>\r\n                    <FormItem label={'email'}>\r\n                        {console.log(errors)}\r\n                        <Field name=\"email\"\r\n                            validate={emailValidator}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"email\" placeholder=\"email\" />} />\r\n                        <ErrorMessage name=\"email\" component={()=><div className={formStyle.fieldError}>{errors.email}</div>} />\r\n                    </FormItem>\r\n                    <FormItem label={'password'} >\r\n                        <Field name=\"password\"\r\n                            validate={reqAndMaxLValCreator(30)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  type=\"password\" placeholder=\"password\"/>} />\r\n                        <ErrorMessage name=\"password\" component={()=> <div className={formStyle.fieldError}>{errors.password}</div>} />\r\n                    </FormItem>\r\n                    <FormItem>\r\n                        <Field name=\"rememberMe\"\r\n                            render={({ field }: FieldProps) =>   \r\n                            <Checkbox\r\n                            {...field}\r\n                            checked={values.rememberMe}\r\n                          >\r\n                            rememberMe\r\n                          </Checkbox>}/>\r\n                    </FormItem>\r\n                    {error && <div className={formStyle.formError}>{error}</div>}\r\n                   {captchaUrl && <div className={s.captcha}>\r\n                       <div className={s.captchaImg}> \r\n                            <Image src={captchaUrl}/>\r\n                       </div>\r\n                    <FormItem label={'captcha'}>\r\n                        <Field name=\"captcha\"\r\n                            validate={reqAndMaxLValCreator(20)}\r\n                            render={({ field }: FieldProps) => <Input {...field}  placeholder=\"captcha\" autoFocus={true}/>} />\r\n                        <ErrorMessage name=\"captcha\" component={()=> <div className={formStyle.fieldError}>{errors.captcha}</div>} />\r\n                    </FormItem>\r\n                       </div>}\r\n                    <Button className={s.SendButton} type={\"primary\"} htmlType={\"submit\"} disabled={isSubmitting}>\r\n                        login\r\n                    </Button>\r\n                </FormikForm>\r\n            )}\r\n        </Formik>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport s from './LoginPage.module.scss';\r\nimport {LoginForm} from './LoginForm/LoginForm';\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from \"../../../Redux/selectors/auth-selector\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginPage: React.FC = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  if(isAuth){\r\n      return <Redirect to={'/profile'}/>\r\n  }\r\n\r\n  return (\r\n    <div className= {s.loginPage}>\r\n      <div className={s.loginHeader}>\r\n        login\r\n      </div>\r\n      <div>\r\n        <LoginForm/>\r\n      </div>\r\n    </div>\r\n  );\r\n})\r\n","import React from 'react';\r\nimport s from \"./NotFound.module.scss\";\r\n\r\n\r\nexport const NotFound: React.FC = React.memo(() => {\r\n\r\n    return (\r\n        <div className={s.notFound}>\r\n            NOT FOUND\r\n        </div>\r\n    )\r\n})","import { ProfilePage } from \"./ProfilePage/ProfilePage\"\r\nimport { SideBar } from \"./SideBar/SideBar\"\r\nimport React, { Suspense } from 'react';\r\nimport s from \"./Main.module.scss\";\r\nimport '../../App.css';\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { UsersPage } from \"./UserPage/UserPage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectIsAuth } from '../../Redux/selectors/auth-selector'\r\nimport { LoginPage } from \"./LoginPage/LoginPage\";\r\nimport { NotFound } from './../NotFound/NotFound'\r\n\r\nconst ChatPage: React.FC = React.lazy(() => import('./ChatPage/ChatPage'));\r\n\r\n\r\nexport const Main = React.memo(() => {\r\n\r\n  const isAuth = useSelector(selectIsAuth)\r\n\r\n  return (\r\n    <div className={s.main}>\r\n      {isAuth && <SideBar />}\r\n      <div className={`commonContentStyle ${!isAuth ? 'authorized' : ''}`}>\r\n        <div className={'contentTop'}></div>\r\n        <div>\r\n          <Switch>\r\n            <Route path={'/profile/:userId?'} render={(match) => {\r\n              return <ProfilePage />\r\n            }} />\r\n            <Route path={'/users'}>\r\n              <UsersPage />\r\n            </Route>\r\n            <Route path={'/login'}>\r\n              <LoginPage />\r\n            </Route>\r\n            <Route path={'/chat'}>\r\n              <Suspense fallback={<div>loading...</div>}>\r\n                <ChatPage />\r\n              </Suspense>\r\n            </Route>\r\n            <Route exact path={'/'} render={() => {\r\n              return <Redirect to={\"/profile\"}\r\n              />\r\n            }} />\r\n            <Route path={'*'}>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})","import { Dispatch } from 'react';\r\nimport { GetActionsType } from './store';\r\nimport { authMe } from './auth-Reducer';\r\n\r\n\r\nconst initialState = {\r\n    isAuthorizeFinished: false,\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionsType = GetActionsType<typeof actions>\r\n\r\nexport const AppReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AP/AUTHORIZE_IS_FINISHED':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const actions = {\r\n        authorizedIsFinished: (isAuthorizeFinished: boolean) =>\r\n        ({ type: 'AP/AUTHORIZE_IS_FINISHED', payload: { isAuthorizeFinished } } as const),\r\n}\r\n\r\n\r\n\r\nexport const authorize = () => {\r\n    return async (dispatch: Dispatch<any>) => {\r\n            const result = dispatch(authMe())\r\n            Promise.all([result]).then(()=> {\r\n                dispatch(actions.authorizedIsFinished(true))\r\n            })\r\n    }\r\n}\r\n","import { SideBarReducer } from './Sidebar-Reducer';\r\nimport { UserReducer } from './User-Reducer';\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport { ProfileReducer } from \"./Profile-Reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { AuthReducer } from \"./auth-Reducer\";\r\nimport { AppReducer } from './App-Reducer';\r\nimport { ChatReducer } from './Chat-Reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: ProfileReducer,\r\n    auth: AuthReducer,\r\n    users: UserReducer,\r\n    app: AppReducer,\r\n    chat: ChatReducer,\r\n    sideBar: SideBarReducer\r\n})\r\n\r\n\r\ntype TypeWithInfer<T> = T extends {[key: string]: infer U} ? U : any\r\nexport type GetActionsType<T extends {[key: string]: (...args: any) => any}> = ReturnType<TypeWithInfer<T>>   \r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n\r\n//@ts-ignore\r\nwindow._store = store\r\nexport default store","import { StateType } from '../store';\r\n\r\nexport const selectIsAuthorizeFinished = (state: StateType) => {\r\n    return state.app.isAuthorizeFinished\r\n}\r\n\r\n","import React from \"react\"\r\nimport s from './Footer.module.scss';\r\n\r\nexport const Footer: React.FC = React.memo(()=> {\r\n    return (\r\n        <div className={s.footer}>\r\n           this site was created by David Gasparian\r\n        </div>\r\n    )\r\n})","import { useEffect } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Header } from './Components/Header/Header';\nimport { Main } from './Components/Wrapper/Main';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './Redux/store';\nimport { Preloader } from './Components/Common/Preloader/Preloader';\nimport { authorize } from './Redux/App-Reducer';\nimport { selectIsAuthorizeFinished } from './Redux/selectors/App-selector';\nimport { Footer } from './Components/Footer/Footer';\ndocument.body.style.backgroundColor = \"#E7E7E7\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const isAuthorizeFinished = useSelector(selectIsAuthorizeFinished)\n\n  useEffect(() => {\n    dispatch(authorize())\n  }, [dispatch])\n\n  if(!isAuthorizeFinished) {\n    return <Preloader styles={'appPre'} />\n  }\n\n  return (\n    <div className= {'App'}>\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\n\nconst AppContainer = () => {\n  return (\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  )\n}\n\nexport default AppContainer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldError\":\"formControl_fieldError__1ytsd\",\"formError\":\"formControl_formError__ujNm0\"};","export const emailValidator = (value: string) => {\r\n    let error;\r\n    const maxLength = maxLengthCreator(30)\r\n    error = maxLength(value)\r\n    error = error || required(value) \r\n     if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = error || 'Invalid email address';\r\n    } \r\n    return error;\r\n}\r\n\r\nexport const reqAndMaxLValCreator = (MaxLength: number) => {\r\n    return (value: string) => {\r\n        let error;\r\n        const maxLength = maxLengthCreator(MaxLength)\r\n        error = maxLength(value)\r\n        error = error || required(value) \r\n        return error\r\n    }\r\n}\r\n\r\nexport const required = (value: string) => {\r\n    let error;\r\n    if(!value) {\r\n        error = 'filed is required'\r\n    }\r\n    return error;\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number) => (value: string) => {\r\n    let error;\r\n    if (value && value.length > maxLength) {\r\n        error = `Max length is ${maxLength}`\r\n    }\r\n    return error;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileDataForm_form__2dZBI\",\"buttonAndPre\":\"ProfileDataForm_buttonAndPre__3jh04\",\"formItem\":\"ProfileDataForm_formItem__16xpv\",\"contacts\":\"ProfileDataForm_contacts__6VFH2\",\"contactsHeader\":\"ProfileDataForm_contactsHeader__2CgVR\",\"contact\":\"ProfileDataForm_contact__3m3Su\",\"SendButton\":\"ProfileDataForm_SendButton__1imWj\",\"closeIcon\":\"ProfileDataForm_closeIcon__2-5UX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__3ModP\",\"userInfo\":\"User_userInfo__nNP59\",\"rightBlock\":\"User_rightBlock__255QJ\",\"button\":\"User_button__bxhvM\",\"leftBlock\":\"User_leftBlock__-K_ls\",\"status\":\"User_status__1h0yh\",\"userName\":\"User_userName__3d00A\",\"bottomLine\":\"User_bottomLine__lrGqs\"};","export default __webpack_public_path__ + \"static/media/img.4e5df239.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileData\":\"ProfileData_profileData__O_014\",\"userNameAndStatus\":\"ProfileData_userNameAndStatus__2Gc-a\",\"userName\":\"ProfileData_userName__1Ekr2\",\"aboutMe\":\"ProfileData_aboutMe__y2SWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"SideBar_sidebar__3EBIU\",\"sidebarBottom\":\"SideBar_sidebarBottom__1NvTj\",\"userPhoto\":\"SideBar_userPhoto__Leu0y\",\"userName\":\"SideBar_userName__3NIFf\",\"viewP\":\"SideBar_viewP__34Y20\",\"sidebarTop\":\"SideBar_sidebarTop__2crVr\"};"],"sourceRoot":""}